
DIGITAL_CLOCK.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000656e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000126  00800060  0000656e  00006602  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000002a  00800186  00800186  00006728  2**0
                  ALLOC
  3 .stab         00004524  00000000  00000000  00006728  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000015be  00000000  00000000  0000ac4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  0000c20a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  0000c34a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  0000c4ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  0000e103  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  0000efee  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  0000fd9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  0000fefc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00010189  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00010957  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 91 30 	jmp	0x6122	; 0x6122 <__vector_4>
      14:	0c 94 c4 30 	jmp	0x6188	; 0x6188 <__vector_5>
      18:	0c 94 f7 30 	jmp	0x61ee	; 0x61ee <__vector_6>
      1c:	0c 94 2a 31 	jmp	0x6254	; 0x6254 <__vector_7>
      20:	0c 94 5d 31 	jmp	0x62ba	; 0x62ba <__vector_8>
      24:	0c 94 90 31 	jmp	0x6320	; 0x6320 <__vector_9>
      28:	0c 94 c3 31 	jmp	0x6386	; 0x6386 <__vector_10>
      2c:	0c 94 f6 31 	jmp	0x63ec	; 0x63ec <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e6       	ldi	r30, 0x6E	; 110
      68:	f5 e6       	ldi	r31, 0x65	; 101
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a6 38       	cpi	r26, 0x86	; 134
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a6 e8       	ldi	r26, 0x86	; 134
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a0 3b       	cpi	r26, 0xB0	; 176
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 a3 05 	call	0xb46	; 0xb46 <main>
      8a:	0c 94 b5 32 	jmp	0x656a	; 0x656a <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 7e 32 	jmp	0x64fc	; 0x64fc <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a2 e2       	ldi	r26, 0x22	; 34
     128:	b1 e0       	ldi	r27, 0x01	; 1
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 9a 32 	jmp	0x6534	; 0x6534 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 8a 32 	jmp	0x6514	; 0x6514 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 a6 32 	jmp	0x654c	; 0x654c <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 8a 32 	jmp	0x6514	; 0x6514 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 a6 32 	jmp	0x654c	; 0x654c <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 7e 32 	jmp	0x64fc	; 0x64fc <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	82 e2       	ldi	r24, 0x22	; 34
     496:	91 e0       	ldi	r25, 0x01	; 1
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 9a 32 	jmp	0x6534	; 0x6534 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 8a 32 	jmp	0x6514	; 0x6514 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 a6 32 	jmp	0x654c	; 0x654c <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 8a 32 	jmp	0x6514	; 0x6514 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 a6 32 	jmp	0x654c	; 0x654c <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 8a 32 	jmp	0x6514	; 0x6514 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 a6 32 	jmp	0x654c	; 0x654c <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 8e 32 	jmp	0x651c	; 0x651c <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 aa 32 	jmp	0x6554	; 0x6554 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <main>:

void GetTime(void);


void main(void)
{
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	cd b7       	in	r28, 0x3d	; 61
     b4c:	de b7       	in	r29, 0x3e	; 62
     b4e:	ce 50       	subi	r28, 0x0E	; 14
     b50:	d1 40       	sbci	r29, 0x01	; 1
     b52:	0f b6       	in	r0, 0x3f	; 63
     b54:	f8 94       	cli
     b56:	de bf       	out	0x3e, r29	; 62
     b58:	0f be       	out	0x3f, r0	; 63
     b5a:	cd bf       	out	0x3d, r28	; 61
	//Initializations
	u8 u8Str0[] = "     SETUP      "; //Icon1
     b5c:	9e 01       	movw	r18, r28
     b5e:	2f 5f       	subi	r18, 0xFF	; 255
     b60:	3f 4f       	sbci	r19, 0xFF	; 255
     b62:	c3 52       	subi	r28, 0x23	; 35
     b64:	df 4f       	sbci	r29, 0xFF	; 255
     b66:	39 83       	std	Y+1, r19	; 0x01
     b68:	28 83       	st	Y, r18
     b6a:	cd 5d       	subi	r28, 0xDD	; 221
     b6c:	d0 40       	sbci	r29, 0x00	; 0
     b6e:	87 e6       	ldi	r24, 0x67	; 103
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	c1 52       	subi	r28, 0x21	; 33
     b74:	df 4f       	sbci	r29, 0xFF	; 255
     b76:	99 83       	std	Y+1, r25	; 0x01
     b78:	88 83       	st	Y, r24
     b7a:	cf 5d       	subi	r28, 0xDF	; 223
     b7c:	d0 40       	sbci	r29, 0x00	; 0
     b7e:	91 e1       	ldi	r25, 0x11	; 17
     b80:	cf 51       	subi	r28, 0x1F	; 31
     b82:	df 4f       	sbci	r29, 0xFF	; 255
     b84:	98 83       	st	Y, r25
     b86:	c1 5e       	subi	r28, 0xE1	; 225
     b88:	d0 40       	sbci	r29, 0x00	; 0
     b8a:	c1 52       	subi	r28, 0x21	; 33
     b8c:	df 4f       	sbci	r29, 0xFF	; 255
     b8e:	e8 81       	ld	r30, Y
     b90:	f9 81       	ldd	r31, Y+1	; 0x01
     b92:	cf 5d       	subi	r28, 0xDF	; 223
     b94:	d0 40       	sbci	r29, 0x00	; 0
     b96:	00 80       	ld	r0, Z
     b98:	c1 52       	subi	r28, 0x21	; 33
     b9a:	df 4f       	sbci	r29, 0xFF	; 255
     b9c:	28 81       	ld	r18, Y
     b9e:	39 81       	ldd	r19, Y+1	; 0x01
     ba0:	cf 5d       	subi	r28, 0xDF	; 223
     ba2:	d0 40       	sbci	r29, 0x00	; 0
     ba4:	2f 5f       	subi	r18, 0xFF	; 255
     ba6:	3f 4f       	sbci	r19, 0xFF	; 255
     ba8:	c1 52       	subi	r28, 0x21	; 33
     baa:	df 4f       	sbci	r29, 0xFF	; 255
     bac:	39 83       	std	Y+1, r19	; 0x01
     bae:	28 83       	st	Y, r18
     bb0:	cf 5d       	subi	r28, 0xDF	; 223
     bb2:	d0 40       	sbci	r29, 0x00	; 0
     bb4:	c3 52       	subi	r28, 0x23	; 35
     bb6:	df 4f       	sbci	r29, 0xFF	; 255
     bb8:	e8 81       	ld	r30, Y
     bba:	f9 81       	ldd	r31, Y+1	; 0x01
     bbc:	cd 5d       	subi	r28, 0xDD	; 221
     bbe:	d0 40       	sbci	r29, 0x00	; 0
     bc0:	00 82       	st	Z, r0
     bc2:	c3 52       	subi	r28, 0x23	; 35
     bc4:	df 4f       	sbci	r29, 0xFF	; 255
     bc6:	28 81       	ld	r18, Y
     bc8:	39 81       	ldd	r19, Y+1	; 0x01
     bca:	cd 5d       	subi	r28, 0xDD	; 221
     bcc:	d0 40       	sbci	r29, 0x00	; 0
     bce:	2f 5f       	subi	r18, 0xFF	; 255
     bd0:	3f 4f       	sbci	r19, 0xFF	; 255
     bd2:	c3 52       	subi	r28, 0x23	; 35
     bd4:	df 4f       	sbci	r29, 0xFF	; 255
     bd6:	39 83       	std	Y+1, r19	; 0x01
     bd8:	28 83       	st	Y, r18
     bda:	cd 5d       	subi	r28, 0xDD	; 221
     bdc:	d0 40       	sbci	r29, 0x00	; 0
     bde:	cf 51       	subi	r28, 0x1F	; 31
     be0:	df 4f       	sbci	r29, 0xFF	; 255
     be2:	38 81       	ld	r19, Y
     be4:	c1 5e       	subi	r28, 0xE1	; 225
     be6:	d0 40       	sbci	r29, 0x00	; 0
     be8:	31 50       	subi	r19, 0x01	; 1
     bea:	cf 51       	subi	r28, 0x1F	; 31
     bec:	df 4f       	sbci	r29, 0xFF	; 255
     bee:	38 83       	st	Y, r19
     bf0:	c1 5e       	subi	r28, 0xE1	; 225
     bf2:	d0 40       	sbci	r29, 0x00	; 0
     bf4:	cf 51       	subi	r28, 0x1F	; 31
     bf6:	df 4f       	sbci	r29, 0xFF	; 255
     bf8:	88 81       	ld	r24, Y
     bfa:	c1 5e       	subi	r28, 0xE1	; 225
     bfc:	d0 40       	sbci	r29, 0x00	; 0
     bfe:	88 23       	and	r24, r24
     c00:	21 f6       	brne	.-120    	; 0xb8a <main+0x44>
	u8 u8Str1[] = "      TIME      "; //Icon2
     c02:	fe 01       	movw	r30, r28
     c04:	72 96       	adiw	r30, 0x12	; 18
     c06:	ce 51       	subi	r28, 0x1E	; 30
     c08:	df 4f       	sbci	r29, 0xFF	; 255
     c0a:	f9 83       	std	Y+1, r31	; 0x01
     c0c:	e8 83       	st	Y, r30
     c0e:	c2 5e       	subi	r28, 0xE2	; 226
     c10:	d0 40       	sbci	r29, 0x00	; 0
     c12:	28 e7       	ldi	r18, 0x78	; 120
     c14:	30 e0       	ldi	r19, 0x00	; 0
     c16:	cc 51       	subi	r28, 0x1C	; 28
     c18:	df 4f       	sbci	r29, 0xFF	; 255
     c1a:	39 83       	std	Y+1, r19	; 0x01
     c1c:	28 83       	st	Y, r18
     c1e:	c4 5e       	subi	r28, 0xE4	; 228
     c20:	d0 40       	sbci	r29, 0x00	; 0
     c22:	31 e1       	ldi	r19, 0x11	; 17
     c24:	ca 51       	subi	r28, 0x1A	; 26
     c26:	df 4f       	sbci	r29, 0xFF	; 255
     c28:	38 83       	st	Y, r19
     c2a:	c6 5e       	subi	r28, 0xE6	; 230
     c2c:	d0 40       	sbci	r29, 0x00	; 0
     c2e:	cc 51       	subi	r28, 0x1C	; 28
     c30:	df 4f       	sbci	r29, 0xFF	; 255
     c32:	e8 81       	ld	r30, Y
     c34:	f9 81       	ldd	r31, Y+1	; 0x01
     c36:	c4 5e       	subi	r28, 0xE4	; 228
     c38:	d0 40       	sbci	r29, 0x00	; 0
     c3a:	00 80       	ld	r0, Z
     c3c:	cc 51       	subi	r28, 0x1C	; 28
     c3e:	df 4f       	sbci	r29, 0xFF	; 255
     c40:	28 81       	ld	r18, Y
     c42:	39 81       	ldd	r19, Y+1	; 0x01
     c44:	c4 5e       	subi	r28, 0xE4	; 228
     c46:	d0 40       	sbci	r29, 0x00	; 0
     c48:	2f 5f       	subi	r18, 0xFF	; 255
     c4a:	3f 4f       	sbci	r19, 0xFF	; 255
     c4c:	cc 51       	subi	r28, 0x1C	; 28
     c4e:	df 4f       	sbci	r29, 0xFF	; 255
     c50:	39 83       	std	Y+1, r19	; 0x01
     c52:	28 83       	st	Y, r18
     c54:	c4 5e       	subi	r28, 0xE4	; 228
     c56:	d0 40       	sbci	r29, 0x00	; 0
     c58:	ce 51       	subi	r28, 0x1E	; 30
     c5a:	df 4f       	sbci	r29, 0xFF	; 255
     c5c:	e8 81       	ld	r30, Y
     c5e:	f9 81       	ldd	r31, Y+1	; 0x01
     c60:	c2 5e       	subi	r28, 0xE2	; 226
     c62:	d0 40       	sbci	r29, 0x00	; 0
     c64:	00 82       	st	Z, r0
     c66:	ce 51       	subi	r28, 0x1E	; 30
     c68:	df 4f       	sbci	r29, 0xFF	; 255
     c6a:	28 81       	ld	r18, Y
     c6c:	39 81       	ldd	r19, Y+1	; 0x01
     c6e:	c2 5e       	subi	r28, 0xE2	; 226
     c70:	d0 40       	sbci	r29, 0x00	; 0
     c72:	2f 5f       	subi	r18, 0xFF	; 255
     c74:	3f 4f       	sbci	r19, 0xFF	; 255
     c76:	ce 51       	subi	r28, 0x1E	; 30
     c78:	df 4f       	sbci	r29, 0xFF	; 255
     c7a:	39 83       	std	Y+1, r19	; 0x01
     c7c:	28 83       	st	Y, r18
     c7e:	c2 5e       	subi	r28, 0xE2	; 226
     c80:	d0 40       	sbci	r29, 0x00	; 0
     c82:	ca 51       	subi	r28, 0x1A	; 26
     c84:	df 4f       	sbci	r29, 0xFF	; 255
     c86:	38 81       	ld	r19, Y
     c88:	c6 5e       	subi	r28, 0xE6	; 230
     c8a:	d0 40       	sbci	r29, 0x00	; 0
     c8c:	31 50       	subi	r19, 0x01	; 1
     c8e:	ca 51       	subi	r28, 0x1A	; 26
     c90:	df 4f       	sbci	r29, 0xFF	; 255
     c92:	38 83       	st	Y, r19
     c94:	c6 5e       	subi	r28, 0xE6	; 230
     c96:	d0 40       	sbci	r29, 0x00	; 0
     c98:	ca 51       	subi	r28, 0x1A	; 26
     c9a:	df 4f       	sbci	r29, 0xFF	; 255
     c9c:	88 81       	ld	r24, Y
     c9e:	c6 5e       	subi	r28, 0xE6	; 230
     ca0:	d0 40       	sbci	r29, 0x00	; 0
     ca2:	88 23       	and	r24, r24
     ca4:	21 f6       	brne	.-120    	; 0xc2e <main+0xe8>
	u8 u8Str2[] = "      DATE      "; //Icon3
     ca6:	fe 01       	movw	r30, r28
     ca8:	b3 96       	adiw	r30, 0x23	; 35
     caa:	c9 51       	subi	r28, 0x19	; 25
     cac:	df 4f       	sbci	r29, 0xFF	; 255
     cae:	f9 83       	std	Y+1, r31	; 0x01
     cb0:	e8 83       	st	Y, r30
     cb2:	c7 5e       	subi	r28, 0xE7	; 231
     cb4:	d0 40       	sbci	r29, 0x00	; 0
     cb6:	29 e8       	ldi	r18, 0x89	; 137
     cb8:	30 e0       	ldi	r19, 0x00	; 0
     cba:	c7 51       	subi	r28, 0x17	; 23
     cbc:	df 4f       	sbci	r29, 0xFF	; 255
     cbe:	39 83       	std	Y+1, r19	; 0x01
     cc0:	28 83       	st	Y, r18
     cc2:	c9 5e       	subi	r28, 0xE9	; 233
     cc4:	d0 40       	sbci	r29, 0x00	; 0
     cc6:	31 e1       	ldi	r19, 0x11	; 17
     cc8:	c5 51       	subi	r28, 0x15	; 21
     cca:	df 4f       	sbci	r29, 0xFF	; 255
     ccc:	38 83       	st	Y, r19
     cce:	cb 5e       	subi	r28, 0xEB	; 235
     cd0:	d0 40       	sbci	r29, 0x00	; 0
     cd2:	c7 51       	subi	r28, 0x17	; 23
     cd4:	df 4f       	sbci	r29, 0xFF	; 255
     cd6:	e8 81       	ld	r30, Y
     cd8:	f9 81       	ldd	r31, Y+1	; 0x01
     cda:	c9 5e       	subi	r28, 0xE9	; 233
     cdc:	d0 40       	sbci	r29, 0x00	; 0
     cde:	00 80       	ld	r0, Z
     ce0:	c7 51       	subi	r28, 0x17	; 23
     ce2:	df 4f       	sbci	r29, 0xFF	; 255
     ce4:	28 81       	ld	r18, Y
     ce6:	39 81       	ldd	r19, Y+1	; 0x01
     ce8:	c9 5e       	subi	r28, 0xE9	; 233
     cea:	d0 40       	sbci	r29, 0x00	; 0
     cec:	2f 5f       	subi	r18, 0xFF	; 255
     cee:	3f 4f       	sbci	r19, 0xFF	; 255
     cf0:	c7 51       	subi	r28, 0x17	; 23
     cf2:	df 4f       	sbci	r29, 0xFF	; 255
     cf4:	39 83       	std	Y+1, r19	; 0x01
     cf6:	28 83       	st	Y, r18
     cf8:	c9 5e       	subi	r28, 0xE9	; 233
     cfa:	d0 40       	sbci	r29, 0x00	; 0
     cfc:	c9 51       	subi	r28, 0x19	; 25
     cfe:	df 4f       	sbci	r29, 0xFF	; 255
     d00:	e8 81       	ld	r30, Y
     d02:	f9 81       	ldd	r31, Y+1	; 0x01
     d04:	c7 5e       	subi	r28, 0xE7	; 231
     d06:	d0 40       	sbci	r29, 0x00	; 0
     d08:	00 82       	st	Z, r0
     d0a:	c9 51       	subi	r28, 0x19	; 25
     d0c:	df 4f       	sbci	r29, 0xFF	; 255
     d0e:	28 81       	ld	r18, Y
     d10:	39 81       	ldd	r19, Y+1	; 0x01
     d12:	c7 5e       	subi	r28, 0xE7	; 231
     d14:	d0 40       	sbci	r29, 0x00	; 0
     d16:	2f 5f       	subi	r18, 0xFF	; 255
     d18:	3f 4f       	sbci	r19, 0xFF	; 255
     d1a:	c9 51       	subi	r28, 0x19	; 25
     d1c:	df 4f       	sbci	r29, 0xFF	; 255
     d1e:	39 83       	std	Y+1, r19	; 0x01
     d20:	28 83       	st	Y, r18
     d22:	c7 5e       	subi	r28, 0xE7	; 231
     d24:	d0 40       	sbci	r29, 0x00	; 0
     d26:	c5 51       	subi	r28, 0x15	; 21
     d28:	df 4f       	sbci	r29, 0xFF	; 255
     d2a:	38 81       	ld	r19, Y
     d2c:	cb 5e       	subi	r28, 0xEB	; 235
     d2e:	d0 40       	sbci	r29, 0x00	; 0
     d30:	31 50       	subi	r19, 0x01	; 1
     d32:	c5 51       	subi	r28, 0x15	; 21
     d34:	df 4f       	sbci	r29, 0xFF	; 255
     d36:	38 83       	st	Y, r19
     d38:	cb 5e       	subi	r28, 0xEB	; 235
     d3a:	d0 40       	sbci	r29, 0x00	; 0
     d3c:	c5 51       	subi	r28, 0x15	; 21
     d3e:	df 4f       	sbci	r29, 0xFF	; 255
     d40:	88 81       	ld	r24, Y
     d42:	cb 5e       	subi	r28, 0xEB	; 235
     d44:	d0 40       	sbci	r29, 0x00	; 0
     d46:	88 23       	and	r24, r24
     d48:	21 f6       	brne	.-120    	; 0xcd2 <main+0x18c>
	u8 u8Str3[] = "   STOPWATCH    "; //Icon4
     d4a:	fe 01       	movw	r30, r28
     d4c:	f4 96       	adiw	r30, 0x34	; 52
     d4e:	c4 51       	subi	r28, 0x14	; 20
     d50:	df 4f       	sbci	r29, 0xFF	; 255
     d52:	f9 83       	std	Y+1, r31	; 0x01
     d54:	e8 83       	st	Y, r30
     d56:	cc 5e       	subi	r28, 0xEC	; 236
     d58:	d0 40       	sbci	r29, 0x00	; 0
     d5a:	2a e9       	ldi	r18, 0x9A	; 154
     d5c:	30 e0       	ldi	r19, 0x00	; 0
     d5e:	c2 51       	subi	r28, 0x12	; 18
     d60:	df 4f       	sbci	r29, 0xFF	; 255
     d62:	39 83       	std	Y+1, r19	; 0x01
     d64:	28 83       	st	Y, r18
     d66:	ce 5e       	subi	r28, 0xEE	; 238
     d68:	d0 40       	sbci	r29, 0x00	; 0
     d6a:	31 e1       	ldi	r19, 0x11	; 17
     d6c:	c0 51       	subi	r28, 0x10	; 16
     d6e:	df 4f       	sbci	r29, 0xFF	; 255
     d70:	38 83       	st	Y, r19
     d72:	c0 5f       	subi	r28, 0xF0	; 240
     d74:	d0 40       	sbci	r29, 0x00	; 0
     d76:	c2 51       	subi	r28, 0x12	; 18
     d78:	df 4f       	sbci	r29, 0xFF	; 255
     d7a:	e8 81       	ld	r30, Y
     d7c:	f9 81       	ldd	r31, Y+1	; 0x01
     d7e:	ce 5e       	subi	r28, 0xEE	; 238
     d80:	d0 40       	sbci	r29, 0x00	; 0
     d82:	00 80       	ld	r0, Z
     d84:	c2 51       	subi	r28, 0x12	; 18
     d86:	df 4f       	sbci	r29, 0xFF	; 255
     d88:	28 81       	ld	r18, Y
     d8a:	39 81       	ldd	r19, Y+1	; 0x01
     d8c:	ce 5e       	subi	r28, 0xEE	; 238
     d8e:	d0 40       	sbci	r29, 0x00	; 0
     d90:	2f 5f       	subi	r18, 0xFF	; 255
     d92:	3f 4f       	sbci	r19, 0xFF	; 255
     d94:	c2 51       	subi	r28, 0x12	; 18
     d96:	df 4f       	sbci	r29, 0xFF	; 255
     d98:	39 83       	std	Y+1, r19	; 0x01
     d9a:	28 83       	st	Y, r18
     d9c:	ce 5e       	subi	r28, 0xEE	; 238
     d9e:	d0 40       	sbci	r29, 0x00	; 0
     da0:	c4 51       	subi	r28, 0x14	; 20
     da2:	df 4f       	sbci	r29, 0xFF	; 255
     da4:	e8 81       	ld	r30, Y
     da6:	f9 81       	ldd	r31, Y+1	; 0x01
     da8:	cc 5e       	subi	r28, 0xEC	; 236
     daa:	d0 40       	sbci	r29, 0x00	; 0
     dac:	00 82       	st	Z, r0
     dae:	c4 51       	subi	r28, 0x14	; 20
     db0:	df 4f       	sbci	r29, 0xFF	; 255
     db2:	28 81       	ld	r18, Y
     db4:	39 81       	ldd	r19, Y+1	; 0x01
     db6:	cc 5e       	subi	r28, 0xEC	; 236
     db8:	d0 40       	sbci	r29, 0x00	; 0
     dba:	2f 5f       	subi	r18, 0xFF	; 255
     dbc:	3f 4f       	sbci	r19, 0xFF	; 255
     dbe:	c4 51       	subi	r28, 0x14	; 20
     dc0:	df 4f       	sbci	r29, 0xFF	; 255
     dc2:	39 83       	std	Y+1, r19	; 0x01
     dc4:	28 83       	st	Y, r18
     dc6:	cc 5e       	subi	r28, 0xEC	; 236
     dc8:	d0 40       	sbci	r29, 0x00	; 0
     dca:	c0 51       	subi	r28, 0x10	; 16
     dcc:	df 4f       	sbci	r29, 0xFF	; 255
     dce:	38 81       	ld	r19, Y
     dd0:	c0 5f       	subi	r28, 0xF0	; 240
     dd2:	d0 40       	sbci	r29, 0x00	; 0
     dd4:	31 50       	subi	r19, 0x01	; 1
     dd6:	c0 51       	subi	r28, 0x10	; 16
     dd8:	df 4f       	sbci	r29, 0xFF	; 255
     dda:	38 83       	st	Y, r19
     ddc:	c0 5f       	subi	r28, 0xF0	; 240
     dde:	d0 40       	sbci	r29, 0x00	; 0
     de0:	c0 51       	subi	r28, 0x10	; 16
     de2:	df 4f       	sbci	r29, 0xFF	; 255
     de4:	88 81       	ld	r24, Y
     de6:	c0 5f       	subi	r28, 0xF0	; 240
     de8:	d0 40       	sbci	r29, 0x00	; 0
     dea:	88 23       	and	r24, r24
     dec:	21 f6       	brne	.-120    	; 0xd76 <main+0x230>
	u8 u8Str4[] = "     ALARM      "; //Icon5
     dee:	ce 01       	movw	r24, r28
     df0:	8b 5b       	subi	r24, 0xBB	; 187
     df2:	9f 4f       	sbci	r25, 0xFF	; 255
     df4:	cf 50       	subi	r28, 0x0F	; 15
     df6:	df 4f       	sbci	r29, 0xFF	; 255
     df8:	99 83       	std	Y+1, r25	; 0x01
     dfa:	88 83       	st	Y, r24
     dfc:	c1 5f       	subi	r28, 0xF1	; 241
     dfe:	d0 40       	sbci	r29, 0x00	; 0
     e00:	eb ea       	ldi	r30, 0xAB	; 171
     e02:	f0 e0       	ldi	r31, 0x00	; 0
     e04:	cd 50       	subi	r28, 0x0D	; 13
     e06:	df 4f       	sbci	r29, 0xFF	; 255
     e08:	f9 83       	std	Y+1, r31	; 0x01
     e0a:	e8 83       	st	Y, r30
     e0c:	c3 5f       	subi	r28, 0xF3	; 243
     e0e:	d0 40       	sbci	r29, 0x00	; 0
     e10:	f1 e1       	ldi	r31, 0x11	; 17
     e12:	cb 50       	subi	r28, 0x0B	; 11
     e14:	df 4f       	sbci	r29, 0xFF	; 255
     e16:	f8 83       	st	Y, r31
     e18:	c5 5f       	subi	r28, 0xF5	; 245
     e1a:	d0 40       	sbci	r29, 0x00	; 0
     e1c:	cd 50       	subi	r28, 0x0D	; 13
     e1e:	df 4f       	sbci	r29, 0xFF	; 255
     e20:	e8 81       	ld	r30, Y
     e22:	f9 81       	ldd	r31, Y+1	; 0x01
     e24:	c3 5f       	subi	r28, 0xF3	; 243
     e26:	d0 40       	sbci	r29, 0x00	; 0
     e28:	00 80       	ld	r0, Z
     e2a:	cd 50       	subi	r28, 0x0D	; 13
     e2c:	df 4f       	sbci	r29, 0xFF	; 255
     e2e:	28 81       	ld	r18, Y
     e30:	39 81       	ldd	r19, Y+1	; 0x01
     e32:	c3 5f       	subi	r28, 0xF3	; 243
     e34:	d0 40       	sbci	r29, 0x00	; 0
     e36:	2f 5f       	subi	r18, 0xFF	; 255
     e38:	3f 4f       	sbci	r19, 0xFF	; 255
     e3a:	cd 50       	subi	r28, 0x0D	; 13
     e3c:	df 4f       	sbci	r29, 0xFF	; 255
     e3e:	39 83       	std	Y+1, r19	; 0x01
     e40:	28 83       	st	Y, r18
     e42:	c3 5f       	subi	r28, 0xF3	; 243
     e44:	d0 40       	sbci	r29, 0x00	; 0
     e46:	cf 50       	subi	r28, 0x0F	; 15
     e48:	df 4f       	sbci	r29, 0xFF	; 255
     e4a:	e8 81       	ld	r30, Y
     e4c:	f9 81       	ldd	r31, Y+1	; 0x01
     e4e:	c1 5f       	subi	r28, 0xF1	; 241
     e50:	d0 40       	sbci	r29, 0x00	; 0
     e52:	00 82       	st	Z, r0
     e54:	cf 50       	subi	r28, 0x0F	; 15
     e56:	df 4f       	sbci	r29, 0xFF	; 255
     e58:	28 81       	ld	r18, Y
     e5a:	39 81       	ldd	r19, Y+1	; 0x01
     e5c:	c1 5f       	subi	r28, 0xF1	; 241
     e5e:	d0 40       	sbci	r29, 0x00	; 0
     e60:	2f 5f       	subi	r18, 0xFF	; 255
     e62:	3f 4f       	sbci	r19, 0xFF	; 255
     e64:	cf 50       	subi	r28, 0x0F	; 15
     e66:	df 4f       	sbci	r29, 0xFF	; 255
     e68:	39 83       	std	Y+1, r19	; 0x01
     e6a:	28 83       	st	Y, r18
     e6c:	c1 5f       	subi	r28, 0xF1	; 241
     e6e:	d0 40       	sbci	r29, 0x00	; 0
     e70:	cb 50       	subi	r28, 0x0B	; 11
     e72:	df 4f       	sbci	r29, 0xFF	; 255
     e74:	38 81       	ld	r19, Y
     e76:	c5 5f       	subi	r28, 0xF5	; 245
     e78:	d0 40       	sbci	r29, 0x00	; 0
     e7a:	31 50       	subi	r19, 0x01	; 1
     e7c:	cb 50       	subi	r28, 0x0B	; 11
     e7e:	df 4f       	sbci	r29, 0xFF	; 255
     e80:	38 83       	st	Y, r19
     e82:	c5 5f       	subi	r28, 0xF5	; 245
     e84:	d0 40       	sbci	r29, 0x00	; 0
     e86:	cb 50       	subi	r28, 0x0B	; 11
     e88:	df 4f       	sbci	r29, 0xFF	; 255
     e8a:	88 81       	ld	r24, Y
     e8c:	c5 5f       	subi	r28, 0xF5	; 245
     e8e:	d0 40       	sbci	r29, 0x00	; 0
     e90:	88 23       	and	r24, r24
     e92:	21 f6       	brne	.-120    	; 0xe1c <main+0x2d6>
	u8 u8Str5[] = "    ALARM ON    "; //Icon6
     e94:	ce 01       	movw	r24, r28
     e96:	8a 5a       	subi	r24, 0xAA	; 170
     e98:	9f 4f       	sbci	r25, 0xFF	; 255
     e9a:	ca 50       	subi	r28, 0x0A	; 10
     e9c:	df 4f       	sbci	r29, 0xFF	; 255
     e9e:	99 83       	std	Y+1, r25	; 0x01
     ea0:	88 83       	st	Y, r24
     ea2:	c6 5f       	subi	r28, 0xF6	; 246
     ea4:	d0 40       	sbci	r29, 0x00	; 0
     ea6:	ec eb       	ldi	r30, 0xBC	; 188
     ea8:	f0 e0       	ldi	r31, 0x00	; 0
     eaa:	c8 50       	subi	r28, 0x08	; 8
     eac:	df 4f       	sbci	r29, 0xFF	; 255
     eae:	f9 83       	std	Y+1, r31	; 0x01
     eb0:	e8 83       	st	Y, r30
     eb2:	c8 5f       	subi	r28, 0xF8	; 248
     eb4:	d0 40       	sbci	r29, 0x00	; 0
     eb6:	f1 e1       	ldi	r31, 0x11	; 17
     eb8:	c6 50       	subi	r28, 0x06	; 6
     eba:	df 4f       	sbci	r29, 0xFF	; 255
     ebc:	f8 83       	st	Y, r31
     ebe:	ca 5f       	subi	r28, 0xFA	; 250
     ec0:	d0 40       	sbci	r29, 0x00	; 0
     ec2:	c8 50       	subi	r28, 0x08	; 8
     ec4:	df 4f       	sbci	r29, 0xFF	; 255
     ec6:	e8 81       	ld	r30, Y
     ec8:	f9 81       	ldd	r31, Y+1	; 0x01
     eca:	c8 5f       	subi	r28, 0xF8	; 248
     ecc:	d0 40       	sbci	r29, 0x00	; 0
     ece:	00 80       	ld	r0, Z
     ed0:	c8 50       	subi	r28, 0x08	; 8
     ed2:	df 4f       	sbci	r29, 0xFF	; 255
     ed4:	28 81       	ld	r18, Y
     ed6:	39 81       	ldd	r19, Y+1	; 0x01
     ed8:	c8 5f       	subi	r28, 0xF8	; 248
     eda:	d0 40       	sbci	r29, 0x00	; 0
     edc:	2f 5f       	subi	r18, 0xFF	; 255
     ede:	3f 4f       	sbci	r19, 0xFF	; 255
     ee0:	c8 50       	subi	r28, 0x08	; 8
     ee2:	df 4f       	sbci	r29, 0xFF	; 255
     ee4:	39 83       	std	Y+1, r19	; 0x01
     ee6:	28 83       	st	Y, r18
     ee8:	c8 5f       	subi	r28, 0xF8	; 248
     eea:	d0 40       	sbci	r29, 0x00	; 0
     eec:	ca 50       	subi	r28, 0x0A	; 10
     eee:	df 4f       	sbci	r29, 0xFF	; 255
     ef0:	e8 81       	ld	r30, Y
     ef2:	f9 81       	ldd	r31, Y+1	; 0x01
     ef4:	c6 5f       	subi	r28, 0xF6	; 246
     ef6:	d0 40       	sbci	r29, 0x00	; 0
     ef8:	00 82       	st	Z, r0
     efa:	ca 50       	subi	r28, 0x0A	; 10
     efc:	df 4f       	sbci	r29, 0xFF	; 255
     efe:	28 81       	ld	r18, Y
     f00:	39 81       	ldd	r19, Y+1	; 0x01
     f02:	c6 5f       	subi	r28, 0xF6	; 246
     f04:	d0 40       	sbci	r29, 0x00	; 0
     f06:	2f 5f       	subi	r18, 0xFF	; 255
     f08:	3f 4f       	sbci	r19, 0xFF	; 255
     f0a:	ca 50       	subi	r28, 0x0A	; 10
     f0c:	df 4f       	sbci	r29, 0xFF	; 255
     f0e:	39 83       	std	Y+1, r19	; 0x01
     f10:	28 83       	st	Y, r18
     f12:	c6 5f       	subi	r28, 0xF6	; 246
     f14:	d0 40       	sbci	r29, 0x00	; 0
     f16:	c6 50       	subi	r28, 0x06	; 6
     f18:	df 4f       	sbci	r29, 0xFF	; 255
     f1a:	38 81       	ld	r19, Y
     f1c:	ca 5f       	subi	r28, 0xFA	; 250
     f1e:	d0 40       	sbci	r29, 0x00	; 0
     f20:	31 50       	subi	r19, 0x01	; 1
     f22:	c6 50       	subi	r28, 0x06	; 6
     f24:	df 4f       	sbci	r29, 0xFF	; 255
     f26:	38 83       	st	Y, r19
     f28:	ca 5f       	subi	r28, 0xFA	; 250
     f2a:	d0 40       	sbci	r29, 0x00	; 0
     f2c:	c6 50       	subi	r28, 0x06	; 6
     f2e:	df 4f       	sbci	r29, 0xFF	; 255
     f30:	88 81       	ld	r24, Y
     f32:	ca 5f       	subi	r28, 0xFA	; 250
     f34:	d0 40       	sbci	r29, 0x00	; 0
     f36:	88 23       	and	r24, r24
     f38:	21 f6       	brne	.-120    	; 0xec2 <main+0x37c>
	u8 u8Str6[] = "    ALARM OFF   "; //Icon7
     f3a:	ce 01       	movw	r24, r28
     f3c:	89 59       	subi	r24, 0x99	; 153
     f3e:	9f 4f       	sbci	r25, 0xFF	; 255
     f40:	c5 50       	subi	r28, 0x05	; 5
     f42:	df 4f       	sbci	r29, 0xFF	; 255
     f44:	99 83       	std	Y+1, r25	; 0x01
     f46:	88 83       	st	Y, r24
     f48:	cb 5f       	subi	r28, 0xFB	; 251
     f4a:	d0 40       	sbci	r29, 0x00	; 0
     f4c:	ed ec       	ldi	r30, 0xCD	; 205
     f4e:	f0 e0       	ldi	r31, 0x00	; 0
     f50:	c3 50       	subi	r28, 0x03	; 3
     f52:	df 4f       	sbci	r29, 0xFF	; 255
     f54:	f9 83       	std	Y+1, r31	; 0x01
     f56:	e8 83       	st	Y, r30
     f58:	cd 5f       	subi	r28, 0xFD	; 253
     f5a:	d0 40       	sbci	r29, 0x00	; 0
     f5c:	f1 e1       	ldi	r31, 0x11	; 17
     f5e:	c1 50       	subi	r28, 0x01	; 1
     f60:	df 4f       	sbci	r29, 0xFF	; 255
     f62:	f8 83       	st	Y, r31
     f64:	cf 5f       	subi	r28, 0xFF	; 255
     f66:	d0 40       	sbci	r29, 0x00	; 0
     f68:	c3 50       	subi	r28, 0x03	; 3
     f6a:	df 4f       	sbci	r29, 0xFF	; 255
     f6c:	e8 81       	ld	r30, Y
     f6e:	f9 81       	ldd	r31, Y+1	; 0x01
     f70:	cd 5f       	subi	r28, 0xFD	; 253
     f72:	d0 40       	sbci	r29, 0x00	; 0
     f74:	00 80       	ld	r0, Z
     f76:	c3 50       	subi	r28, 0x03	; 3
     f78:	df 4f       	sbci	r29, 0xFF	; 255
     f7a:	28 81       	ld	r18, Y
     f7c:	39 81       	ldd	r19, Y+1	; 0x01
     f7e:	cd 5f       	subi	r28, 0xFD	; 253
     f80:	d0 40       	sbci	r29, 0x00	; 0
     f82:	2f 5f       	subi	r18, 0xFF	; 255
     f84:	3f 4f       	sbci	r19, 0xFF	; 255
     f86:	c3 50       	subi	r28, 0x03	; 3
     f88:	df 4f       	sbci	r29, 0xFF	; 255
     f8a:	39 83       	std	Y+1, r19	; 0x01
     f8c:	28 83       	st	Y, r18
     f8e:	cd 5f       	subi	r28, 0xFD	; 253
     f90:	d0 40       	sbci	r29, 0x00	; 0
     f92:	c5 50       	subi	r28, 0x05	; 5
     f94:	df 4f       	sbci	r29, 0xFF	; 255
     f96:	e8 81       	ld	r30, Y
     f98:	f9 81       	ldd	r31, Y+1	; 0x01
     f9a:	cb 5f       	subi	r28, 0xFB	; 251
     f9c:	d0 40       	sbci	r29, 0x00	; 0
     f9e:	00 82       	st	Z, r0
     fa0:	c5 50       	subi	r28, 0x05	; 5
     fa2:	df 4f       	sbci	r29, 0xFF	; 255
     fa4:	28 81       	ld	r18, Y
     fa6:	39 81       	ldd	r19, Y+1	; 0x01
     fa8:	cb 5f       	subi	r28, 0xFB	; 251
     faa:	d0 40       	sbci	r29, 0x00	; 0
     fac:	2f 5f       	subi	r18, 0xFF	; 255
     fae:	3f 4f       	sbci	r19, 0xFF	; 255
     fb0:	c5 50       	subi	r28, 0x05	; 5
     fb2:	df 4f       	sbci	r29, 0xFF	; 255
     fb4:	39 83       	std	Y+1, r19	; 0x01
     fb6:	28 83       	st	Y, r18
     fb8:	cb 5f       	subi	r28, 0xFB	; 251
     fba:	d0 40       	sbci	r29, 0x00	; 0
     fbc:	c1 50       	subi	r28, 0x01	; 1
     fbe:	df 4f       	sbci	r29, 0xFF	; 255
     fc0:	38 81       	ld	r19, Y
     fc2:	cf 5f       	subi	r28, 0xFF	; 255
     fc4:	d0 40       	sbci	r29, 0x00	; 0
     fc6:	31 50       	subi	r19, 0x01	; 1
     fc8:	c1 50       	subi	r28, 0x01	; 1
     fca:	df 4f       	sbci	r29, 0xFF	; 255
     fcc:	38 83       	st	Y, r19
     fce:	cf 5f       	subi	r28, 0xFF	; 255
     fd0:	d0 40       	sbci	r29, 0x00	; 0
     fd2:	c1 50       	subi	r28, 0x01	; 1
     fd4:	df 4f       	sbci	r29, 0xFF	; 255
     fd6:	88 81       	ld	r24, Y
     fd8:	cf 5f       	subi	r28, 0xFF	; 255
     fda:	d0 40       	sbci	r29, 0x00	; 0
     fdc:	88 23       	and	r24, r24
     fde:	21 f6       	brne	.-120    	; 0xf68 <main+0x422>
    u8 u8Str7[] = "     TIMER      "; //Icon8
     fe0:	ce 01       	movw	r24, r28
     fe2:	88 58       	subi	r24, 0x88	; 136
     fe4:	9f 4f       	sbci	r25, 0xFF	; 255
     fe6:	c0 50       	subi	r28, 0x00	; 0
     fe8:	df 4f       	sbci	r29, 0xFF	; 255
     fea:	99 83       	std	Y+1, r25	; 0x01
     fec:	88 83       	st	Y, r24
     fee:	c0 50       	subi	r28, 0x00	; 0
     ff0:	d1 40       	sbci	r29, 0x01	; 1
     ff2:	ee ed       	ldi	r30, 0xDE	; 222
     ff4:	f0 e0       	ldi	r31, 0x00	; 0
     ff6:	ce 5f       	subi	r28, 0xFE	; 254
     ff8:	de 4f       	sbci	r29, 0xFE	; 254
     ffa:	f9 83       	std	Y+1, r31	; 0x01
     ffc:	e8 83       	st	Y, r30
     ffe:	c2 50       	subi	r28, 0x02	; 2
    1000:	d1 40       	sbci	r29, 0x01	; 1
    1002:	f1 e1       	ldi	r31, 0x11	; 17
    1004:	cc 5f       	subi	r28, 0xFC	; 252
    1006:	de 4f       	sbci	r29, 0xFE	; 254
    1008:	f8 83       	st	Y, r31
    100a:	c4 50       	subi	r28, 0x04	; 4
    100c:	d1 40       	sbci	r29, 0x01	; 1
    100e:	ce 5f       	subi	r28, 0xFE	; 254
    1010:	de 4f       	sbci	r29, 0xFE	; 254
    1012:	e8 81       	ld	r30, Y
    1014:	f9 81       	ldd	r31, Y+1	; 0x01
    1016:	c2 50       	subi	r28, 0x02	; 2
    1018:	d1 40       	sbci	r29, 0x01	; 1
    101a:	00 80       	ld	r0, Z
    101c:	ce 5f       	subi	r28, 0xFE	; 254
    101e:	de 4f       	sbci	r29, 0xFE	; 254
    1020:	28 81       	ld	r18, Y
    1022:	39 81       	ldd	r19, Y+1	; 0x01
    1024:	c2 50       	subi	r28, 0x02	; 2
    1026:	d1 40       	sbci	r29, 0x01	; 1
    1028:	2f 5f       	subi	r18, 0xFF	; 255
    102a:	3f 4f       	sbci	r19, 0xFF	; 255
    102c:	ce 5f       	subi	r28, 0xFE	; 254
    102e:	de 4f       	sbci	r29, 0xFE	; 254
    1030:	39 83       	std	Y+1, r19	; 0x01
    1032:	28 83       	st	Y, r18
    1034:	c2 50       	subi	r28, 0x02	; 2
    1036:	d1 40       	sbci	r29, 0x01	; 1
    1038:	c0 50       	subi	r28, 0x00	; 0
    103a:	df 4f       	sbci	r29, 0xFF	; 255
    103c:	e8 81       	ld	r30, Y
    103e:	f9 81       	ldd	r31, Y+1	; 0x01
    1040:	c0 50       	subi	r28, 0x00	; 0
    1042:	d1 40       	sbci	r29, 0x01	; 1
    1044:	00 82       	st	Z, r0
    1046:	c0 50       	subi	r28, 0x00	; 0
    1048:	df 4f       	sbci	r29, 0xFF	; 255
    104a:	28 81       	ld	r18, Y
    104c:	39 81       	ldd	r19, Y+1	; 0x01
    104e:	c0 50       	subi	r28, 0x00	; 0
    1050:	d1 40       	sbci	r29, 0x01	; 1
    1052:	2f 5f       	subi	r18, 0xFF	; 255
    1054:	3f 4f       	sbci	r19, 0xFF	; 255
    1056:	c0 50       	subi	r28, 0x00	; 0
    1058:	df 4f       	sbci	r29, 0xFF	; 255
    105a:	39 83       	std	Y+1, r19	; 0x01
    105c:	28 83       	st	Y, r18
    105e:	c0 50       	subi	r28, 0x00	; 0
    1060:	d1 40       	sbci	r29, 0x01	; 1
    1062:	cc 5f       	subi	r28, 0xFC	; 252
    1064:	de 4f       	sbci	r29, 0xFE	; 254
    1066:	38 81       	ld	r19, Y
    1068:	c4 50       	subi	r28, 0x04	; 4
    106a:	d1 40       	sbci	r29, 0x01	; 1
    106c:	31 50       	subi	r19, 0x01	; 1
    106e:	cc 5f       	subi	r28, 0xFC	; 252
    1070:	de 4f       	sbci	r29, 0xFE	; 254
    1072:	38 83       	st	Y, r19
    1074:	c4 50       	subi	r28, 0x04	; 4
    1076:	d1 40       	sbci	r29, 0x01	; 1
    1078:	cc 5f       	subi	r28, 0xFC	; 252
    107a:	de 4f       	sbci	r29, 0xFE	; 254
    107c:	88 81       	ld	r24, Y
    107e:	c4 50       	subi	r28, 0x04	; 4
    1080:	d1 40       	sbci	r29, 0x01	; 1
    1082:	88 23       	and	r24, r24
    1084:	21 f6       	brne	.-120    	; 0x100e <main+0x4c8>
	u8 u8Str8[] = "   TIMER SET    "; //Icon9
    1086:	ce 01       	movw	r24, r28
    1088:	87 57       	subi	r24, 0x77	; 119
    108a:	9f 4f       	sbci	r25, 0xFF	; 255
    108c:	cb 5f       	subi	r28, 0xFB	; 251
    108e:	de 4f       	sbci	r29, 0xFE	; 254
    1090:	99 83       	std	Y+1, r25	; 0x01
    1092:	88 83       	st	Y, r24
    1094:	c5 50       	subi	r28, 0x05	; 5
    1096:	d1 40       	sbci	r29, 0x01	; 1
    1098:	ef ee       	ldi	r30, 0xEF	; 239
    109a:	f0 e0       	ldi	r31, 0x00	; 0
    109c:	c9 5f       	subi	r28, 0xF9	; 249
    109e:	de 4f       	sbci	r29, 0xFE	; 254
    10a0:	f9 83       	std	Y+1, r31	; 0x01
    10a2:	e8 83       	st	Y, r30
    10a4:	c7 50       	subi	r28, 0x07	; 7
    10a6:	d1 40       	sbci	r29, 0x01	; 1
    10a8:	f1 e1       	ldi	r31, 0x11	; 17
    10aa:	c7 5f       	subi	r28, 0xF7	; 247
    10ac:	de 4f       	sbci	r29, 0xFE	; 254
    10ae:	f8 83       	st	Y, r31
    10b0:	c9 50       	subi	r28, 0x09	; 9
    10b2:	d1 40       	sbci	r29, 0x01	; 1
    10b4:	c9 5f       	subi	r28, 0xF9	; 249
    10b6:	de 4f       	sbci	r29, 0xFE	; 254
    10b8:	e8 81       	ld	r30, Y
    10ba:	f9 81       	ldd	r31, Y+1	; 0x01
    10bc:	c7 50       	subi	r28, 0x07	; 7
    10be:	d1 40       	sbci	r29, 0x01	; 1
    10c0:	00 80       	ld	r0, Z
    10c2:	c9 5f       	subi	r28, 0xF9	; 249
    10c4:	de 4f       	sbci	r29, 0xFE	; 254
    10c6:	28 81       	ld	r18, Y
    10c8:	39 81       	ldd	r19, Y+1	; 0x01
    10ca:	c7 50       	subi	r28, 0x07	; 7
    10cc:	d1 40       	sbci	r29, 0x01	; 1
    10ce:	2f 5f       	subi	r18, 0xFF	; 255
    10d0:	3f 4f       	sbci	r19, 0xFF	; 255
    10d2:	c9 5f       	subi	r28, 0xF9	; 249
    10d4:	de 4f       	sbci	r29, 0xFE	; 254
    10d6:	39 83       	std	Y+1, r19	; 0x01
    10d8:	28 83       	st	Y, r18
    10da:	c7 50       	subi	r28, 0x07	; 7
    10dc:	d1 40       	sbci	r29, 0x01	; 1
    10de:	cb 5f       	subi	r28, 0xFB	; 251
    10e0:	de 4f       	sbci	r29, 0xFE	; 254
    10e2:	e8 81       	ld	r30, Y
    10e4:	f9 81       	ldd	r31, Y+1	; 0x01
    10e6:	c5 50       	subi	r28, 0x05	; 5
    10e8:	d1 40       	sbci	r29, 0x01	; 1
    10ea:	00 82       	st	Z, r0
    10ec:	cb 5f       	subi	r28, 0xFB	; 251
    10ee:	de 4f       	sbci	r29, 0xFE	; 254
    10f0:	28 81       	ld	r18, Y
    10f2:	39 81       	ldd	r19, Y+1	; 0x01
    10f4:	c5 50       	subi	r28, 0x05	; 5
    10f6:	d1 40       	sbci	r29, 0x01	; 1
    10f8:	2f 5f       	subi	r18, 0xFF	; 255
    10fa:	3f 4f       	sbci	r19, 0xFF	; 255
    10fc:	cb 5f       	subi	r28, 0xFB	; 251
    10fe:	de 4f       	sbci	r29, 0xFE	; 254
    1100:	39 83       	std	Y+1, r19	; 0x01
    1102:	28 83       	st	Y, r18
    1104:	c5 50       	subi	r28, 0x05	; 5
    1106:	d1 40       	sbci	r29, 0x01	; 1
    1108:	c7 5f       	subi	r28, 0xF7	; 247
    110a:	de 4f       	sbci	r29, 0xFE	; 254
    110c:	38 81       	ld	r19, Y
    110e:	c9 50       	subi	r28, 0x09	; 9
    1110:	d1 40       	sbci	r29, 0x01	; 1
    1112:	31 50       	subi	r19, 0x01	; 1
    1114:	c7 5f       	subi	r28, 0xF7	; 247
    1116:	de 4f       	sbci	r29, 0xFE	; 254
    1118:	38 83       	st	Y, r19
    111a:	c9 50       	subi	r28, 0x09	; 9
    111c:	d1 40       	sbci	r29, 0x01	; 1
    111e:	c7 5f       	subi	r28, 0xF7	; 247
    1120:	de 4f       	sbci	r29, 0xFE	; 254
    1122:	88 81       	ld	r24, Y
    1124:	c9 50       	subi	r28, 0x09	; 9
    1126:	d1 40       	sbci	r29, 0x01	; 1
    1128:	88 23       	and	r24, r24
    112a:	21 f6       	brne	.-120    	; 0x10b4 <main+0x56e>
	u8 u8Str9[] = "   TIMER CLR    "; //Icon10
    112c:	ce 01       	movw	r24, r28
    112e:	86 56       	subi	r24, 0x66	; 102
    1130:	9f 4f       	sbci	r25, 0xFF	; 255
    1132:	c6 5f       	subi	r28, 0xF6	; 246
    1134:	de 4f       	sbci	r29, 0xFE	; 254
    1136:	99 83       	std	Y+1, r25	; 0x01
    1138:	88 83       	st	Y, r24
    113a:	ca 50       	subi	r28, 0x0A	; 10
    113c:	d1 40       	sbci	r29, 0x01	; 1
    113e:	e0 e0       	ldi	r30, 0x00	; 0
    1140:	f1 e0       	ldi	r31, 0x01	; 1
    1142:	c4 5f       	subi	r28, 0xF4	; 244
    1144:	de 4f       	sbci	r29, 0xFE	; 254
    1146:	f9 83       	std	Y+1, r31	; 0x01
    1148:	e8 83       	st	Y, r30
    114a:	cc 50       	subi	r28, 0x0C	; 12
    114c:	d1 40       	sbci	r29, 0x01	; 1
    114e:	f1 e1       	ldi	r31, 0x11	; 17
    1150:	c2 5f       	subi	r28, 0xF2	; 242
    1152:	de 4f       	sbci	r29, 0xFE	; 254
    1154:	f8 83       	st	Y, r31
    1156:	ce 50       	subi	r28, 0x0E	; 14
    1158:	d1 40       	sbci	r29, 0x01	; 1
    115a:	c4 5f       	subi	r28, 0xF4	; 244
    115c:	de 4f       	sbci	r29, 0xFE	; 254
    115e:	e8 81       	ld	r30, Y
    1160:	f9 81       	ldd	r31, Y+1	; 0x01
    1162:	cc 50       	subi	r28, 0x0C	; 12
    1164:	d1 40       	sbci	r29, 0x01	; 1
    1166:	00 80       	ld	r0, Z
    1168:	c4 5f       	subi	r28, 0xF4	; 244
    116a:	de 4f       	sbci	r29, 0xFE	; 254
    116c:	28 81       	ld	r18, Y
    116e:	39 81       	ldd	r19, Y+1	; 0x01
    1170:	cc 50       	subi	r28, 0x0C	; 12
    1172:	d1 40       	sbci	r29, 0x01	; 1
    1174:	2f 5f       	subi	r18, 0xFF	; 255
    1176:	3f 4f       	sbci	r19, 0xFF	; 255
    1178:	c4 5f       	subi	r28, 0xF4	; 244
    117a:	de 4f       	sbci	r29, 0xFE	; 254
    117c:	39 83       	std	Y+1, r19	; 0x01
    117e:	28 83       	st	Y, r18
    1180:	cc 50       	subi	r28, 0x0C	; 12
    1182:	d1 40       	sbci	r29, 0x01	; 1
    1184:	c6 5f       	subi	r28, 0xF6	; 246
    1186:	de 4f       	sbci	r29, 0xFE	; 254
    1188:	e8 81       	ld	r30, Y
    118a:	f9 81       	ldd	r31, Y+1	; 0x01
    118c:	ca 50       	subi	r28, 0x0A	; 10
    118e:	d1 40       	sbci	r29, 0x01	; 1
    1190:	00 82       	st	Z, r0
    1192:	c6 5f       	subi	r28, 0xF6	; 246
    1194:	de 4f       	sbci	r29, 0xFE	; 254
    1196:	28 81       	ld	r18, Y
    1198:	39 81       	ldd	r19, Y+1	; 0x01
    119a:	ca 50       	subi	r28, 0x0A	; 10
    119c:	d1 40       	sbci	r29, 0x01	; 1
    119e:	2f 5f       	subi	r18, 0xFF	; 255
    11a0:	3f 4f       	sbci	r19, 0xFF	; 255
    11a2:	c6 5f       	subi	r28, 0xF6	; 246
    11a4:	de 4f       	sbci	r29, 0xFE	; 254
    11a6:	39 83       	std	Y+1, r19	; 0x01
    11a8:	28 83       	st	Y, r18
    11aa:	ca 50       	subi	r28, 0x0A	; 10
    11ac:	d1 40       	sbci	r29, 0x01	; 1
    11ae:	c2 5f       	subi	r28, 0xF2	; 242
    11b0:	de 4f       	sbci	r29, 0xFE	; 254
    11b2:	38 81       	ld	r19, Y
    11b4:	ce 50       	subi	r28, 0x0E	; 14
    11b6:	d1 40       	sbci	r29, 0x01	; 1
    11b8:	31 50       	subi	r19, 0x01	; 1
    11ba:	c2 5f       	subi	r28, 0xF2	; 242
    11bc:	de 4f       	sbci	r29, 0xFE	; 254
    11be:	38 83       	st	Y, r19
    11c0:	ce 50       	subi	r28, 0x0E	; 14
    11c2:	d1 40       	sbci	r29, 0x01	; 1
    11c4:	c2 5f       	subi	r28, 0xF2	; 242
    11c6:	de 4f       	sbci	r29, 0xFE	; 254
    11c8:	88 81       	ld	r24, Y
    11ca:	ce 50       	subi	r28, 0x0E	; 14
    11cc:	d1 40       	sbci	r29, 0x01	; 1
    11ce:	88 23       	and	r24, r24
    11d0:	21 f6       	brne	.-120    	; 0x115a <main+0x614>
	/* DIO Initialization */
	/* LCD */
	DIO_voidSetPortDir(DIO_PORTC , DIO_PORT_OUTPUT);
    11d2:	82 e0       	ldi	r24, 0x02	; 2
    11d4:	6f ef       	ldi	r22, 0xFF	; 255
    11d6:	0e 94 8d 1f 	call	0x3f1a	; 0x3f1a <DIO_voidSetPortDir>
	DIO_voidSetPinDir(DIO_PORTD ,DIO_PIN0 ,DIO_OUTPUT);
    11da:	83 e0       	ldi	r24, 0x03	; 3
    11dc:	60 e0       	ldi	r22, 0x00	; 0
    11de:	41 e0       	ldi	r20, 0x01	; 1
    11e0:	0e 94 7d 1d 	call	0x3afa	; 0x3afa <DIO_voidSetPinDir>
	DIO_voidSetPinDir(DIO_PORTD ,DIO_PIN1 ,DIO_OUTPUT);
    11e4:	83 e0       	ldi	r24, 0x03	; 3
    11e6:	61 e0       	ldi	r22, 0x01	; 1
    11e8:	41 e0       	ldi	r20, 0x01	; 1
    11ea:	0e 94 7d 1d 	call	0x3afa	; 0x3afa <DIO_voidSetPinDir>
	DIO_voidSetPinDir(DIO_PORTD ,DIO_PIN2 ,DIO_OUTPUT);
    11ee:	83 e0       	ldi	r24, 0x03	; 3
    11f0:	62 e0       	ldi	r22, 0x02	; 2
    11f2:	41 e0       	ldi	r20, 0x01	; 1
    11f4:	0e 94 7d 1d 	call	0x3afa	; 0x3afa <DIO_voidSetPinDir>
	/* KPD*/
	DIO_voidSetPinDir(DIO_PORTB ,DIO_PIN0 ,DIO_OUTPUT);
    11f8:	81 e0       	ldi	r24, 0x01	; 1
    11fa:	60 e0       	ldi	r22, 0x00	; 0
    11fc:	41 e0       	ldi	r20, 0x01	; 1
    11fe:	0e 94 7d 1d 	call	0x3afa	; 0x3afa <DIO_voidSetPinDir>
	DIO_voidSetPinDir(DIO_PORTB ,DIO_PIN1 ,DIO_OUTPUT);
    1202:	81 e0       	ldi	r24, 0x01	; 1
    1204:	61 e0       	ldi	r22, 0x01	; 1
    1206:	41 e0       	ldi	r20, 0x01	; 1
    1208:	0e 94 7d 1d 	call	0x3afa	; 0x3afa <DIO_voidSetPinDir>
	DIO_voidSetPinDir(DIO_PORTB ,DIO_PIN2 ,DIO_OUTPUT);
    120c:	81 e0       	ldi	r24, 0x01	; 1
    120e:	62 e0       	ldi	r22, 0x02	; 2
    1210:	41 e0       	ldi	r20, 0x01	; 1
    1212:	0e 94 7d 1d 	call	0x3afa	; 0x3afa <DIO_voidSetPinDir>
	DIO_voidSetPinDir(DIO_PORTB ,DIO_PIN3 ,DIO_INPUT);
    1216:	81 e0       	ldi	r24, 0x01	; 1
    1218:	63 e0       	ldi	r22, 0x03	; 3
    121a:	40 e0       	ldi	r20, 0x00	; 0
    121c:	0e 94 7d 1d 	call	0x3afa	; 0x3afa <DIO_voidSetPinDir>
	DIO_voidSetPinDir(DIO_PORTB ,DIO_PIN4 ,DIO_INPUT);
    1220:	81 e0       	ldi	r24, 0x01	; 1
    1222:	64 e0       	ldi	r22, 0x04	; 4
    1224:	40 e0       	ldi	r20, 0x00	; 0
    1226:	0e 94 7d 1d 	call	0x3afa	; 0x3afa <DIO_voidSetPinDir>
	DIO_voidSetPortVal(DIO_PORTB ,DIO_PORT_HIGH);
    122a:	81 e0       	ldi	r24, 0x01	; 1
    122c:	6f ef       	ldi	r22, 0xFF	; 255
    122e:	0e 94 d1 1f 	call	0x3fa2	; 0x3fa2 <DIO_voidSetPortVal>
	/* BUZZER */
	DIO_voidSetPinDir(DIO_PORTB ,DIO_PIN7 ,DIO_OUTPUT);
    1232:	81 e0       	ldi	r24, 0x01	; 1
    1234:	67 e0       	ldi	r22, 0x07	; 7
    1236:	41 e0       	ldi	r20, 0x01	; 1
    1238:	0e 94 7d 1d 	call	0x3afa	; 0x3afa <DIO_voidSetPinDir>
	DIO_voidSetPinVal(DIO_PORTB ,DIO_PIN7 ,DIO_LOW);
    123c:	81 e0       	ldi	r24, 0x01	; 1
    123e:	67 e0       	ldi	r22, 0x07	; 7
    1240:	40 e0       	ldi	r20, 0x00	; 0
    1242:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <DIO_voidSetPinVal>

	/* LCD Initialization */
	LCD_voidCreateChar(au8AlarmSymbol , LCD_CUSTOM_CHAR1);
    1246:	82 e3       	ldi	r24, 0x32	; 50
    1248:	91 e0       	ldi	r25, 0x01	; 1
    124a:	60 e0       	ldi	r22, 0x00	; 0
    124c:	0e 94 99 27 	call	0x4f32	; 0x4f32 <LCD_voidCreateChar>
	LCD_voidCreateChar(au8TimerSymbol , LCD_CUSTOM_CHAR2);
    1250:	8a e3       	ldi	r24, 0x3A	; 58
    1252:	91 e0       	ldi	r25, 0x01	; 1
    1254:	61 e0       	ldi	r22, 0x01	; 1
    1256:	0e 94 99 27 	call	0x4f32	; 0x4f32 <LCD_voidCreateChar>
	LCD_voidInit();
    125a:	0e 94 fd 21 	call	0x43fa	; 0x43fa <LCD_voidInit>
	LCD_voidClearDisplay();
    125e:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
	/* TIMER Initialization */
	TIMER0_voidInit();
    1262:	0e 94 71 2a 	call	0x54e2	; 0x54e2 <TIMER0_voidInit>
	TIMER_voidCallBack(GetTime,TIMER0_CTC_VECTOR);
    1266:	8b e3       	ldi	r24, 0x3B	; 59
    1268:	9d e1       	ldi	r25, 0x1D	; 29
    126a:	61 e0       	ldi	r22, 0x01	; 1
    126c:	0e 94 6f 30 	call	0x60de	; 0x60de <TIMER_voidCallBack>

	/* GLOBAL INTERRUPT Initialization */
	GLOBINT_voidEnable();
    1270:	0e 94 1b 21 	call	0x4236	; 0x4236 <GLOBINT_voidEnable>


	//LOOP
	while(1)
	{
		u8Key = KPD_u8GetKeyPressed();
    1274:	0e 94 37 21 	call	0x426e	; 0x426e <KPD_u8GetKeyPressed>
    1278:	80 93 8c 01 	sts	0x018C, r24
		/* Time */
		if (u8Seconds > 59)
    127c:	80 91 89 01 	lds	r24, 0x0189
    1280:	8c 33       	cpi	r24, 0x3C	; 60
    1282:	38 f0       	brcs	.+14     	; 0x1292 <main+0x74c>
		{
			u8Seconds = 0;
    1284:	10 92 89 01 	sts	0x0189, r1
			u8Minutes++;
    1288:	80 91 8a 01 	lds	r24, 0x018A
    128c:	8f 5f       	subi	r24, 0xFF	; 255
    128e:	80 93 8a 01 	sts	0x018A, r24
		}

		if(u8Minutes > 59)
    1292:	80 91 8a 01 	lds	r24, 0x018A
    1296:	8c 33       	cpi	r24, 0x3C	; 60
    1298:	38 f0       	brcs	.+14     	; 0x12a8 <main+0x762>
		{
			u8Minutes = 0;
    129a:	10 92 8a 01 	sts	0x018A, r1
			u8Hours ++ ;
    129e:	80 91 2a 01 	lds	r24, 0x012A
    12a2:	8f 5f       	subi	r24, 0xFF	; 255
    12a4:	80 93 2a 01 	sts	0x012A, r24
		}

		if((u8Hours == 12) && (u8Minutes == 0) && (u8Seconds == 0))
    12a8:	80 91 2a 01 	lds	r24, 0x012A
    12ac:	8c 30       	cpi	r24, 0x0C	; 12
    12ae:	f9 f4       	brne	.+62     	; 0x12ee <main+0x7a8>
    12b0:	80 91 8a 01 	lds	r24, 0x018A
    12b4:	88 23       	and	r24, r24
    12b6:	d9 f4       	brne	.+54     	; 0x12ee <main+0x7a8>
    12b8:	80 91 89 01 	lds	r24, 0x0189
    12bc:	88 23       	and	r24, r24
    12be:	b9 f4       	brne	.+46     	; 0x12ee <main+0x7a8>
		{
			if(u8TimeChange == 0 )
    12c0:	80 91 90 01 	lds	r24, 0x0190
    12c4:	88 23       	and	r24, r24
    12c6:	a9 f4       	brne	.+42     	; 0x12f2 <main+0x7ac>
			{
				if (u8TimeForm == 1)
    12c8:	80 91 8e 01 	lds	r24, 0x018E
    12cc:	81 30       	cpi	r24, 0x01	; 1
    12ce:	19 f4       	brne	.+6      	; 0x12d6 <main+0x790>
				{
					u8TimeForm = 0;
    12d0:	10 92 8e 01 	sts	0x018E, r1
    12d4:	08 c0       	rjmp	.+16     	; 0x12e6 <main+0x7a0>
				}
				else
				{
					u8TimeForm = 1;
    12d6:	81 e0       	ldi	r24, 0x01	; 1
    12d8:	80 93 8e 01 	sts	0x018E, r24
					u8Day++;
    12dc:	80 91 2b 01 	lds	r24, 0x012B
    12e0:	8f 5f       	subi	r24, 0xFF	; 255
    12e2:	80 93 2b 01 	sts	0x012B, r24
				}
				u8TimeChange = 1;
    12e6:	81 e0       	ldi	r24, 0x01	; 1
    12e8:	80 93 90 01 	sts	0x0190, r24
    12ec:	02 c0       	rjmp	.+4      	; 0x12f2 <main+0x7ac>
			}
		}
		else u8TimeChange = 0;
    12ee:	10 92 90 01 	sts	0x0190, r1

		if(u8Hours > 12)
    12f2:	80 91 2a 01 	lds	r24, 0x012A
    12f6:	8d 30       	cpi	r24, 0x0D	; 13
    12f8:	18 f0       	brcs	.+6      	; 0x1300 <main+0x7ba>
		{
			u8Hours = 1;
    12fa:	81 e0       	ldi	r24, 0x01	; 1
    12fc:	80 93 2a 01 	sts	0x012A, r24
		}
//---------------------------------------------------------------------------------------------------------------------------------------------------------
		/* Date */
		if (u8Day <= 32)
    1300:	80 91 2b 01 	lds	r24, 0x012B
    1304:	81 32       	cpi	r24, 0x21	; 33
    1306:	08 f0       	brcs	.+2      	; 0x130a <main+0x7c4>
    1308:	77 c0       	rjmp	.+238    	; 0x13f8 <main+0x8b2>
		{
			if ((u8Day == 30) && (u8Month == FEB) &&(u16Year % 4 == 0 ))
    130a:	80 91 2b 01 	lds	r24, 0x012B
    130e:	8e 31       	cpi	r24, 0x1E	; 30
    1310:	a9 f4       	brne	.+42     	; 0x133c <main+0x7f6>
    1312:	80 91 8b 01 	lds	r24, 0x018B
    1316:	81 30       	cpi	r24, 0x01	; 1
    1318:	89 f4       	brne	.+34     	; 0x133c <main+0x7f6>
    131a:	80 91 7e 01 	lds	r24, 0x017E
    131e:	90 91 7f 01 	lds	r25, 0x017F
    1322:	83 70       	andi	r24, 0x03	; 3
    1324:	90 70       	andi	r25, 0x00	; 0
    1326:	00 97       	sbiw	r24, 0x00	; 0
    1328:	49 f4       	brne	.+18     	; 0x133c <main+0x7f6>
			{
				u8Day = 1;
    132a:	81 e0       	ldi	r24, 0x01	; 1
    132c:	80 93 2b 01 	sts	0x012B, r24
				u8Month++;
    1330:	80 91 8b 01 	lds	r24, 0x018B
    1334:	8f 5f       	subi	r24, 0xFF	; 255
    1336:	80 93 8b 01 	sts	0x018B, r24
    133a:	5e c0       	rjmp	.+188    	; 0x13f8 <main+0x8b2>
			}
			else if((u8Day == 29) && (u8Month == FEB) &&(u16Year % 4 != 0 ))
    133c:	80 91 2b 01 	lds	r24, 0x012B
    1340:	8d 31       	cpi	r24, 0x1D	; 29
    1342:	a9 f4       	brne	.+42     	; 0x136e <main+0x828>
    1344:	80 91 8b 01 	lds	r24, 0x018B
    1348:	81 30       	cpi	r24, 0x01	; 1
    134a:	89 f4       	brne	.+34     	; 0x136e <main+0x828>
    134c:	80 91 7e 01 	lds	r24, 0x017E
    1350:	90 91 7f 01 	lds	r25, 0x017F
    1354:	83 70       	andi	r24, 0x03	; 3
    1356:	90 70       	andi	r25, 0x00	; 0
    1358:	00 97       	sbiw	r24, 0x00	; 0
    135a:	49 f0       	breq	.+18     	; 0x136e <main+0x828>
			{
				u8Day = 1;
    135c:	81 e0       	ldi	r24, 0x01	; 1
    135e:	80 93 2b 01 	sts	0x012B, r24
				u8Month++;
    1362:	80 91 8b 01 	lds	r24, 0x018B
    1366:	8f 5f       	subi	r24, 0xFF	; 255
    1368:	80 93 8b 01 	sts	0x018B, r24
    136c:	45 c0       	rjmp	.+138    	; 0x13f8 <main+0x8b2>
			}
			else if((u8Day == 31) && ((u8Month == APR)||(u8Month == JUN)||(u8Month == SEP)||(u8Month == NOV)))
    136e:	80 91 2b 01 	lds	r24, 0x012B
    1372:	8f 31       	cpi	r24, 0x1F	; 31
    1374:	c9 f4       	brne	.+50     	; 0x13a8 <main+0x862>
    1376:	80 91 8b 01 	lds	r24, 0x018B
    137a:	83 30       	cpi	r24, 0x03	; 3
    137c:	61 f0       	breq	.+24     	; 0x1396 <main+0x850>
    137e:	80 91 8b 01 	lds	r24, 0x018B
    1382:	85 30       	cpi	r24, 0x05	; 5
    1384:	41 f0       	breq	.+16     	; 0x1396 <main+0x850>
    1386:	80 91 8b 01 	lds	r24, 0x018B
    138a:	88 30       	cpi	r24, 0x08	; 8
    138c:	21 f0       	breq	.+8      	; 0x1396 <main+0x850>
    138e:	80 91 8b 01 	lds	r24, 0x018B
    1392:	8a 30       	cpi	r24, 0x0A	; 10
    1394:	49 f4       	brne	.+18     	; 0x13a8 <main+0x862>
			{
				u8Day = 1;
    1396:	81 e0       	ldi	r24, 0x01	; 1
    1398:	80 93 2b 01 	sts	0x012B, r24
				u8Month++;
    139c:	80 91 8b 01 	lds	r24, 0x018B
    13a0:	8f 5f       	subi	r24, 0xFF	; 255
    13a2:	80 93 8b 01 	sts	0x018B, r24
    13a6:	28 c0       	rjmp	.+80     	; 0x13f8 <main+0x8b2>
			}
			else if ((u8Day == 32) && ((u8Month == JAN)||(u8Month == MAR)||(u8Month == MAY)||(u8Month == JUL)||(u8Month == AUG)||(u8Month == OCT)||(u8Month == DEC)))
    13a8:	80 91 2b 01 	lds	r24, 0x012B
    13ac:	80 32       	cpi	r24, 0x20	; 32
    13ae:	21 f5       	brne	.+72     	; 0x13f8 <main+0x8b2>
    13b0:	80 91 8b 01 	lds	r24, 0x018B
    13b4:	88 23       	and	r24, r24
    13b6:	c1 f0       	breq	.+48     	; 0x13e8 <main+0x8a2>
    13b8:	80 91 8b 01 	lds	r24, 0x018B
    13bc:	82 30       	cpi	r24, 0x02	; 2
    13be:	a1 f0       	breq	.+40     	; 0x13e8 <main+0x8a2>
    13c0:	80 91 8b 01 	lds	r24, 0x018B
    13c4:	84 30       	cpi	r24, 0x04	; 4
    13c6:	81 f0       	breq	.+32     	; 0x13e8 <main+0x8a2>
    13c8:	80 91 8b 01 	lds	r24, 0x018B
    13cc:	86 30       	cpi	r24, 0x06	; 6
    13ce:	61 f0       	breq	.+24     	; 0x13e8 <main+0x8a2>
    13d0:	80 91 8b 01 	lds	r24, 0x018B
    13d4:	87 30       	cpi	r24, 0x07	; 7
    13d6:	41 f0       	breq	.+16     	; 0x13e8 <main+0x8a2>
    13d8:	80 91 8b 01 	lds	r24, 0x018B
    13dc:	89 30       	cpi	r24, 0x09	; 9
    13de:	21 f0       	breq	.+8      	; 0x13e8 <main+0x8a2>
    13e0:	80 91 8b 01 	lds	r24, 0x018B
    13e4:	8b 30       	cpi	r24, 0x0B	; 11
    13e6:	41 f4       	brne	.+16     	; 0x13f8 <main+0x8b2>
			{
				u8Day = 1;
    13e8:	81 e0       	ldi	r24, 0x01	; 1
    13ea:	80 93 2b 01 	sts	0x012B, r24
				u8Month++;
    13ee:	80 91 8b 01 	lds	r24, 0x018B
    13f2:	8f 5f       	subi	r24, 0xFF	; 255
    13f4:	80 93 8b 01 	sts	0x018B, r24
			}
		}

		if (u8Month > DEC)
    13f8:	80 91 8b 01 	lds	r24, 0x018B
    13fc:	8c 30       	cpi	r24, 0x0C	; 12
    13fe:	58 f0       	brcs	.+22     	; 0x1416 <main+0x8d0>
		{
			u8Month = JAN;
    1400:	10 92 8b 01 	sts	0x018B, r1
			u16Year++;
    1404:	80 91 7e 01 	lds	r24, 0x017E
    1408:	90 91 7f 01 	lds	r25, 0x017F
    140c:	01 96       	adiw	r24, 0x01	; 1
    140e:	90 93 7f 01 	sts	0x017F, r25
    1412:	80 93 7e 01 	sts	0x017E, r24
		}
//----------------------------------------------------------------------------------------------------------------------------------------------------
		/* Alarm */
		if (u8AlarmStatus == 1)
    1416:	80 91 95 01 	lds	r24, 0x0195
    141a:	81 30       	cpi	r24, 0x01	; 1
    141c:	09 f0       	breq	.+2      	; 0x1420 <main+0x8da>
    141e:	4f c0       	rjmp	.+158    	; 0x14be <main+0x978>
		{
			LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM16);
    1420:	80 e0       	ldi	r24, 0x00	; 0
    1422:	6f e0       	ldi	r22, 0x0F	; 15
    1424:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
			LCD_voidSendData(LCD_CUSTOM_CHAR1);
    1428:	80 e0       	ldi	r24, 0x00	; 0
    142a:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
			if((u8Hours == au8Alarm[HOURS]) && (u8Minutes == au8Alarm[MINUTES]) && (u8TimeForm == u8AlarmForm) && (u8Seconds == au8Alarm[SECONDS]))
    142e:	90 91 2c 01 	lds	r25, 0x012C
    1432:	80 91 2a 01 	lds	r24, 0x012A
    1436:	98 17       	cp	r25, r24
    1438:	c1 f4       	brne	.+48     	; 0x146a <main+0x924>
    143a:	90 91 2d 01 	lds	r25, 0x012D
    143e:	80 91 8a 01 	lds	r24, 0x018A
    1442:	98 17       	cp	r25, r24
    1444:	91 f4       	brne	.+36     	; 0x146a <main+0x924>
    1446:	90 91 8e 01 	lds	r25, 0x018E
    144a:	80 91 96 01 	lds	r24, 0x0196
    144e:	98 17       	cp	r25, r24
    1450:	61 f4       	brne	.+24     	; 0x146a <main+0x924>
    1452:	90 91 2e 01 	lds	r25, 0x012E
    1456:	80 91 89 01 	lds	r24, 0x0189
    145a:	98 17       	cp	r25, r24
    145c:	31 f4       	brne	.+12     	; 0x146a <main+0x924>
			{
				DIO_voidSetPinVal(DIO_PORTB ,DIO_PIN7 ,DIO_HIGH);
    145e:	81 e0       	ldi	r24, 0x01	; 1
    1460:	67 e0       	ldi	r22, 0x07	; 7
    1462:	41 e0       	ldi	r20, 0x01	; 1
    1464:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <DIO_voidSetPinVal>
    1468:	2a c0       	rjmp	.+84     	; 0x14be <main+0x978>
			}
			else if(((u8Hours == au8Alarm[HOURS]) && (u8Minutes > au8Alarm[MINUTES] ) && (u8TimeForm == u8AlarmForm) && (u8Seconds >= au8Alarm[SECONDS])) || (u8Key == 'E'))
    146a:	90 91 2c 01 	lds	r25, 0x012C
    146e:	80 91 2a 01 	lds	r24, 0x012A
    1472:	98 17       	cp	r25, r24
    1474:	91 f4       	brne	.+36     	; 0x149a <main+0x954>
    1476:	90 91 2d 01 	lds	r25, 0x012D
    147a:	80 91 8a 01 	lds	r24, 0x018A
    147e:	98 17       	cp	r25, r24
    1480:	60 f4       	brcc	.+24     	; 0x149a <main+0x954>
    1482:	90 91 8e 01 	lds	r25, 0x018E
    1486:	80 91 96 01 	lds	r24, 0x0196
    148a:	98 17       	cp	r25, r24
    148c:	31 f4       	brne	.+12     	; 0x149a <main+0x954>
    148e:	90 91 2e 01 	lds	r25, 0x012E
    1492:	80 91 89 01 	lds	r24, 0x0189
    1496:	89 17       	cp	r24, r25
    1498:	20 f4       	brcc	.+8      	; 0x14a2 <main+0x95c>
    149a:	80 91 8c 01 	lds	r24, 0x018C
    149e:	85 34       	cpi	r24, 0x45	; 69
    14a0:	71 f4       	brne	.+28     	; 0x14be <main+0x978>
			{
				DIO_voidSetPinVal(DIO_PORTB ,DIO_PIN7 ,DIO_LOW);
    14a2:	81 e0       	ldi	r24, 0x01	; 1
    14a4:	67 e0       	ldi	r22, 0x07	; 7
    14a6:	40 e0       	ldi	r20, 0x00	; 0
    14a8:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <DIO_voidSetPinVal>
				u8AlarmStatus = 0;
    14ac:	10 92 95 01 	sts	0x0195, r1
				LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM16);
    14b0:	80 e0       	ldi	r24, 0x00	; 0
    14b2:	6f e0       	ldi	r22, 0x0F	; 15
    14b4:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				LCD_voidSendData(' ');
    14b8:	80 e2       	ldi	r24, 0x20	; 32
    14ba:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
			}
		}
//---------------------------------------------------------------------------------------------------------------------------------------------------
		/* Timer */
		if(u8StartTimer == 1)
    14be:	80 91 99 01 	lds	r24, 0x0199
    14c2:	81 30       	cpi	r24, 0x01	; 1
    14c4:	09 f0       	breq	.+2      	; 0x14c8 <main+0x982>
    14c6:	60 c0       	rjmp	.+192    	; 0x1588 <main+0xa42>
		{
			LCD_voidSetPosition(LCD_LINE2 , LCD_COLUM16);
    14c8:	81 e0       	ldi	r24, 0x01	; 1
    14ca:	6f e0       	ldi	r22, 0x0F	; 15
    14cc:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
			LCD_voidSendData(LCD_CUSTOM_CHAR2);
    14d0:	81 e0       	ldi	r24, 0x01	; 1
    14d2:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
			if(au8Timer[SECONDS] == 0)
    14d6:	80 91 9c 01 	lds	r24, 0x019C
    14da:	88 23       	and	r24, r24
    14dc:	e9 f5       	brne	.+122    	; 0x1558 <main+0xa12>
			{
				if(au8Timer[MINUTES] > 0)
    14de:	80 91 9b 01 	lds	r24, 0x019B
    14e2:	88 23       	and	r24, r24
    14e4:	49 f0       	breq	.+18     	; 0x14f8 <main+0x9b2>
				{
					au8Timer[MINUTES] --;
    14e6:	80 91 9b 01 	lds	r24, 0x019B
    14ea:	81 50       	subi	r24, 0x01	; 1
    14ec:	80 93 9b 01 	sts	0x019B, r24
					au8Timer[SECONDS] = 59;
    14f0:	8b e3       	ldi	r24, 0x3B	; 59
    14f2:	80 93 9c 01 	sts	0x019C, r24
    14f6:	30 c0       	rjmp	.+96     	; 0x1558 <main+0xa12>
				}
				else
				{
					if(au8Timer[HOURS] > 0)
    14f8:	80 91 9a 01 	lds	r24, 0x019A
    14fc:	88 23       	and	r24, r24
    14fe:	61 f0       	breq	.+24     	; 0x1518 <main+0x9d2>
					{
						au8Timer[HOURS] --;
    1500:	80 91 9a 01 	lds	r24, 0x019A
    1504:	81 50       	subi	r24, 0x01	; 1
    1506:	80 93 9a 01 	sts	0x019A, r24
						au8Timer[MINUTES] = 59;
    150a:	8b e3       	ldi	r24, 0x3B	; 59
    150c:	80 93 9b 01 	sts	0x019B, r24
						au8Timer[SECONDS] = 59;
    1510:	8b e3       	ldi	r24, 0x3B	; 59
    1512:	80 93 9c 01 	sts	0x019C, r24
    1516:	20 c0       	rjmp	.+64     	; 0x1558 <main+0xa12>
					}
					else
					{
						if (u8TimerBuzzer == 0)
    1518:	80 91 94 01 	lds	r24, 0x0194
    151c:	88 23       	and	r24, r24
    151e:	61 f4       	brne	.+24     	; 0x1538 <main+0x9f2>
						{
							DIO_voidSetPinVal(DIO_PORTB , DIO_PIN7 , DIO_HIGH);
    1520:	81 e0       	ldi	r24, 0x01	; 1
    1522:	67 e0       	ldi	r22, 0x07	; 7
    1524:	41 e0       	ldi	r20, 0x01	; 1
    1526:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <DIO_voidSetPinVal>
							au8Timer[SECONDS] = 10;
    152a:	8a e0       	ldi	r24, 0x0A	; 10
    152c:	80 93 9c 01 	sts	0x019C, r24
							u8TimerBuzzer = 1;
    1530:	81 e0       	ldi	r24, 0x01	; 1
    1532:	80 93 94 01 	sts	0x0194, r24
    1536:	10 c0       	rjmp	.+32     	; 0x1558 <main+0xa12>
						}
						else
						{
							DIO_voidSetPinVal(DIO_PORTB , DIO_PIN7 , DIO_LOW);
    1538:	81 e0       	ldi	r24, 0x01	; 1
    153a:	67 e0       	ldi	r22, 0x07	; 7
    153c:	40 e0       	ldi	r20, 0x00	; 0
    153e:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <DIO_voidSetPinVal>
							u8StartTimer = 0;
    1542:	10 92 99 01 	sts	0x0199, r1
							LCD_voidSetPosition(LCD_LINE2 , LCD_COLUM16);
    1546:	81 e0       	ldi	r24, 0x01	; 1
    1548:	6f e0       	ldi	r22, 0x0F	; 15
    154a:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
							LCD_voidSendData(' ');
    154e:	80 e2       	ldi	r24, 0x20	; 32
    1550:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
							u8TimerBuzzer = 0;
    1554:	10 92 94 01 	sts	0x0194, r1
						}
					}
				}
			}
			if ((u8Key == 'E') && (u8TimerBuzzer == 1))
    1558:	80 91 8c 01 	lds	r24, 0x018C
    155c:	85 34       	cpi	r24, 0x45	; 69
    155e:	a1 f4       	brne	.+40     	; 0x1588 <main+0xa42>
    1560:	80 91 94 01 	lds	r24, 0x0194
    1564:	81 30       	cpi	r24, 0x01	; 1
    1566:	81 f4       	brne	.+32     	; 0x1588 <main+0xa42>
			{
				DIO_voidSetPinVal(DIO_PORTB , DIO_PIN7 , DIO_LOW);
    1568:	81 e0       	ldi	r24, 0x01	; 1
    156a:	67 e0       	ldi	r22, 0x07	; 7
    156c:	40 e0       	ldi	r20, 0x00	; 0
    156e:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <DIO_voidSetPinVal>
				u8StartTimer = 0;
    1572:	10 92 99 01 	sts	0x0199, r1
				LCD_voidSetPosition(LCD_LINE2 , LCD_COLUM16);
    1576:	81 e0       	ldi	r24, 0x01	; 1
    1578:	6f e0       	ldi	r22, 0x0F	; 15
    157a:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				LCD_voidSendData(' ');
    157e:	80 e2       	ldi	r24, 0x20	; 32
    1580:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
				u8TimerBuzzer = 0;
    1584:	10 92 94 01 	sts	0x0194, r1
			}
		}
//***********************************************************************************************************************************
		/* Main Icon */
		if(u8Icon == 0)
    1588:	80 91 8d 01 	lds	r24, 0x018D
    158c:	88 23       	and	r24, r24
    158e:	09 f0       	breq	.+2      	; 0x1592 <main+0xa4c>
    1590:	15 c1       	rjmp	.+554    	; 0x17bc <main+0xc76>
		{
			LCD_voidDisableCursor();
    1592:	0e 94 27 29 	call	0x524e	; 0x524e <LCD_voidDisableCursor>
			/* Time Show */
			if(u8Hours < 10)
    1596:	80 91 2a 01 	lds	r24, 0x012A
    159a:	8a 30       	cpi	r24, 0x0A	; 10
    159c:	a8 f4       	brcc	.+42     	; 0x15c8 <main+0xa82>
			{
				LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM3);
    159e:	80 e0       	ldi	r24, 0x00	; 0
    15a0:	62 e0       	ldi	r22, 0x02	; 2
    15a2:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				LCD_voidSendData('0');
    15a6:	80 e3       	ldi	r24, 0x30	; 48
    15a8:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
				LCD_voidSendInteger(u8Hours);
    15ac:	80 91 2a 01 	lds	r24, 0x012A
    15b0:	88 2f       	mov	r24, r24
    15b2:	90 e0       	ldi	r25, 0x00	; 0
    15b4:	a0 e0       	ldi	r26, 0x00	; 0
    15b6:	b0 e0       	ldi	r27, 0x00	; 0
    15b8:	bc 01       	movw	r22, r24
    15ba:	cd 01       	movw	r24, r26
    15bc:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
				LCD_voidSendData(':');
    15c0:	8a e3       	ldi	r24, 0x3A	; 58
    15c2:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
    15c6:	11 c0       	rjmp	.+34     	; 0x15ea <main+0xaa4>
			}
			else
			{
				LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM3);
    15c8:	80 e0       	ldi	r24, 0x00	; 0
    15ca:	62 e0       	ldi	r22, 0x02	; 2
    15cc:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				LCD_voidSendInteger(u8Hours);
    15d0:	80 91 2a 01 	lds	r24, 0x012A
    15d4:	88 2f       	mov	r24, r24
    15d6:	90 e0       	ldi	r25, 0x00	; 0
    15d8:	a0 e0       	ldi	r26, 0x00	; 0
    15da:	b0 e0       	ldi	r27, 0x00	; 0
    15dc:	bc 01       	movw	r22, r24
    15de:	cd 01       	movw	r24, r26
    15e0:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
				LCD_voidSendData(':');
    15e4:	8a e3       	ldi	r24, 0x3A	; 58
    15e6:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
			}

			if(u8Minutes < 10)
    15ea:	80 91 8a 01 	lds	r24, 0x018A
    15ee:	8a 30       	cpi	r24, 0x0A	; 10
    15f0:	a8 f4       	brcc	.+42     	; 0x161c <main+0xad6>
			{
				LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM6);
    15f2:	80 e0       	ldi	r24, 0x00	; 0
    15f4:	65 e0       	ldi	r22, 0x05	; 5
    15f6:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				LCD_voidSendData('0');
    15fa:	80 e3       	ldi	r24, 0x30	; 48
    15fc:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
				LCD_voidSendInteger(u8Minutes);
    1600:	80 91 8a 01 	lds	r24, 0x018A
    1604:	88 2f       	mov	r24, r24
    1606:	90 e0       	ldi	r25, 0x00	; 0
    1608:	a0 e0       	ldi	r26, 0x00	; 0
    160a:	b0 e0       	ldi	r27, 0x00	; 0
    160c:	bc 01       	movw	r22, r24
    160e:	cd 01       	movw	r24, r26
    1610:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
				LCD_voidSendData(':');
    1614:	8a e3       	ldi	r24, 0x3A	; 58
    1616:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
    161a:	11 c0       	rjmp	.+34     	; 0x163e <main+0xaf8>
			}
			else
			{
				LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM6);
    161c:	80 e0       	ldi	r24, 0x00	; 0
    161e:	65 e0       	ldi	r22, 0x05	; 5
    1620:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				LCD_voidSendInteger(u8Minutes);
    1624:	80 91 8a 01 	lds	r24, 0x018A
    1628:	88 2f       	mov	r24, r24
    162a:	90 e0       	ldi	r25, 0x00	; 0
    162c:	a0 e0       	ldi	r26, 0x00	; 0
    162e:	b0 e0       	ldi	r27, 0x00	; 0
    1630:	bc 01       	movw	r22, r24
    1632:	cd 01       	movw	r24, r26
    1634:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
				LCD_voidSendData(':');
    1638:	8a e3       	ldi	r24, 0x3A	; 58
    163a:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
			}

			if(u8Seconds < 10)
    163e:	80 91 89 01 	lds	r24, 0x0189
    1642:	8a 30       	cpi	r24, 0x0A	; 10
    1644:	48 f5       	brcc	.+82     	; 0x1698 <main+0xb52>
			{
				LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM9);
    1646:	80 e0       	ldi	r24, 0x00	; 0
    1648:	68 e0       	ldi	r22, 0x08	; 8
    164a:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				LCD_voidSendData('0');
    164e:	80 e3       	ldi	r24, 0x30	; 48
    1650:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
				LCD_voidSendInteger(u8Seconds);
    1654:	80 91 89 01 	lds	r24, 0x0189
    1658:	88 2f       	mov	r24, r24
    165a:	90 e0       	ldi	r25, 0x00	; 0
    165c:	a0 e0       	ldi	r26, 0x00	; 0
    165e:	b0 e0       	ldi	r27, 0x00	; 0
    1660:	bc 01       	movw	r22, r24
    1662:	cd 01       	movw	r24, r26
    1664:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
				LCD_voidSendString(" ");
    1668:	80 e6       	ldi	r24, 0x60	; 96
    166a:	90 e0       	ldi	r25, 0x00	; 0
    166c:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
				LCD_voidSendString(&au8TimeForm[u8TimeForm]);
    1670:	42 e7       	ldi	r20, 0x72	; 114
    1672:	51 e0       	ldi	r21, 0x01	; 1
    1674:	80 91 8e 01 	lds	r24, 0x018E
    1678:	28 2f       	mov	r18, r24
    167a:	30 e0       	ldi	r19, 0x00	; 0
    167c:	c9 01       	movw	r24, r18
    167e:	88 0f       	add	r24, r24
    1680:	99 1f       	adc	r25, r25
    1682:	82 0f       	add	r24, r18
    1684:	93 1f       	adc	r25, r19
    1686:	84 0f       	add	r24, r20
    1688:	95 1f       	adc	r25, r21
    168a:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
				LCD_voidSendString("  ");
    168e:	82 e6       	ldi	r24, 0x62	; 98
    1690:	90 e0       	ldi	r25, 0x00	; 0
    1692:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1696:	25 c0       	rjmp	.+74     	; 0x16e2 <main+0xb9c>
			}
			else
			{
				LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM9);
    1698:	80 e0       	ldi	r24, 0x00	; 0
    169a:	68 e0       	ldi	r22, 0x08	; 8
    169c:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				LCD_voidSendInteger(u8Seconds);
    16a0:	80 91 89 01 	lds	r24, 0x0189
    16a4:	88 2f       	mov	r24, r24
    16a6:	90 e0       	ldi	r25, 0x00	; 0
    16a8:	a0 e0       	ldi	r26, 0x00	; 0
    16aa:	b0 e0       	ldi	r27, 0x00	; 0
    16ac:	bc 01       	movw	r22, r24
    16ae:	cd 01       	movw	r24, r26
    16b0:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
				LCD_voidSendString(" ");
    16b4:	80 e6       	ldi	r24, 0x60	; 96
    16b6:	90 e0       	ldi	r25, 0x00	; 0
    16b8:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
				LCD_voidSendString(&au8TimeForm[u8TimeForm]);
    16bc:	42 e7       	ldi	r20, 0x72	; 114
    16be:	51 e0       	ldi	r21, 0x01	; 1
    16c0:	80 91 8e 01 	lds	r24, 0x018E
    16c4:	28 2f       	mov	r18, r24
    16c6:	30 e0       	ldi	r19, 0x00	; 0
    16c8:	c9 01       	movw	r24, r18
    16ca:	88 0f       	add	r24, r24
    16cc:	99 1f       	adc	r25, r25
    16ce:	82 0f       	add	r24, r18
    16d0:	93 1f       	adc	r25, r19
    16d2:	84 0f       	add	r24, r20
    16d4:	95 1f       	adc	r25, r21
    16d6:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
				LCD_voidSendString("  ");
    16da:	82 e6       	ldi	r24, 0x62	; 98
    16dc:	90 e0       	ldi	r25, 0x00	; 0
    16de:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
			}

			/* Date Show */
			if(u8Day < 10)
    16e2:	80 91 2b 01 	lds	r24, 0x012B
    16e6:	8a 30       	cpi	r24, 0x0A	; 10
    16e8:	58 f5       	brcc	.+86     	; 0x1740 <main+0xbfa>
			{
				LCD_voidSetPosition(LCD_LINE2 , LCD_COLUM4);
    16ea:	81 e0       	ldi	r24, 0x01	; 1
    16ec:	63 e0       	ldi	r22, 0x03	; 3
    16ee:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				LCD_voidSendData('0');
    16f2:	80 e3       	ldi	r24, 0x30	; 48
    16f4:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
				LCD_voidSendInteger(u8Day);
    16f8:	80 91 2b 01 	lds	r24, 0x012B
    16fc:	88 2f       	mov	r24, r24
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	a0 e0       	ldi	r26, 0x00	; 0
    1702:	b0 e0       	ldi	r27, 0x00	; 0
    1704:	bc 01       	movw	r22, r24
    1706:	cd 01       	movw	r24, r26
    1708:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
				LCD_voidSendString(&au8Months[u8Month]);
    170c:	22 e4       	ldi	r18, 0x42	; 66
    170e:	31 e0       	ldi	r19, 0x01	; 1
    1710:	80 91 8b 01 	lds	r24, 0x018B
    1714:	88 2f       	mov	r24, r24
    1716:	90 e0       	ldi	r25, 0x00	; 0
    1718:	88 0f       	add	r24, r24
    171a:	99 1f       	adc	r25, r25
    171c:	88 0f       	add	r24, r24
    171e:	99 1f       	adc	r25, r25
    1720:	82 0f       	add	r24, r18
    1722:	93 1f       	adc	r25, r19
    1724:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
				LCD_voidSendInteger(u16Year);
    1728:	80 91 7e 01 	lds	r24, 0x017E
    172c:	90 91 7f 01 	lds	r25, 0x017F
    1730:	cc 01       	movw	r24, r24
    1732:	a0 e0       	ldi	r26, 0x00	; 0
    1734:	b0 e0       	ldi	r27, 0x00	; 0
    1736:	bc 01       	movw	r22, r24
    1738:	cd 01       	movw	r24, r26
    173a:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
    173e:	27 c0       	rjmp	.+78     	; 0x178e <main+0xc48>
			}
			else
			{
				LCD_voidSetPosition(LCD_LINE2 , LCD_COLUM4);
    1740:	81 e0       	ldi	r24, 0x01	; 1
    1742:	63 e0       	ldi	r22, 0x03	; 3
    1744:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				LCD_voidSendInteger(u8Day);
    1748:	80 91 2b 01 	lds	r24, 0x012B
    174c:	88 2f       	mov	r24, r24
    174e:	90 e0       	ldi	r25, 0x00	; 0
    1750:	a0 e0       	ldi	r26, 0x00	; 0
    1752:	b0 e0       	ldi	r27, 0x00	; 0
    1754:	bc 01       	movw	r22, r24
    1756:	cd 01       	movw	r24, r26
    1758:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
				LCD_voidSendString(&au8Months[u8Month]);
    175c:	22 e4       	ldi	r18, 0x42	; 66
    175e:	31 e0       	ldi	r19, 0x01	; 1
    1760:	80 91 8b 01 	lds	r24, 0x018B
    1764:	88 2f       	mov	r24, r24
    1766:	90 e0       	ldi	r25, 0x00	; 0
    1768:	88 0f       	add	r24, r24
    176a:	99 1f       	adc	r25, r25
    176c:	88 0f       	add	r24, r24
    176e:	99 1f       	adc	r25, r25
    1770:	82 0f       	add	r24, r18
    1772:	93 1f       	adc	r25, r19
    1774:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
				LCD_voidSendInteger(u16Year);
    1778:	80 91 7e 01 	lds	r24, 0x017E
    177c:	90 91 7f 01 	lds	r25, 0x017F
    1780:	cc 01       	movw	r24, r24
    1782:	a0 e0       	ldi	r26, 0x00	; 0
    1784:	b0 e0       	ldi	r27, 0x00	; 0
    1786:	bc 01       	movw	r22, r24
    1788:	cd 01       	movw	r24, r26
    178a:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
			}

			if(u8Key != NULL)
    178e:	80 91 8c 01 	lds	r24, 0x018C
    1792:	88 23       	and	r24, r24
    1794:	09 f4       	brne	.+2      	; 0x1798 <main+0xc52>
    1796:	6e cd       	rjmp	.-1316   	; 0x1274 <main+0x72e>
			{
				switch(u8Key)
    1798:	80 91 8c 01 	lds	r24, 0x018C
    179c:	88 2f       	mov	r24, r24
    179e:	90 e0       	ldi	r25, 0x00	; 0
    17a0:	8d 34       	cpi	r24, 0x4D	; 77
    17a2:	91 05       	cpc	r25, r1
    17a4:	09 f0       	breq	.+2      	; 0x17a8 <main+0xc62>
    17a6:	66 cd       	rjmp	.-1332   	; 0x1274 <main+0x72e>
				{
				case 'M' :LCD_voidClearDisplay(); LCD_voidSendString(u8Str0); u8Icon = 1; break;
    17a8:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    17ac:	ce 01       	movw	r24, r28
    17ae:	01 96       	adiw	r24, 0x01	; 1
    17b0:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    17b4:	81 e0       	ldi	r24, 0x01	; 1
    17b6:	80 93 8d 01 	sts	0x018D, r24
    17ba:	5c cd       	rjmp	.-1352   	; 0x1274 <main+0x72e>
				}
			}
		}
//*************************************************************************************************************************************
		/* SETUP Icon */
		else if (u8Icon == 1)
    17bc:	80 91 8d 01 	lds	r24, 0x018D
    17c0:	81 30       	cpi	r24, 0x01	; 1
    17c2:	09 f0       	breq	.+2      	; 0x17c6 <main+0xc80>
    17c4:	65 c0       	rjmp	.+202    	; 0x1890 <main+0xd4a>
		{
			LCD_voidDisableCursor();
    17c6:	0e 94 27 29 	call	0x524e	; 0x524e <LCD_voidDisableCursor>
			if(u8Key != NULL)
    17ca:	80 91 8c 01 	lds	r24, 0x018C
    17ce:	88 23       	and	r24, r24
    17d0:	09 f4       	brne	.+2      	; 0x17d4 <main+0xc8e>
    17d2:	50 cd       	rjmp	.-1376   	; 0x1274 <main+0x72e>
			{
				switch(u8Key)
    17d4:	80 91 8c 01 	lds	r24, 0x018C
    17d8:	e8 2f       	mov	r30, r24
    17da:	f0 e0       	ldi	r31, 0x00	; 0
    17dc:	c5 52       	subi	r28, 0x25	; 37
    17de:	df 4f       	sbci	r29, 0xFF	; 255
    17e0:	f9 83       	std	Y+1, r31	; 0x01
    17e2:	e8 83       	st	Y, r30
    17e4:	cb 5d       	subi	r28, 0xDB	; 219
    17e6:	d0 40       	sbci	r29, 0x00	; 0
    17e8:	c5 52       	subi	r28, 0x25	; 37
    17ea:	df 4f       	sbci	r29, 0xFF	; 255
    17ec:	28 81       	ld	r18, Y
    17ee:	39 81       	ldd	r19, Y+1	; 0x01
    17f0:	cb 5d       	subi	r28, 0xDB	; 219
    17f2:	d0 40       	sbci	r29, 0x00	; 0
    17f4:	2c 34       	cpi	r18, 0x4C	; 76
    17f6:	31 05       	cpc	r19, r1
    17f8:	09 f4       	brne	.+2      	; 0x17fc <main+0xcb6>
    17fa:	3f c0       	rjmp	.+126    	; 0x187a <main+0xd34>
    17fc:	c5 52       	subi	r28, 0x25	; 37
    17fe:	df 4f       	sbci	r29, 0xFF	; 255
    1800:	88 81       	ld	r24, Y
    1802:	99 81       	ldd	r25, Y+1	; 0x01
    1804:	cb 5d       	subi	r28, 0xDB	; 219
    1806:	d0 40       	sbci	r29, 0x00	; 0
    1808:	8d 34       	cpi	r24, 0x4D	; 77
    180a:	91 05       	cpc	r25, r1
    180c:	54 f4       	brge	.+20     	; 0x1822 <main+0xcdc>
    180e:	c5 52       	subi	r28, 0x25	; 37
    1810:	df 4f       	sbci	r29, 0xFF	; 255
    1812:	e8 81       	ld	r30, Y
    1814:	f9 81       	ldd	r31, Y+1	; 0x01
    1816:	cb 5d       	subi	r28, 0xDB	; 219
    1818:	d0 40       	sbci	r29, 0x00	; 0
    181a:	e5 34       	cpi	r30, 0x45	; 69
    181c:	f1 05       	cpc	r31, r1
    181e:	c9 f0       	breq	.+50     	; 0x1852 <main+0xd0c>
    1820:	29 cd       	rjmp	.-1454   	; 0x1274 <main+0x72e>
    1822:	c5 52       	subi	r28, 0x25	; 37
    1824:	df 4f       	sbci	r29, 0xFF	; 255
    1826:	28 81       	ld	r18, Y
    1828:	39 81       	ldd	r19, Y+1	; 0x01
    182a:	cb 5d       	subi	r28, 0xDB	; 219
    182c:	d0 40       	sbci	r29, 0x00	; 0
    182e:	2d 34       	cpi	r18, 0x4D	; 77
    1830:	31 05       	cpc	r19, r1
    1832:	51 f0       	breq	.+20     	; 0x1848 <main+0xd02>
    1834:	c5 52       	subi	r28, 0x25	; 37
    1836:	df 4f       	sbci	r29, 0xFF	; 255
    1838:	88 81       	ld	r24, Y
    183a:	99 81       	ldd	r25, Y+1	; 0x01
    183c:	cb 5d       	subi	r28, 0xDB	; 219
    183e:	d0 40       	sbci	r29, 0x00	; 0
    1840:	82 35       	cpi	r24, 0x52	; 82
    1842:	91 05       	cpc	r25, r1
    1844:	81 f0       	breq	.+32     	; 0x1866 <main+0xd20>
    1846:	16 cd       	rjmp	.-1492   	; 0x1274 <main+0x72e>
				{
				case 'M' : LCD_voidClearDisplay(); u8Icon = 0; break;
    1848:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    184c:	10 92 8d 01 	sts	0x018D, r1
    1850:	11 cd       	rjmp	.-1502   	; 0x1274 <main+0x72e>
				case 'E' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str1); u8Icon = 2; break;
    1852:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1856:	ce 01       	movw	r24, r28
    1858:	42 96       	adiw	r24, 0x12	; 18
    185a:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    185e:	82 e0       	ldi	r24, 0x02	; 2
    1860:	80 93 8d 01 	sts	0x018D, r24
    1864:	07 cd       	rjmp	.-1522   	; 0x1274 <main+0x72e>
				case 'R' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str3); u8Icon = 4; break;
    1866:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    186a:	ce 01       	movw	r24, r28
    186c:	c4 96       	adiw	r24, 0x34	; 52
    186e:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1872:	84 e0       	ldi	r24, 0x04	; 4
    1874:	80 93 8d 01 	sts	0x018D, r24
    1878:	fd cc       	rjmp	.-1542   	; 0x1274 <main+0x72e>
				case 'L' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str7); u8Icon = 8; break;
    187a:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    187e:	ce 01       	movw	r24, r28
    1880:	88 58       	subi	r24, 0x88	; 136
    1882:	9f 4f       	sbci	r25, 0xFF	; 255
    1884:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1888:	88 e0       	ldi	r24, 0x08	; 8
    188a:	80 93 8d 01 	sts	0x018D, r24
    188e:	f2 cc       	rjmp	.-1564   	; 0x1274 <main+0x72e>
				}
			}
		}
//***********************************************************************************************************************************************************************
		/* Time Setting Icon */
		else if(u8Icon == 2)
    1890:	80 91 8d 01 	lds	r24, 0x018D
    1894:	82 30       	cpi	r24, 0x02	; 2
    1896:	09 f0       	breq	.+2      	; 0x189a <main+0xd54>
    1898:	70 c0       	rjmp	.+224    	; 0x197a <main+0xe34>
		{
			LCD_voidDisableCursor();
    189a:	0e 94 27 29 	call	0x524e	; 0x524e <LCD_voidDisableCursor>
			if(u8Key != NULL)
    189e:	80 91 8c 01 	lds	r24, 0x018C
    18a2:	88 23       	and	r24, r24
    18a4:	09 f4       	brne	.+2      	; 0x18a8 <main+0xd62>
    18a6:	e6 cc       	rjmp	.-1588   	; 0x1274 <main+0x72e>
			{
				switch(u8Key)
    18a8:	80 91 8c 01 	lds	r24, 0x018C
    18ac:	e8 2f       	mov	r30, r24
    18ae:	f0 e0       	ldi	r31, 0x00	; 0
    18b0:	c7 52       	subi	r28, 0x27	; 39
    18b2:	df 4f       	sbci	r29, 0xFF	; 255
    18b4:	f9 83       	std	Y+1, r31	; 0x01
    18b6:	e8 83       	st	Y, r30
    18b8:	c9 5d       	subi	r28, 0xD9	; 217
    18ba:	d0 40       	sbci	r29, 0x00	; 0
    18bc:	c7 52       	subi	r28, 0x27	; 39
    18be:	df 4f       	sbci	r29, 0xFF	; 255
    18c0:	28 81       	ld	r18, Y
    18c2:	39 81       	ldd	r19, Y+1	; 0x01
    18c4:	c9 5d       	subi	r28, 0xD9	; 217
    18c6:	d0 40       	sbci	r29, 0x00	; 0
    18c8:	2c 34       	cpi	r18, 0x4C	; 76
    18ca:	31 05       	cpc	r19, r1
    18cc:	d1 f1       	breq	.+116    	; 0x1942 <main+0xdfc>
    18ce:	c7 52       	subi	r28, 0x27	; 39
    18d0:	df 4f       	sbci	r29, 0xFF	; 255
    18d2:	88 81       	ld	r24, Y
    18d4:	99 81       	ldd	r25, Y+1	; 0x01
    18d6:	c9 5d       	subi	r28, 0xD9	; 217
    18d8:	d0 40       	sbci	r29, 0x00	; 0
    18da:	8d 34       	cpi	r24, 0x4D	; 77
    18dc:	91 05       	cpc	r25, r1
    18de:	54 f4       	brge	.+20     	; 0x18f4 <main+0xdae>
    18e0:	c7 52       	subi	r28, 0x27	; 39
    18e2:	df 4f       	sbci	r29, 0xFF	; 255
    18e4:	e8 81       	ld	r30, Y
    18e6:	f9 81       	ldd	r31, Y+1	; 0x01
    18e8:	c9 5d       	subi	r28, 0xD9	; 217
    18ea:	d0 40       	sbci	r29, 0x00	; 0
    18ec:	e5 34       	cpi	r30, 0x45	; 69
    18ee:	f1 05       	cpc	r31, r1
    18f0:	91 f1       	breq	.+100    	; 0x1956 <main+0xe10>
    18f2:	c0 cc       	rjmp	.-1664   	; 0x1274 <main+0x72e>
    18f4:	c7 52       	subi	r28, 0x27	; 39
    18f6:	df 4f       	sbci	r29, 0xFF	; 255
    18f8:	28 81       	ld	r18, Y
    18fa:	39 81       	ldd	r19, Y+1	; 0x01
    18fc:	c9 5d       	subi	r28, 0xD9	; 217
    18fe:	d0 40       	sbci	r29, 0x00	; 0
    1900:	2d 34       	cpi	r18, 0x4D	; 77
    1902:	31 05       	cpc	r19, r1
    1904:	51 f0       	breq	.+20     	; 0x191a <main+0xdd4>
    1906:	c7 52       	subi	r28, 0x27	; 39
    1908:	df 4f       	sbci	r29, 0xFF	; 255
    190a:	88 81       	ld	r24, Y
    190c:	99 81       	ldd	r25, Y+1	; 0x01
    190e:	c9 5d       	subi	r28, 0xD9	; 217
    1910:	d0 40       	sbci	r29, 0x00	; 0
    1912:	82 35       	cpi	r24, 0x52	; 82
    1914:	91 05       	cpc	r25, r1
    1916:	59 f0       	breq	.+22     	; 0x192e <main+0xde8>
    1918:	ad cc       	rjmp	.-1702   	; 0x1274 <main+0x72e>
				{
				case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str0); u8Icon = 1;                                                                                 break;
    191a:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    191e:	ce 01       	movw	r24, r28
    1920:	01 96       	adiw	r24, 0x01	; 1
    1922:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1926:	81 e0       	ldi	r24, 0x01	; 1
    1928:	80 93 8d 01 	sts	0x018D, r24
    192c:	a3 cc       	rjmp	.-1722   	; 0x1274 <main+0x72e>
				case 'R' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str2); u8Icon = 3;                                                                                 break;
    192e:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1932:	ce 01       	movw	r24, r28
    1934:	83 96       	adiw	r24, 0x23	; 35
    1936:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    193a:	83 e0       	ldi	r24, 0x03	; 3
    193c:	80 93 8d 01 	sts	0x018D, r24
    1940:	99 cc       	rjmp	.-1742   	; 0x1274 <main+0x72e>
				case 'L' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str2); u8Icon = 3;                                                                                 break;
    1942:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1946:	ce 01       	movw	r24, r28
    1948:	83 96       	adiw	r24, 0x23	; 35
    194a:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    194e:	83 e0       	ldi	r24, 0x03	; 3
    1950:	80 93 8d 01 	sts	0x018D, r24
    1954:	8f cc       	rjmp	.-1762   	; 0x1274 <main+0x72e>
				case 'E' : LCD_voidClearDisplay(); au8TimeSetting[HOURS] = u8Hours; au8TimeSetting[MINUTES] = u8Minutes; au8TimeSetting[SECONDS] = u8Seconds; u8Icon = 14; break;
    1956:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    195a:	80 91 2a 01 	lds	r24, 0x012A
    195e:	80 93 2f 01 	sts	0x012F, r24
    1962:	80 91 8a 01 	lds	r24, 0x018A
    1966:	80 93 30 01 	sts	0x0130, r24
    196a:	80 91 89 01 	lds	r24, 0x0189
    196e:	80 93 31 01 	sts	0x0131, r24
    1972:	8e e0       	ldi	r24, 0x0E	; 14
    1974:	80 93 8d 01 	sts	0x018D, r24
    1978:	7d cc       	rjmp	.-1798   	; 0x1274 <main+0x72e>
				}
			}
		}
//**************************************************************************************************************************************************************************
		/*  Date Setting Icon */
		else if(u8Icon == 3)
    197a:	80 91 8d 01 	lds	r24, 0x018D
    197e:	83 30       	cpi	r24, 0x03	; 3
    1980:	09 f0       	breq	.+2      	; 0x1984 <main+0xe3e>
    1982:	64 c0       	rjmp	.+200    	; 0x1a4c <main+0xf06>
		{
			LCD_voidDisableCursor();
    1984:	0e 94 27 29 	call	0x524e	; 0x524e <LCD_voidDisableCursor>
			if(u8Key != NULL)
    1988:	80 91 8c 01 	lds	r24, 0x018C
    198c:	88 23       	and	r24, r24
    198e:	09 f4       	brne	.+2      	; 0x1992 <main+0xe4c>
    1990:	71 cc       	rjmp	.-1822   	; 0x1274 <main+0x72e>
			{
				switch(u8Key)
    1992:	80 91 8c 01 	lds	r24, 0x018C
    1996:	e8 2f       	mov	r30, r24
    1998:	f0 e0       	ldi	r31, 0x00	; 0
    199a:	c9 52       	subi	r28, 0x29	; 41
    199c:	df 4f       	sbci	r29, 0xFF	; 255
    199e:	f9 83       	std	Y+1, r31	; 0x01
    19a0:	e8 83       	st	Y, r30
    19a2:	c7 5d       	subi	r28, 0xD7	; 215
    19a4:	d0 40       	sbci	r29, 0x00	; 0
    19a6:	c9 52       	subi	r28, 0x29	; 41
    19a8:	df 4f       	sbci	r29, 0xFF	; 255
    19aa:	28 81       	ld	r18, Y
    19ac:	39 81       	ldd	r19, Y+1	; 0x01
    19ae:	c7 5d       	subi	r28, 0xD7	; 215
    19b0:	d0 40       	sbci	r29, 0x00	; 0
    19b2:	2c 34       	cpi	r18, 0x4C	; 76
    19b4:	31 05       	cpc	r19, r1
    19b6:	d1 f1       	breq	.+116    	; 0x1a2c <main+0xee6>
    19b8:	c9 52       	subi	r28, 0x29	; 41
    19ba:	df 4f       	sbci	r29, 0xFF	; 255
    19bc:	88 81       	ld	r24, Y
    19be:	99 81       	ldd	r25, Y+1	; 0x01
    19c0:	c7 5d       	subi	r28, 0xD7	; 215
    19c2:	d0 40       	sbci	r29, 0x00	; 0
    19c4:	8d 34       	cpi	r24, 0x4D	; 77
    19c6:	91 05       	cpc	r25, r1
    19c8:	54 f4       	brge	.+20     	; 0x19de <main+0xe98>
    19ca:	c9 52       	subi	r28, 0x29	; 41
    19cc:	df 4f       	sbci	r29, 0xFF	; 255
    19ce:	e8 81       	ld	r30, Y
    19d0:	f9 81       	ldd	r31, Y+1	; 0x01
    19d2:	c7 5d       	subi	r28, 0xD7	; 215
    19d4:	d0 40       	sbci	r29, 0x00	; 0
    19d6:	e5 34       	cpi	r30, 0x45	; 69
    19d8:	f1 05       	cpc	r31, r1
    19da:	91 f1       	breq	.+100    	; 0x1a40 <main+0xefa>
    19dc:	4b cc       	rjmp	.-1898   	; 0x1274 <main+0x72e>
    19de:	c9 52       	subi	r28, 0x29	; 41
    19e0:	df 4f       	sbci	r29, 0xFF	; 255
    19e2:	28 81       	ld	r18, Y
    19e4:	39 81       	ldd	r19, Y+1	; 0x01
    19e6:	c7 5d       	subi	r28, 0xD7	; 215
    19e8:	d0 40       	sbci	r29, 0x00	; 0
    19ea:	2d 34       	cpi	r18, 0x4D	; 77
    19ec:	31 05       	cpc	r19, r1
    19ee:	51 f0       	breq	.+20     	; 0x1a04 <main+0xebe>
    19f0:	c9 52       	subi	r28, 0x29	; 41
    19f2:	df 4f       	sbci	r29, 0xFF	; 255
    19f4:	88 81       	ld	r24, Y
    19f6:	99 81       	ldd	r25, Y+1	; 0x01
    19f8:	c7 5d       	subi	r28, 0xD7	; 215
    19fa:	d0 40       	sbci	r29, 0x00	; 0
    19fc:	82 35       	cpi	r24, 0x52	; 82
    19fe:	91 05       	cpc	r25, r1
    1a00:	59 f0       	breq	.+22     	; 0x1a18 <main+0xed2>
    1a02:	38 cc       	rjmp	.-1936   	; 0x1274 <main+0x72e>
				{
				case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str0); u8Icon = 1; break;
    1a04:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1a08:	ce 01       	movw	r24, r28
    1a0a:	01 96       	adiw	r24, 0x01	; 1
    1a0c:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1a10:	81 e0       	ldi	r24, 0x01	; 1
    1a12:	80 93 8d 01 	sts	0x018D, r24
    1a16:	2e cc       	rjmp	.-1956   	; 0x1274 <main+0x72e>
				case 'R' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str1); u8Icon = 2; break;
    1a18:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1a1c:	ce 01       	movw	r24, r28
    1a1e:	42 96       	adiw	r24, 0x12	; 18
    1a20:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1a24:	82 e0       	ldi	r24, 0x02	; 2
    1a26:	80 93 8d 01 	sts	0x018D, r24
    1a2a:	24 cc       	rjmp	.-1976   	; 0x1274 <main+0x72e>
				case 'L' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str1); u8Icon = 2; break;
    1a2c:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1a30:	ce 01       	movw	r24, r28
    1a32:	42 96       	adiw	r24, 0x12	; 18
    1a34:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1a38:	82 e0       	ldi	r24, 0x02	; 2
    1a3a:	80 93 8d 01 	sts	0x018D, r24
    1a3e:	1a cc       	rjmp	.-1996   	; 0x1274 <main+0x72e>
				case 'E' : LCD_voidClearDisplay();                             u8Icon =12; break;
    1a40:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1a44:	8c e0       	ldi	r24, 0x0C	; 12
    1a46:	80 93 8d 01 	sts	0x018D, r24
    1a4a:	14 cc       	rjmp	.-2008   	; 0x1274 <main+0x72e>
				}
			}
		}
//***********************************************************************************************************************************
		/* STOPWATCH ICON */
		else if (u8Icon == 4)
    1a4c:	80 91 8d 01 	lds	r24, 0x018D
    1a50:	84 30       	cpi	r24, 0x04	; 4
    1a52:	09 f0       	breq	.+2      	; 0x1a56 <main+0xf10>
    1a54:	60 c0       	rjmp	.+192    	; 0x1b16 <main+0xfd0>
		{
			LCD_voidDisableCursor();
    1a56:	0e 94 27 29 	call	0x524e	; 0x524e <LCD_voidDisableCursor>
			if(u8Key != NULL)
    1a5a:	80 91 8c 01 	lds	r24, 0x018C
    1a5e:	88 23       	and	r24, r24
    1a60:	09 f4       	brne	.+2      	; 0x1a64 <main+0xf1e>
    1a62:	08 cc       	rjmp	.-2032   	; 0x1274 <main+0x72e>
			{
				switch(u8Key)
    1a64:	80 91 8c 01 	lds	r24, 0x018C
    1a68:	e8 2f       	mov	r30, r24
    1a6a:	f0 e0       	ldi	r31, 0x00	; 0
    1a6c:	cb 52       	subi	r28, 0x2B	; 43
    1a6e:	df 4f       	sbci	r29, 0xFF	; 255
    1a70:	f9 83       	std	Y+1, r31	; 0x01
    1a72:	e8 83       	st	Y, r30
    1a74:	c5 5d       	subi	r28, 0xD5	; 213
    1a76:	d0 40       	sbci	r29, 0x00	; 0
    1a78:	cb 52       	subi	r28, 0x2B	; 43
    1a7a:	df 4f       	sbci	r29, 0xFF	; 255
    1a7c:	28 81       	ld	r18, Y
    1a7e:	39 81       	ldd	r19, Y+1	; 0x01
    1a80:	c5 5d       	subi	r28, 0xD5	; 213
    1a82:	d0 40       	sbci	r29, 0x00	; 0
    1a84:	2c 34       	cpi	r18, 0x4C	; 76
    1a86:	31 05       	cpc	r19, r1
    1a88:	b1 f1       	breq	.+108    	; 0x1af6 <main+0xfb0>
    1a8a:	cb 52       	subi	r28, 0x2B	; 43
    1a8c:	df 4f       	sbci	r29, 0xFF	; 255
    1a8e:	88 81       	ld	r24, Y
    1a90:	99 81       	ldd	r25, Y+1	; 0x01
    1a92:	c5 5d       	subi	r28, 0xD5	; 213
    1a94:	d0 40       	sbci	r29, 0x00	; 0
    1a96:	8d 34       	cpi	r24, 0x4D	; 77
    1a98:	91 05       	cpc	r25, r1
    1a9a:	54 f4       	brge	.+20     	; 0x1ab0 <main+0xf6a>
    1a9c:	cb 52       	subi	r28, 0x2B	; 43
    1a9e:	df 4f       	sbci	r29, 0xFF	; 255
    1aa0:	e8 81       	ld	r30, Y
    1aa2:	f9 81       	ldd	r31, Y+1	; 0x01
    1aa4:	c5 5d       	subi	r28, 0xD5	; 213
    1aa6:	d0 40       	sbci	r29, 0x00	; 0
    1aa8:	e5 34       	cpi	r30, 0x45	; 69
    1aaa:	f1 05       	cpc	r31, r1
    1aac:	71 f1       	breq	.+92     	; 0x1b0a <main+0xfc4>
    1aae:	e2 cb       	rjmp	.-2108   	; 0x1274 <main+0x72e>
    1ab0:	cb 52       	subi	r28, 0x2B	; 43
    1ab2:	df 4f       	sbci	r29, 0xFF	; 255
    1ab4:	28 81       	ld	r18, Y
    1ab6:	39 81       	ldd	r19, Y+1	; 0x01
    1ab8:	c5 5d       	subi	r28, 0xD5	; 213
    1aba:	d0 40       	sbci	r29, 0x00	; 0
    1abc:	2d 34       	cpi	r18, 0x4D	; 77
    1abe:	31 05       	cpc	r19, r1
    1ac0:	51 f0       	breq	.+20     	; 0x1ad6 <main+0xf90>
    1ac2:	cb 52       	subi	r28, 0x2B	; 43
    1ac4:	df 4f       	sbci	r29, 0xFF	; 255
    1ac6:	88 81       	ld	r24, Y
    1ac8:	99 81       	ldd	r25, Y+1	; 0x01
    1aca:	c5 5d       	subi	r28, 0xD5	; 213
    1acc:	d0 40       	sbci	r29, 0x00	; 0
    1ace:	82 35       	cpi	r24, 0x52	; 82
    1ad0:	91 05       	cpc	r25, r1
    1ad2:	31 f0       	breq	.+12     	; 0x1ae0 <main+0xf9a>
    1ad4:	cf cb       	rjmp	.-2146   	; 0x1274 <main+0x72e>
				{
				case 'M' : LCD_voidClearDisplay();                              u8Icon = 0;  break;
    1ad6:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1ada:	10 92 8d 01 	sts	0x018D, r1
    1ade:	ca cb       	rjmp	.-2156   	; 0x1274 <main+0x72e>
				case 'R' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str4);  u8Icon = 5;  break;
    1ae0:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1ae4:	ce 01       	movw	r24, r28
    1ae6:	8b 5b       	subi	r24, 0xBB	; 187
    1ae8:	9f 4f       	sbci	r25, 0xFF	; 255
    1aea:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1aee:	85 e0       	ldi	r24, 0x05	; 5
    1af0:	80 93 8d 01 	sts	0x018D, r24
    1af4:	bf cb       	rjmp	.-2178   	; 0x1274 <main+0x72e>
				case 'L' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str0);  u8Icon = 1;  break;
    1af6:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1afa:	ce 01       	movw	r24, r28
    1afc:	01 96       	adiw	r24, 0x01	; 1
    1afe:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1b02:	81 e0       	ldi	r24, 0x01	; 1
    1b04:	80 93 8d 01 	sts	0x018D, r24
    1b08:	b5 cb       	rjmp	.-2198   	; 0x1274 <main+0x72e>
				case 'E' : LCD_voidClearDisplay();                              u8Icon = 13; break;
    1b0a:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1b0e:	8d e0       	ldi	r24, 0x0D	; 13
    1b10:	80 93 8d 01 	sts	0x018D, r24
    1b14:	af cb       	rjmp	.-2210   	; 0x1274 <main+0x72e>
				}
			}
		}
//**************************************************************************************************************************************
		/* Alarm Setting Icon */
		else if (u8Icon == 5)
    1b16:	80 91 8d 01 	lds	r24, 0x018D
    1b1a:	85 30       	cpi	r24, 0x05	; 5
    1b1c:	09 f0       	breq	.+2      	; 0x1b20 <main+0xfda>
    1b1e:	65 c0       	rjmp	.+202    	; 0x1bea <main+0x10a4>
		{
			LCD_voidDisableCursor();
    1b20:	0e 94 27 29 	call	0x524e	; 0x524e <LCD_voidDisableCursor>
			if(u8Key != NULL)
    1b24:	80 91 8c 01 	lds	r24, 0x018C
    1b28:	88 23       	and	r24, r24
    1b2a:	09 f4       	brne	.+2      	; 0x1b2e <main+0xfe8>
    1b2c:	a3 cb       	rjmp	.-2234   	; 0x1274 <main+0x72e>
			{
				switch(u8Key)
    1b2e:	80 91 8c 01 	lds	r24, 0x018C
    1b32:	e8 2f       	mov	r30, r24
    1b34:	f0 e0       	ldi	r31, 0x00	; 0
    1b36:	cd 52       	subi	r28, 0x2D	; 45
    1b38:	df 4f       	sbci	r29, 0xFF	; 255
    1b3a:	f9 83       	std	Y+1, r31	; 0x01
    1b3c:	e8 83       	st	Y, r30
    1b3e:	c3 5d       	subi	r28, 0xD3	; 211
    1b40:	d0 40       	sbci	r29, 0x00	; 0
    1b42:	cd 52       	subi	r28, 0x2D	; 45
    1b44:	df 4f       	sbci	r29, 0xFF	; 255
    1b46:	28 81       	ld	r18, Y
    1b48:	39 81       	ldd	r19, Y+1	; 0x01
    1b4a:	c3 5d       	subi	r28, 0xD3	; 211
    1b4c:	d0 40       	sbci	r29, 0x00	; 0
    1b4e:	2c 34       	cpi	r18, 0x4C	; 76
    1b50:	31 05       	cpc	r19, r1
    1b52:	b1 f1       	breq	.+108    	; 0x1bc0 <main+0x107a>
    1b54:	cd 52       	subi	r28, 0x2D	; 45
    1b56:	df 4f       	sbci	r29, 0xFF	; 255
    1b58:	88 81       	ld	r24, Y
    1b5a:	99 81       	ldd	r25, Y+1	; 0x01
    1b5c:	c3 5d       	subi	r28, 0xD3	; 211
    1b5e:	d0 40       	sbci	r29, 0x00	; 0
    1b60:	8d 34       	cpi	r24, 0x4D	; 77
    1b62:	91 05       	cpc	r25, r1
    1b64:	54 f4       	brge	.+20     	; 0x1b7a <main+0x1034>
    1b66:	cd 52       	subi	r28, 0x2D	; 45
    1b68:	df 4f       	sbci	r29, 0xFF	; 255
    1b6a:	e8 81       	ld	r30, Y
    1b6c:	f9 81       	ldd	r31, Y+1	; 0x01
    1b6e:	c3 5d       	subi	r28, 0xD3	; 211
    1b70:	d0 40       	sbci	r29, 0x00	; 0
    1b72:	e5 34       	cpi	r30, 0x45	; 69
    1b74:	f1 05       	cpc	r31, r1
    1b76:	71 f1       	breq	.+92     	; 0x1bd4 <main+0x108e>
    1b78:	7d cb       	rjmp	.-2310   	; 0x1274 <main+0x72e>
    1b7a:	cd 52       	subi	r28, 0x2D	; 45
    1b7c:	df 4f       	sbci	r29, 0xFF	; 255
    1b7e:	28 81       	ld	r18, Y
    1b80:	39 81       	ldd	r19, Y+1	; 0x01
    1b82:	c3 5d       	subi	r28, 0xD3	; 211
    1b84:	d0 40       	sbci	r29, 0x00	; 0
    1b86:	2d 34       	cpi	r18, 0x4D	; 77
    1b88:	31 05       	cpc	r19, r1
    1b8a:	51 f0       	breq	.+20     	; 0x1ba0 <main+0x105a>
    1b8c:	cd 52       	subi	r28, 0x2D	; 45
    1b8e:	df 4f       	sbci	r29, 0xFF	; 255
    1b90:	88 81       	ld	r24, Y
    1b92:	99 81       	ldd	r25, Y+1	; 0x01
    1b94:	c3 5d       	subi	r28, 0xD3	; 211
    1b96:	d0 40       	sbci	r29, 0x00	; 0
    1b98:	82 35       	cpi	r24, 0x52	; 82
    1b9a:	91 05       	cpc	r25, r1
    1b9c:	31 f0       	breq	.+12     	; 0x1baa <main+0x1064>
    1b9e:	6a cb       	rjmp	.-2348   	; 0x1274 <main+0x72e>
				{
				case 'M' : LCD_voidClearDisplay(); u8Icon = 0; break;
    1ba0:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1ba4:	10 92 8d 01 	sts	0x018D, r1
    1ba8:	65 cb       	rjmp	.-2358   	; 0x1274 <main+0x72e>
				case 'R' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str7);  u8Icon = 8;  break;
    1baa:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1bae:	ce 01       	movw	r24, r28
    1bb0:	88 58       	subi	r24, 0x88	; 136
    1bb2:	9f 4f       	sbci	r25, 0xFF	; 255
    1bb4:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1bb8:	88 e0       	ldi	r24, 0x08	; 8
    1bba:	80 93 8d 01 	sts	0x018D, r24
    1bbe:	5a cb       	rjmp	.-2380   	; 0x1274 <main+0x72e>
				case 'L' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str3);  u8Icon = 4;  break;
    1bc0:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1bc4:	ce 01       	movw	r24, r28
    1bc6:	c4 96       	adiw	r24, 0x34	; 52
    1bc8:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1bcc:	84 e0       	ldi	r24, 0x04	; 4
    1bce:	80 93 8d 01 	sts	0x018D, r24
    1bd2:	50 cb       	rjmp	.-2400   	; 0x1274 <main+0x72e>
				case 'E' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str5);  u8Icon = 6;  break;
    1bd4:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1bd8:	ce 01       	movw	r24, r28
    1bda:	8a 5a       	subi	r24, 0xAA	; 170
    1bdc:	9f 4f       	sbci	r25, 0xFF	; 255
    1bde:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1be2:	86 e0       	ldi	r24, 0x06	; 6
    1be4:	80 93 8d 01 	sts	0x018D, r24
    1be8:	45 cb       	rjmp	.-2422   	; 0x1274 <main+0x72e>
				}
			}
		}
//****************************************************************************************************************************************************
		/* Alarm on Icon */
		else if (u8Icon == 6)
    1bea:	80 91 8d 01 	lds	r24, 0x018D
    1bee:	86 30       	cpi	r24, 0x06	; 6
    1bf0:	09 f0       	breq	.+2      	; 0x1bf4 <main+0x10ae>
    1bf2:	67 c0       	rjmp	.+206    	; 0x1cc2 <main+0x117c>
		{
			LCD_voidDisableCursor();
    1bf4:	0e 94 27 29 	call	0x524e	; 0x524e <LCD_voidDisableCursor>
			if(u8Key != NULL)
    1bf8:	80 91 8c 01 	lds	r24, 0x018C
    1bfc:	88 23       	and	r24, r24
    1bfe:	09 f4       	brne	.+2      	; 0x1c02 <main+0x10bc>
    1c00:	39 cb       	rjmp	.-2446   	; 0x1274 <main+0x72e>
			{
				switch(u8Key)
    1c02:	80 91 8c 01 	lds	r24, 0x018C
    1c06:	e8 2f       	mov	r30, r24
    1c08:	f0 e0       	ldi	r31, 0x00	; 0
    1c0a:	cf 52       	subi	r28, 0x2F	; 47
    1c0c:	df 4f       	sbci	r29, 0xFF	; 255
    1c0e:	f9 83       	std	Y+1, r31	; 0x01
    1c10:	e8 83       	st	Y, r30
    1c12:	c1 5d       	subi	r28, 0xD1	; 209
    1c14:	d0 40       	sbci	r29, 0x00	; 0
    1c16:	cf 52       	subi	r28, 0x2F	; 47
    1c18:	df 4f       	sbci	r29, 0xFF	; 255
    1c1a:	28 81       	ld	r18, Y
    1c1c:	39 81       	ldd	r19, Y+1	; 0x01
    1c1e:	c1 5d       	subi	r28, 0xD1	; 209
    1c20:	d0 40       	sbci	r29, 0x00	; 0
    1c22:	2c 34       	cpi	r18, 0x4C	; 76
    1c24:	31 05       	cpc	r19, r1
    1c26:	e1 f1       	breq	.+120    	; 0x1ca0 <main+0x115a>
    1c28:	cf 52       	subi	r28, 0x2F	; 47
    1c2a:	df 4f       	sbci	r29, 0xFF	; 255
    1c2c:	88 81       	ld	r24, Y
    1c2e:	99 81       	ldd	r25, Y+1	; 0x01
    1c30:	c1 5d       	subi	r28, 0xD1	; 209
    1c32:	d0 40       	sbci	r29, 0x00	; 0
    1c34:	8d 34       	cpi	r24, 0x4D	; 77
    1c36:	91 05       	cpc	r25, r1
    1c38:	54 f4       	brge	.+20     	; 0x1c4e <main+0x1108>
    1c3a:	cf 52       	subi	r28, 0x2F	; 47
    1c3c:	df 4f       	sbci	r29, 0xFF	; 255
    1c3e:	e8 81       	ld	r30, Y
    1c40:	f9 81       	ldd	r31, Y+1	; 0x01
    1c42:	c1 5d       	subi	r28, 0xD1	; 209
    1c44:	d0 40       	sbci	r29, 0x00	; 0
    1c46:	e5 34       	cpi	r30, 0x45	; 69
    1c48:	f1 05       	cpc	r31, r1
    1c4a:	a9 f1       	breq	.+106    	; 0x1cb6 <main+0x1170>
    1c4c:	13 cb       	rjmp	.-2522   	; 0x1274 <main+0x72e>
    1c4e:	cf 52       	subi	r28, 0x2F	; 47
    1c50:	df 4f       	sbci	r29, 0xFF	; 255
    1c52:	28 81       	ld	r18, Y
    1c54:	39 81       	ldd	r19, Y+1	; 0x01
    1c56:	c1 5d       	subi	r28, 0xD1	; 209
    1c58:	d0 40       	sbci	r29, 0x00	; 0
    1c5a:	2d 34       	cpi	r18, 0x4D	; 77
    1c5c:	31 05       	cpc	r19, r1
    1c5e:	51 f0       	breq	.+20     	; 0x1c74 <main+0x112e>
    1c60:	cf 52       	subi	r28, 0x2F	; 47
    1c62:	df 4f       	sbci	r29, 0xFF	; 255
    1c64:	88 81       	ld	r24, Y
    1c66:	99 81       	ldd	r25, Y+1	; 0x01
    1c68:	c1 5d       	subi	r28, 0xD1	; 209
    1c6a:	d0 40       	sbci	r29, 0x00	; 0
    1c6c:	82 35       	cpi	r24, 0x52	; 82
    1c6e:	91 05       	cpc	r25, r1
    1c70:	61 f0       	breq	.+24     	; 0x1c8a <main+0x1144>
    1c72:	00 cb       	rjmp	.-2560   	; 0x1274 <main+0x72e>
				{
				case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str4);  u8Icon = 5; break;
    1c74:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1c78:	ce 01       	movw	r24, r28
    1c7a:	8b 5b       	subi	r24, 0xBB	; 187
    1c7c:	9f 4f       	sbci	r25, 0xFF	; 255
    1c7e:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1c82:	85 e0       	ldi	r24, 0x05	; 5
    1c84:	80 93 8d 01 	sts	0x018D, r24
    1c88:	f5 ca       	rjmp	.-2582   	; 0x1274 <main+0x72e>
				case 'R' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str6);  u8Icon = 7; break;
    1c8a:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1c8e:	ce 01       	movw	r24, r28
    1c90:	89 59       	subi	r24, 0x99	; 153
    1c92:	9f 4f       	sbci	r25, 0xFF	; 255
    1c94:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1c98:	87 e0       	ldi	r24, 0x07	; 7
    1c9a:	80 93 8d 01 	sts	0x018D, r24
    1c9e:	ea ca       	rjmp	.-2604   	; 0x1274 <main+0x72e>
				case 'L' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str6);  u8Icon = 7; break;
    1ca0:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1ca4:	ce 01       	movw	r24, r28
    1ca6:	89 59       	subi	r24, 0x99	; 153
    1ca8:	9f 4f       	sbci	r25, 0xFF	; 255
    1caa:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1cae:	87 e0       	ldi	r24, 0x07	; 7
    1cb0:	80 93 8d 01 	sts	0x018D, r24
    1cb4:	df ca       	rjmp	.-2626   	; 0x1274 <main+0x72e>
				case 'E' : LCD_voidClearDisplay();                              u8Icon = 11;break;
    1cb6:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1cba:	8b e0       	ldi	r24, 0x0B	; 11
    1cbc:	80 93 8d 01 	sts	0x018D, r24
    1cc0:	d9 ca       	rjmp	.-2638   	; 0x1274 <main+0x72e>
				}
			}
		}
//**********************************************************************************************************************************************************
		/* Alarm off Icon */
		else if (u8Icon == 7)
    1cc2:	80 91 8d 01 	lds	r24, 0x018D
    1cc6:	87 30       	cpi	r24, 0x07	; 7
    1cc8:	09 f0       	breq	.+2      	; 0x1ccc <main+0x1186>
    1cca:	66 c0       	rjmp	.+204    	; 0x1d98 <main+0x1252>
		{
			if(u8Key != NULL)
    1ccc:	80 91 8c 01 	lds	r24, 0x018C
    1cd0:	88 23       	and	r24, r24
    1cd2:	09 f4       	brne	.+2      	; 0x1cd6 <main+0x1190>
    1cd4:	cf ca       	rjmp	.-2658   	; 0x1274 <main+0x72e>
			{
				switch(u8Key)
    1cd6:	80 91 8c 01 	lds	r24, 0x018C
    1cda:	e8 2f       	mov	r30, r24
    1cdc:	f0 e0       	ldi	r31, 0x00	; 0
    1cde:	c1 53       	subi	r28, 0x31	; 49
    1ce0:	df 4f       	sbci	r29, 0xFF	; 255
    1ce2:	f9 83       	std	Y+1, r31	; 0x01
    1ce4:	e8 83       	st	Y, r30
    1ce6:	cf 5c       	subi	r28, 0xCF	; 207
    1ce8:	d0 40       	sbci	r29, 0x00	; 0
    1cea:	c1 53       	subi	r28, 0x31	; 49
    1cec:	df 4f       	sbci	r29, 0xFF	; 255
    1cee:	28 81       	ld	r18, Y
    1cf0:	39 81       	ldd	r19, Y+1	; 0x01
    1cf2:	cf 5c       	subi	r28, 0xCF	; 207
    1cf4:	d0 40       	sbci	r29, 0x00	; 0
    1cf6:	2c 34       	cpi	r18, 0x4C	; 76
    1cf8:	31 05       	cpc	r19, r1
    1cfa:	e1 f1       	breq	.+120    	; 0x1d74 <main+0x122e>
    1cfc:	c1 53       	subi	r28, 0x31	; 49
    1cfe:	df 4f       	sbci	r29, 0xFF	; 255
    1d00:	88 81       	ld	r24, Y
    1d02:	99 81       	ldd	r25, Y+1	; 0x01
    1d04:	cf 5c       	subi	r28, 0xCF	; 207
    1d06:	d0 40       	sbci	r29, 0x00	; 0
    1d08:	8d 34       	cpi	r24, 0x4D	; 77
    1d0a:	91 05       	cpc	r25, r1
    1d0c:	54 f4       	brge	.+20     	; 0x1d22 <main+0x11dc>
    1d0e:	c1 53       	subi	r28, 0x31	; 49
    1d10:	df 4f       	sbci	r29, 0xFF	; 255
    1d12:	e8 81       	ld	r30, Y
    1d14:	f9 81       	ldd	r31, Y+1	; 0x01
    1d16:	cf 5c       	subi	r28, 0xCF	; 207
    1d18:	d0 40       	sbci	r29, 0x00	; 0
    1d1a:	e5 34       	cpi	r30, 0x45	; 69
    1d1c:	f1 05       	cpc	r31, r1
    1d1e:	a9 f1       	breq	.+106    	; 0x1d8a <main+0x1244>
    1d20:	a9 ca       	rjmp	.-2734   	; 0x1274 <main+0x72e>
    1d22:	c1 53       	subi	r28, 0x31	; 49
    1d24:	df 4f       	sbci	r29, 0xFF	; 255
    1d26:	28 81       	ld	r18, Y
    1d28:	39 81       	ldd	r19, Y+1	; 0x01
    1d2a:	cf 5c       	subi	r28, 0xCF	; 207
    1d2c:	d0 40       	sbci	r29, 0x00	; 0
    1d2e:	2d 34       	cpi	r18, 0x4D	; 77
    1d30:	31 05       	cpc	r19, r1
    1d32:	51 f0       	breq	.+20     	; 0x1d48 <main+0x1202>
    1d34:	c1 53       	subi	r28, 0x31	; 49
    1d36:	df 4f       	sbci	r29, 0xFF	; 255
    1d38:	88 81       	ld	r24, Y
    1d3a:	99 81       	ldd	r25, Y+1	; 0x01
    1d3c:	cf 5c       	subi	r28, 0xCF	; 207
    1d3e:	d0 40       	sbci	r29, 0x00	; 0
    1d40:	82 35       	cpi	r24, 0x52	; 82
    1d42:	91 05       	cpc	r25, r1
    1d44:	61 f0       	breq	.+24     	; 0x1d5e <main+0x1218>
    1d46:	96 ca       	rjmp	.-2772   	; 0x1274 <main+0x72e>
				{
				case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str4);  u8Icon = 5; break;
    1d48:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1d4c:	ce 01       	movw	r24, r28
    1d4e:	8b 5b       	subi	r24, 0xBB	; 187
    1d50:	9f 4f       	sbci	r25, 0xFF	; 255
    1d52:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1d56:	85 e0       	ldi	r24, 0x05	; 5
    1d58:	80 93 8d 01 	sts	0x018D, r24
    1d5c:	8b ca       	rjmp	.-2794   	; 0x1274 <main+0x72e>
				case 'R' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str5);  u8Icon = 6; break;
    1d5e:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1d62:	ce 01       	movw	r24, r28
    1d64:	8a 5a       	subi	r24, 0xAA	; 170
    1d66:	9f 4f       	sbci	r25, 0xFF	; 255
    1d68:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1d6c:	86 e0       	ldi	r24, 0x06	; 6
    1d6e:	80 93 8d 01 	sts	0x018D, r24
    1d72:	80 ca       	rjmp	.-2816   	; 0x1274 <main+0x72e>
				case 'L' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str5);  u8Icon = 6; break;
    1d74:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1d78:	ce 01       	movw	r24, r28
    1d7a:	8a 5a       	subi	r24, 0xAA	; 170
    1d7c:	9f 4f       	sbci	r25, 0xFF	; 255
    1d7e:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1d82:	86 e0       	ldi	r24, 0x06	; 6
    1d84:	80 93 8d 01 	sts	0x018D, r24
    1d88:	75 ca       	rjmp	.-2838   	; 0x1274 <main+0x72e>
				case 'E' : LCD_voidClearDisplay(); u8Icon = 0;           u8AlarmStatus = 0; break;
    1d8a:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1d8e:	10 92 8d 01 	sts	0x018D, r1
    1d92:	10 92 95 01 	sts	0x0195, r1
    1d96:	6e ca       	rjmp	.-2852   	; 0x1274 <main+0x72e>
				}
			}
		}
//**********************************************************************************************************************************************************
		/* TIMER Setting Icon */
		else if(u8Icon == 8)
    1d98:	80 91 8d 01 	lds	r24, 0x018D
    1d9c:	88 30       	cpi	r24, 0x08	; 8
    1d9e:	09 f0       	breq	.+2      	; 0x1da2 <main+0x125c>
    1da0:	65 c0       	rjmp	.+202    	; 0x1e6c <main+0x1326>
		{
			LCD_voidDisableCursor();
    1da2:	0e 94 27 29 	call	0x524e	; 0x524e <LCD_voidDisableCursor>
			if(u8Key != NULL)
    1da6:	80 91 8c 01 	lds	r24, 0x018C
    1daa:	88 23       	and	r24, r24
    1dac:	09 f4       	brne	.+2      	; 0x1db0 <main+0x126a>
    1dae:	62 ca       	rjmp	.-2876   	; 0x1274 <main+0x72e>
			{
				switch(u8Key)
    1db0:	80 91 8c 01 	lds	r24, 0x018C
    1db4:	e8 2f       	mov	r30, r24
    1db6:	f0 e0       	ldi	r31, 0x00	; 0
    1db8:	c3 53       	subi	r28, 0x33	; 51
    1dba:	df 4f       	sbci	r29, 0xFF	; 255
    1dbc:	f9 83       	std	Y+1, r31	; 0x01
    1dbe:	e8 83       	st	Y, r30
    1dc0:	cd 5c       	subi	r28, 0xCD	; 205
    1dc2:	d0 40       	sbci	r29, 0x00	; 0
    1dc4:	c3 53       	subi	r28, 0x33	; 51
    1dc6:	df 4f       	sbci	r29, 0xFF	; 255
    1dc8:	28 81       	ld	r18, Y
    1dca:	39 81       	ldd	r19, Y+1	; 0x01
    1dcc:	cd 5c       	subi	r28, 0xCD	; 205
    1dce:	d0 40       	sbci	r29, 0x00	; 0
    1dd0:	2c 34       	cpi	r18, 0x4C	; 76
    1dd2:	31 05       	cpc	r19, r1
    1dd4:	a9 f1       	breq	.+106    	; 0x1e40 <main+0x12fa>
    1dd6:	c3 53       	subi	r28, 0x33	; 51
    1dd8:	df 4f       	sbci	r29, 0xFF	; 255
    1dda:	88 81       	ld	r24, Y
    1ddc:	99 81       	ldd	r25, Y+1	; 0x01
    1dde:	cd 5c       	subi	r28, 0xCD	; 205
    1de0:	d0 40       	sbci	r29, 0x00	; 0
    1de2:	8d 34       	cpi	r24, 0x4D	; 77
    1de4:	91 05       	cpc	r25, r1
    1de6:	54 f4       	brge	.+20     	; 0x1dfc <main+0x12b6>
    1de8:	c3 53       	subi	r28, 0x33	; 51
    1dea:	df 4f       	sbci	r29, 0xFF	; 255
    1dec:	e8 81       	ld	r30, Y
    1dee:	f9 81       	ldd	r31, Y+1	; 0x01
    1df0:	cd 5c       	subi	r28, 0xCD	; 205
    1df2:	d0 40       	sbci	r29, 0x00	; 0
    1df4:	e5 34       	cpi	r30, 0x45	; 69
    1df6:	f1 05       	cpc	r31, r1
    1df8:	71 f1       	breq	.+92     	; 0x1e56 <main+0x1310>
    1dfa:	3c ca       	rjmp	.-2952   	; 0x1274 <main+0x72e>
    1dfc:	c3 53       	subi	r28, 0x33	; 51
    1dfe:	df 4f       	sbci	r29, 0xFF	; 255
    1e00:	28 81       	ld	r18, Y
    1e02:	39 81       	ldd	r19, Y+1	; 0x01
    1e04:	cd 5c       	subi	r28, 0xCD	; 205
    1e06:	d0 40       	sbci	r29, 0x00	; 0
    1e08:	2d 34       	cpi	r18, 0x4D	; 77
    1e0a:	31 05       	cpc	r19, r1
    1e0c:	51 f0       	breq	.+20     	; 0x1e22 <main+0x12dc>
    1e0e:	c3 53       	subi	r28, 0x33	; 51
    1e10:	df 4f       	sbci	r29, 0xFF	; 255
    1e12:	88 81       	ld	r24, Y
    1e14:	99 81       	ldd	r25, Y+1	; 0x01
    1e16:	cd 5c       	subi	r28, 0xCD	; 205
    1e18:	d0 40       	sbci	r29, 0x00	; 0
    1e1a:	82 35       	cpi	r24, 0x52	; 82
    1e1c:	91 05       	cpc	r25, r1
    1e1e:	31 f0       	breq	.+12     	; 0x1e2c <main+0x12e6>
    1e20:	29 ca       	rjmp	.-2990   	; 0x1274 <main+0x72e>
				{
				case 'M' : LCD_voidClearDisplay(); u8Icon = 0;                              break;
    1e22:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1e26:	10 92 8d 01 	sts	0x018D, r1
    1e2a:	24 ca       	rjmp	.-3000   	; 0x1274 <main+0x72e>
				case 'R' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str0);  u8Icon = 1; break;
    1e2c:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1e30:	ce 01       	movw	r24, r28
    1e32:	01 96       	adiw	r24, 0x01	; 1
    1e34:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1e38:	81 e0       	ldi	r24, 0x01	; 1
    1e3a:	80 93 8d 01 	sts	0x018D, r24
    1e3e:	1a ca       	rjmp	.-3020   	; 0x1274 <main+0x72e>
				case 'L' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str4);  u8Icon = 5; break;
    1e40:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1e44:	ce 01       	movw	r24, r28
    1e46:	8b 5b       	subi	r24, 0xBB	; 187
    1e48:	9f 4f       	sbci	r25, 0xFF	; 255
    1e4a:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1e4e:	85 e0       	ldi	r24, 0x05	; 5
    1e50:	80 93 8d 01 	sts	0x018D, r24
    1e54:	0f ca       	rjmp	.-3042   	; 0x1274 <main+0x72e>
				case 'E' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str8);  u8Icon = 9; break;
    1e56:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1e5a:	ce 01       	movw	r24, r28
    1e5c:	87 57       	subi	r24, 0x77	; 119
    1e5e:	9f 4f       	sbci	r25, 0xFF	; 255
    1e60:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1e64:	89 e0       	ldi	r24, 0x09	; 9
    1e66:	80 93 8d 01 	sts	0x018D, r24
    1e6a:	04 ca       	rjmp	.-3064   	; 0x1274 <main+0x72e>
				}
			}
		}
//************************************************************************************************************************************************************
		/* Timer Set Icon */
		else if(u8Icon == 9)
    1e6c:	80 91 8d 01 	lds	r24, 0x018D
    1e70:	89 30       	cpi	r24, 0x09	; 9
    1e72:	09 f0       	breq	.+2      	; 0x1e76 <main+0x1330>
    1e74:	67 c0       	rjmp	.+206    	; 0x1f44 <main+0x13fe>
		{
			LCD_voidDisableCursor();
    1e76:	0e 94 27 29 	call	0x524e	; 0x524e <LCD_voidDisableCursor>
			if(u8Key != NULL)
    1e7a:	80 91 8c 01 	lds	r24, 0x018C
    1e7e:	88 23       	and	r24, r24
    1e80:	09 f4       	brne	.+2      	; 0x1e84 <main+0x133e>
    1e82:	f8 c9       	rjmp	.-3088   	; 0x1274 <main+0x72e>
			{
				switch(u8Key)
    1e84:	80 91 8c 01 	lds	r24, 0x018C
    1e88:	e8 2f       	mov	r30, r24
    1e8a:	f0 e0       	ldi	r31, 0x00	; 0
    1e8c:	c5 53       	subi	r28, 0x35	; 53
    1e8e:	df 4f       	sbci	r29, 0xFF	; 255
    1e90:	f9 83       	std	Y+1, r31	; 0x01
    1e92:	e8 83       	st	Y, r30
    1e94:	cb 5c       	subi	r28, 0xCB	; 203
    1e96:	d0 40       	sbci	r29, 0x00	; 0
    1e98:	c5 53       	subi	r28, 0x35	; 53
    1e9a:	df 4f       	sbci	r29, 0xFF	; 255
    1e9c:	28 81       	ld	r18, Y
    1e9e:	39 81       	ldd	r19, Y+1	; 0x01
    1ea0:	cb 5c       	subi	r28, 0xCB	; 203
    1ea2:	d0 40       	sbci	r29, 0x00	; 0
    1ea4:	2c 34       	cpi	r18, 0x4C	; 76
    1ea6:	31 05       	cpc	r19, r1
    1ea8:	e1 f1       	breq	.+120    	; 0x1f22 <main+0x13dc>
    1eaa:	c5 53       	subi	r28, 0x35	; 53
    1eac:	df 4f       	sbci	r29, 0xFF	; 255
    1eae:	88 81       	ld	r24, Y
    1eb0:	99 81       	ldd	r25, Y+1	; 0x01
    1eb2:	cb 5c       	subi	r28, 0xCB	; 203
    1eb4:	d0 40       	sbci	r29, 0x00	; 0
    1eb6:	8d 34       	cpi	r24, 0x4D	; 77
    1eb8:	91 05       	cpc	r25, r1
    1eba:	54 f4       	brge	.+20     	; 0x1ed0 <main+0x138a>
    1ebc:	c5 53       	subi	r28, 0x35	; 53
    1ebe:	df 4f       	sbci	r29, 0xFF	; 255
    1ec0:	e8 81       	ld	r30, Y
    1ec2:	f9 81       	ldd	r31, Y+1	; 0x01
    1ec4:	cb 5c       	subi	r28, 0xCB	; 203
    1ec6:	d0 40       	sbci	r29, 0x00	; 0
    1ec8:	e5 34       	cpi	r30, 0x45	; 69
    1eca:	f1 05       	cpc	r31, r1
    1ecc:	a9 f1       	breq	.+106    	; 0x1f38 <main+0x13f2>
    1ece:	d2 c9       	rjmp	.-3164   	; 0x1274 <main+0x72e>
    1ed0:	c5 53       	subi	r28, 0x35	; 53
    1ed2:	df 4f       	sbci	r29, 0xFF	; 255
    1ed4:	28 81       	ld	r18, Y
    1ed6:	39 81       	ldd	r19, Y+1	; 0x01
    1ed8:	cb 5c       	subi	r28, 0xCB	; 203
    1eda:	d0 40       	sbci	r29, 0x00	; 0
    1edc:	2d 34       	cpi	r18, 0x4D	; 77
    1ede:	31 05       	cpc	r19, r1
    1ee0:	51 f0       	breq	.+20     	; 0x1ef6 <main+0x13b0>
    1ee2:	c5 53       	subi	r28, 0x35	; 53
    1ee4:	df 4f       	sbci	r29, 0xFF	; 255
    1ee6:	88 81       	ld	r24, Y
    1ee8:	99 81       	ldd	r25, Y+1	; 0x01
    1eea:	cb 5c       	subi	r28, 0xCB	; 203
    1eec:	d0 40       	sbci	r29, 0x00	; 0
    1eee:	82 35       	cpi	r24, 0x52	; 82
    1ef0:	91 05       	cpc	r25, r1
    1ef2:	61 f0       	breq	.+24     	; 0x1f0c <main+0x13c6>
    1ef4:	bf c9       	rjmp	.-3202   	; 0x1274 <main+0x72e>
				{
				case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str7);  u8Icon = 8;  break;
    1ef6:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1efa:	ce 01       	movw	r24, r28
    1efc:	88 58       	subi	r24, 0x88	; 136
    1efe:	9f 4f       	sbci	r25, 0xFF	; 255
    1f00:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1f04:	88 e0       	ldi	r24, 0x08	; 8
    1f06:	80 93 8d 01 	sts	0x018D, r24
    1f0a:	b4 c9       	rjmp	.-3224   	; 0x1274 <main+0x72e>
				case 'R' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str9);  u8Icon = 10; break;
    1f0c:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1f10:	ce 01       	movw	r24, r28
    1f12:	86 56       	subi	r24, 0x66	; 102
    1f14:	9f 4f       	sbci	r25, 0xFF	; 255
    1f16:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1f1a:	8a e0       	ldi	r24, 0x0A	; 10
    1f1c:	80 93 8d 01 	sts	0x018D, r24
    1f20:	a9 c9       	rjmp	.-3246   	; 0x1274 <main+0x72e>
				case 'L' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str9);  u8Icon = 10; break;
    1f22:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1f26:	ce 01       	movw	r24, r28
    1f28:	86 56       	subi	r24, 0x66	; 102
    1f2a:	9f 4f       	sbci	r25, 0xFF	; 255
    1f2c:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1f30:	8a e0       	ldi	r24, 0x0A	; 10
    1f32:	80 93 8d 01 	sts	0x018D, r24
    1f36:	9e c9       	rjmp	.-3268   	; 0x1274 <main+0x72e>
				case 'E' : LCD_voidClearDisplay();                              u8Icon = 15; break;
    1f38:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1f3c:	8f e0       	ldi	r24, 0x0F	; 15
    1f3e:	80 93 8d 01 	sts	0x018D, r24
    1f42:	98 c9       	rjmp	.-3280   	; 0x1274 <main+0x72e>
				}
			}
		}
//********************************************************************************************************************************************************************
		/* Timer Clear Icon */
		else if(u8Icon == 10)
    1f44:	80 91 8d 01 	lds	r24, 0x018D
    1f48:	8a 30       	cpi	r24, 0x0A	; 10
    1f4a:	09 f0       	breq	.+2      	; 0x1f4e <main+0x1408>
    1f4c:	6c c0       	rjmp	.+216    	; 0x2026 <main+0x14e0>
		{
			if(u8Key != NULL)
    1f4e:	80 91 8c 01 	lds	r24, 0x018C
    1f52:	88 23       	and	r24, r24
    1f54:	09 f4       	brne	.+2      	; 0x1f58 <main+0x1412>
    1f56:	8e c9       	rjmp	.-3300   	; 0x1274 <main+0x72e>
			{
				switch(u8Key)
    1f58:	80 91 8c 01 	lds	r24, 0x018C
    1f5c:	e8 2f       	mov	r30, r24
    1f5e:	f0 e0       	ldi	r31, 0x00	; 0
    1f60:	c7 53       	subi	r28, 0x37	; 55
    1f62:	df 4f       	sbci	r29, 0xFF	; 255
    1f64:	f9 83       	std	Y+1, r31	; 0x01
    1f66:	e8 83       	st	Y, r30
    1f68:	c9 5c       	subi	r28, 0xC9	; 201
    1f6a:	d0 40       	sbci	r29, 0x00	; 0
    1f6c:	c7 53       	subi	r28, 0x37	; 55
    1f6e:	df 4f       	sbci	r29, 0xFF	; 255
    1f70:	28 81       	ld	r18, Y
    1f72:	39 81       	ldd	r19, Y+1	; 0x01
    1f74:	c9 5c       	subi	r28, 0xC9	; 201
    1f76:	d0 40       	sbci	r29, 0x00	; 0
    1f78:	2c 34       	cpi	r18, 0x4C	; 76
    1f7a:	31 05       	cpc	r19, r1
    1f7c:	e1 f1       	breq	.+120    	; 0x1ff6 <main+0x14b0>
    1f7e:	c7 53       	subi	r28, 0x37	; 55
    1f80:	df 4f       	sbci	r29, 0xFF	; 255
    1f82:	88 81       	ld	r24, Y
    1f84:	99 81       	ldd	r25, Y+1	; 0x01
    1f86:	c9 5c       	subi	r28, 0xC9	; 201
    1f88:	d0 40       	sbci	r29, 0x00	; 0
    1f8a:	8d 34       	cpi	r24, 0x4D	; 77
    1f8c:	91 05       	cpc	r25, r1
    1f8e:	54 f4       	brge	.+20     	; 0x1fa4 <main+0x145e>
    1f90:	c7 53       	subi	r28, 0x37	; 55
    1f92:	df 4f       	sbci	r29, 0xFF	; 255
    1f94:	e8 81       	ld	r30, Y
    1f96:	f9 81       	ldd	r31, Y+1	; 0x01
    1f98:	c9 5c       	subi	r28, 0xC9	; 201
    1f9a:	d0 40       	sbci	r29, 0x00	; 0
    1f9c:	e5 34       	cpi	r30, 0x45	; 69
    1f9e:	f1 05       	cpc	r31, r1
    1fa0:	a9 f1       	breq	.+106    	; 0x200c <main+0x14c6>
    1fa2:	68 c9       	rjmp	.-3376   	; 0x1274 <main+0x72e>
    1fa4:	c7 53       	subi	r28, 0x37	; 55
    1fa6:	df 4f       	sbci	r29, 0xFF	; 255
    1fa8:	28 81       	ld	r18, Y
    1faa:	39 81       	ldd	r19, Y+1	; 0x01
    1fac:	c9 5c       	subi	r28, 0xC9	; 201
    1fae:	d0 40       	sbci	r29, 0x00	; 0
    1fb0:	2d 34       	cpi	r18, 0x4D	; 77
    1fb2:	31 05       	cpc	r19, r1
    1fb4:	51 f0       	breq	.+20     	; 0x1fca <main+0x1484>
    1fb6:	c7 53       	subi	r28, 0x37	; 55
    1fb8:	df 4f       	sbci	r29, 0xFF	; 255
    1fba:	88 81       	ld	r24, Y
    1fbc:	99 81       	ldd	r25, Y+1	; 0x01
    1fbe:	c9 5c       	subi	r28, 0xC9	; 201
    1fc0:	d0 40       	sbci	r29, 0x00	; 0
    1fc2:	82 35       	cpi	r24, 0x52	; 82
    1fc4:	91 05       	cpc	r25, r1
    1fc6:	61 f0       	breq	.+24     	; 0x1fe0 <main+0x149a>
    1fc8:	55 c9       	rjmp	.-3414   	; 0x1274 <main+0x72e>
				{
				case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str7);  u8Icon = 8;                   break;
    1fca:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1fce:	ce 01       	movw	r24, r28
    1fd0:	88 58       	subi	r24, 0x88	; 136
    1fd2:	9f 4f       	sbci	r25, 0xFF	; 255
    1fd4:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1fd8:	88 e0       	ldi	r24, 0x08	; 8
    1fda:	80 93 8d 01 	sts	0x018D, r24
    1fde:	4a c9       	rjmp	.-3436   	; 0x1274 <main+0x72e>
				case 'R' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str8);  u8Icon = 9;                   break;
    1fe0:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1fe4:	ce 01       	movw	r24, r28
    1fe6:	87 57       	subi	r24, 0x77	; 119
    1fe8:	9f 4f       	sbci	r25, 0xFF	; 255
    1fea:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    1fee:	89 e0       	ldi	r24, 0x09	; 9
    1ff0:	80 93 8d 01 	sts	0x018D, r24
    1ff4:	3f c9       	rjmp	.-3458   	; 0x1274 <main+0x72e>
				case 'L' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str8);  u8Icon = 9;                   break;
    1ff6:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    1ffa:	ce 01       	movw	r24, r28
    1ffc:	87 57       	subi	r24, 0x77	; 119
    1ffe:	9f 4f       	sbci	r25, 0xFF	; 255
    2000:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    2004:	89 e0       	ldi	r24, 0x09	; 9
    2006:	80 93 8d 01 	sts	0x018D, r24
    200a:	34 c9       	rjmp	.-3480   	; 0x1274 <main+0x72e>
				case 'E' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str7);  u8Icon = 8; u8StartTimer = 0; break;
    200c:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    2010:	ce 01       	movw	r24, r28
    2012:	88 58       	subi	r24, 0x88	; 136
    2014:	9f 4f       	sbci	r25, 0xFF	; 255
    2016:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    201a:	88 e0       	ldi	r24, 0x08	; 8
    201c:	80 93 8d 01 	sts	0x018D, r24
    2020:	10 92 99 01 	sts	0x0199, r1
    2024:	27 c9       	rjmp	.-3506   	; 0x1274 <main+0x72e>
				}
			}
		}
//**********************************************************************************************************************************************************
		/* Alarm Setting */
		else if (u8Icon == 11)
    2026:	80 91 8d 01 	lds	r24, 0x018D
    202a:	8b 30       	cpi	r24, 0x0B	; 11
    202c:	09 f0       	breq	.+2      	; 0x2030 <main+0x14ea>
    202e:	4b c3       	rjmp	.+1686   	; 0x26c6 <main+0x1b80>
		{
			LCD_voidEnableCursor();
    2030:	0e 94 af 29 	call	0x535e	; 0x535e <LCD_voidEnableCursor>
			if (u8AlarmSetting == 0)
    2034:	80 91 92 01 	lds	r24, 0x0192
    2038:	88 23       	and	r24, r24
    203a:	09 f0       	breq	.+2      	; 0x203e <main+0x14f8>
    203c:	9f c0       	rjmp	.+318    	; 0x217c <main+0x1636>
			{
				if(au8Alarm[0] < 10)
    203e:	80 91 2c 01 	lds	r24, 0x012C
    2042:	8a 30       	cpi	r24, 0x0A	; 10
    2044:	a8 f4       	brcc	.+42     	; 0x2070 <main+0x152a>
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM3);
    2046:	80 e0       	ldi	r24, 0x00	; 0
    2048:	62 e0       	ldi	r22, 0x02	; 2
    204a:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendData('0');
    204e:	80 e3       	ldi	r24, 0x30	; 48
    2050:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
					LCD_voidSendInteger(au8Alarm[HOURS]);
    2054:	80 91 2c 01 	lds	r24, 0x012C
    2058:	88 2f       	mov	r24, r24
    205a:	90 e0       	ldi	r25, 0x00	; 0
    205c:	a0 e0       	ldi	r26, 0x00	; 0
    205e:	b0 e0       	ldi	r27, 0x00	; 0
    2060:	bc 01       	movw	r22, r24
    2062:	cd 01       	movw	r24, r26
    2064:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
					LCD_voidSendData(':');
    2068:	8a e3       	ldi	r24, 0x3A	; 58
    206a:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
    206e:	11 c0       	rjmp	.+34     	; 0x2092 <main+0x154c>
				}
				else
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM3);
    2070:	80 e0       	ldi	r24, 0x00	; 0
    2072:	62 e0       	ldi	r22, 0x02	; 2
    2074:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendInteger(au8Alarm[HOURS]);
    2078:	80 91 2c 01 	lds	r24, 0x012C
    207c:	88 2f       	mov	r24, r24
    207e:	90 e0       	ldi	r25, 0x00	; 0
    2080:	a0 e0       	ldi	r26, 0x00	; 0
    2082:	b0 e0       	ldi	r27, 0x00	; 0
    2084:	bc 01       	movw	r22, r24
    2086:	cd 01       	movw	r24, r26
    2088:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
					LCD_voidSendData(':');
    208c:	8a e3       	ldi	r24, 0x3A	; 58
    208e:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
				}

				if(au8Alarm[1] < 10)
    2092:	80 91 2d 01 	lds	r24, 0x012D
    2096:	8a 30       	cpi	r24, 0x0A	; 10
    2098:	a8 f4       	brcc	.+42     	; 0x20c4 <main+0x157e>
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM6);
    209a:	80 e0       	ldi	r24, 0x00	; 0
    209c:	65 e0       	ldi	r22, 0x05	; 5
    209e:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendData('0');
    20a2:	80 e3       	ldi	r24, 0x30	; 48
    20a4:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
					LCD_voidSendInteger(au8Alarm[MINUTES]);
    20a8:	80 91 2d 01 	lds	r24, 0x012D
    20ac:	88 2f       	mov	r24, r24
    20ae:	90 e0       	ldi	r25, 0x00	; 0
    20b0:	a0 e0       	ldi	r26, 0x00	; 0
    20b2:	b0 e0       	ldi	r27, 0x00	; 0
    20b4:	bc 01       	movw	r22, r24
    20b6:	cd 01       	movw	r24, r26
    20b8:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
					LCD_voidSendData(':');
    20bc:	8a e3       	ldi	r24, 0x3A	; 58
    20be:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
    20c2:	11 c0       	rjmp	.+34     	; 0x20e6 <main+0x15a0>
				}
				else
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM6);
    20c4:	80 e0       	ldi	r24, 0x00	; 0
    20c6:	65 e0       	ldi	r22, 0x05	; 5
    20c8:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendInteger(au8Alarm[MINUTES]);
    20cc:	80 91 2d 01 	lds	r24, 0x012D
    20d0:	88 2f       	mov	r24, r24
    20d2:	90 e0       	ldi	r25, 0x00	; 0
    20d4:	a0 e0       	ldi	r26, 0x00	; 0
    20d6:	b0 e0       	ldi	r27, 0x00	; 0
    20d8:	bc 01       	movw	r22, r24
    20da:	cd 01       	movw	r24, r26
    20dc:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
					LCD_voidSendData(':');
    20e0:	8a e3       	ldi	r24, 0x3A	; 58
    20e2:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
				}

				if(au8Alarm[2] < 10)
    20e6:	80 91 2e 01 	lds	r24, 0x012E
    20ea:	8a 30       	cpi	r24, 0x0A	; 10
    20ec:	20 f5       	brcc	.+72     	; 0x2136 <main+0x15f0>
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM9);
    20ee:	80 e0       	ldi	r24, 0x00	; 0
    20f0:	68 e0       	ldi	r22, 0x08	; 8
    20f2:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendData('0');
    20f6:	80 e3       	ldi	r24, 0x30	; 48
    20f8:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
					LCD_voidSendInteger(au8Alarm[SECONDS]);
    20fc:	80 91 2e 01 	lds	r24, 0x012E
    2100:	88 2f       	mov	r24, r24
    2102:	90 e0       	ldi	r25, 0x00	; 0
    2104:	a0 e0       	ldi	r26, 0x00	; 0
    2106:	b0 e0       	ldi	r27, 0x00	; 0
    2108:	bc 01       	movw	r22, r24
    210a:	cd 01       	movw	r24, r26
    210c:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
					LCD_voidSendData(' ');
    2110:	80 e2       	ldi	r24, 0x20	; 32
    2112:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
					LCD_voidSendString(&au8AlarmForm[u8AlarmForm]);
    2116:	48 e7       	ldi	r20, 0x78	; 120
    2118:	51 e0       	ldi	r21, 0x01	; 1
    211a:	80 91 96 01 	lds	r24, 0x0196
    211e:	28 2f       	mov	r18, r24
    2120:	30 e0       	ldi	r19, 0x00	; 0
    2122:	c9 01       	movw	r24, r18
    2124:	88 0f       	add	r24, r24
    2126:	99 1f       	adc	r25, r25
    2128:	82 0f       	add	r24, r18
    212a:	93 1f       	adc	r25, r19
    212c:	84 0f       	add	r24, r20
    212e:	95 1f       	adc	r25, r21
    2130:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    2134:	20 c0       	rjmp	.+64     	; 0x2176 <main+0x1630>
				}
				else
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM9);
    2136:	80 e0       	ldi	r24, 0x00	; 0
    2138:	68 e0       	ldi	r22, 0x08	; 8
    213a:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendInteger(au8Alarm[SECONDS]);
    213e:	80 91 2e 01 	lds	r24, 0x012E
    2142:	88 2f       	mov	r24, r24
    2144:	90 e0       	ldi	r25, 0x00	; 0
    2146:	a0 e0       	ldi	r26, 0x00	; 0
    2148:	b0 e0       	ldi	r27, 0x00	; 0
    214a:	bc 01       	movw	r22, r24
    214c:	cd 01       	movw	r24, r26
    214e:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
					LCD_voidSendData(' ');
    2152:	80 e2       	ldi	r24, 0x20	; 32
    2154:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
					LCD_voidSendString(&au8AlarmForm[u8AlarmForm]);
    2158:	48 e7       	ldi	r20, 0x78	; 120
    215a:	51 e0       	ldi	r21, 0x01	; 1
    215c:	80 91 96 01 	lds	r24, 0x0196
    2160:	28 2f       	mov	r18, r24
    2162:	30 e0       	ldi	r19, 0x00	; 0
    2164:	c9 01       	movw	r24, r18
    2166:	88 0f       	add	r24, r24
    2168:	99 1f       	adc	r25, r25
    216a:	82 0f       	add	r24, r18
    216c:	93 1f       	adc	r25, r19
    216e:	84 0f       	add	r24, r20
    2170:	95 1f       	adc	r25, r21
    2172:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
				}
				u8AlarmSetting = 1;
    2176:	81 e0       	ldi	r24, 0x01	; 1
    2178:	80 93 92 01 	sts	0x0192, r24
			}

			if (u8Cursor == 0)
    217c:	80 91 97 01 	lds	r24, 0x0197
    2180:	88 23       	and	r24, r24
    2182:	09 f0       	breq	.+2      	; 0x2186 <main+0x1640>
    2184:	a6 c0       	rjmp	.+332    	; 0x22d2 <main+0x178c>
			{
				LCD_voidSetPosition(LCD_LINE1 ,LCD_COLUM4);
    2186:	80 e0       	ldi	r24, 0x00	; 0
    2188:	63 e0       	ldi	r22, 0x03	; 3
    218a:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				if(u8Key != NULL)
    218e:	80 91 8c 01 	lds	r24, 0x018C
    2192:	88 23       	and	r24, r24
    2194:	09 f4       	brne	.+2      	; 0x2198 <main+0x1652>
    2196:	6e c8       	rjmp	.-3876   	; 0x1274 <main+0x72e>
				{
					switch(u8Key)
    2198:	80 91 8c 01 	lds	r24, 0x018C
    219c:	e8 2f       	mov	r30, r24
    219e:	f0 e0       	ldi	r31, 0x00	; 0
    21a0:	c9 53       	subi	r28, 0x39	; 57
    21a2:	df 4f       	sbci	r29, 0xFF	; 255
    21a4:	f9 83       	std	Y+1, r31	; 0x01
    21a6:	e8 83       	st	Y, r30
    21a8:	c7 5c       	subi	r28, 0xC7	; 199
    21aa:	d0 40       	sbci	r29, 0x00	; 0
    21ac:	c9 53       	subi	r28, 0x39	; 57
    21ae:	df 4f       	sbci	r29, 0xFF	; 255
    21b0:	28 81       	ld	r18, Y
    21b2:	39 81       	ldd	r19, Y+1	; 0x01
    21b4:	c7 5c       	subi	r28, 0xC7	; 199
    21b6:	d0 40       	sbci	r29, 0x00	; 0
    21b8:	2c 34       	cpi	r18, 0x4C	; 76
    21ba:	31 05       	cpc	r19, r1
    21bc:	09 f4       	brne	.+2      	; 0x21c0 <main+0x167a>
    21be:	4f c0       	rjmp	.+158    	; 0x225e <main+0x1718>
    21c0:	c9 53       	subi	r28, 0x39	; 57
    21c2:	df 4f       	sbci	r29, 0xFF	; 255
    21c4:	88 81       	ld	r24, Y
    21c6:	99 81       	ldd	r25, Y+1	; 0x01
    21c8:	c7 5c       	subi	r28, 0xC7	; 199
    21ca:	d0 40       	sbci	r29, 0x00	; 0
    21cc:	8d 34       	cpi	r24, 0x4D	; 77
    21ce:	91 05       	cpc	r25, r1
    21d0:	ac f4       	brge	.+42     	; 0x21fc <main+0x16b6>
    21d2:	c9 53       	subi	r28, 0x39	; 57
    21d4:	df 4f       	sbci	r29, 0xFF	; 255
    21d6:	e8 81       	ld	r30, Y
    21d8:	f9 81       	ldd	r31, Y+1	; 0x01
    21da:	c7 5c       	subi	r28, 0xC7	; 199
    21dc:	d0 40       	sbci	r29, 0x00	; 0
    21de:	e4 34       	cpi	r30, 0x44	; 68
    21e0:	f1 05       	cpc	r31, r1
    21e2:	09 f4       	brne	.+2      	; 0x21e6 <main+0x16a0>
    21e4:	53 c0       	rjmp	.+166    	; 0x228c <main+0x1746>
    21e6:	c9 53       	subi	r28, 0x39	; 57
    21e8:	df 4f       	sbci	r29, 0xFF	; 255
    21ea:	28 81       	ld	r18, Y
    21ec:	39 81       	ldd	r19, Y+1	; 0x01
    21ee:	c7 5c       	subi	r28, 0xC7	; 199
    21f0:	d0 40       	sbci	r29, 0x00	; 0
    21f2:	25 34       	cpi	r18, 0x45	; 69
    21f4:	31 05       	cpc	r19, r1
    21f6:	09 f4       	brne	.+2      	; 0x21fa <main+0x16b4>
    21f8:	59 c0       	rjmp	.+178    	; 0x22ac <main+0x1766>
    21fa:	3c c8       	rjmp	.-3976   	; 0x1274 <main+0x72e>
    21fc:	c9 53       	subi	r28, 0x39	; 57
    21fe:	df 4f       	sbci	r29, 0xFF	; 255
    2200:	88 81       	ld	r24, Y
    2202:	99 81       	ldd	r25, Y+1	; 0x01
    2204:	c7 5c       	subi	r28, 0xC7	; 199
    2206:	d0 40       	sbci	r29, 0x00	; 0
    2208:	82 35       	cpi	r24, 0x52	; 82
    220a:	91 05       	cpc	r25, r1
    220c:	11 f1       	breq	.+68     	; 0x2252 <main+0x170c>
    220e:	c9 53       	subi	r28, 0x39	; 57
    2210:	df 4f       	sbci	r29, 0xFF	; 255
    2212:	e8 81       	ld	r30, Y
    2214:	f9 81       	ldd	r31, Y+1	; 0x01
    2216:	c7 5c       	subi	r28, 0xC7	; 199
    2218:	d0 40       	sbci	r29, 0x00	; 0
    221a:	e5 35       	cpi	r30, 0x55	; 85
    221c:	f1 05       	cpc	r31, r1
    221e:	31 f1       	breq	.+76     	; 0x226c <main+0x1726>
    2220:	c9 53       	subi	r28, 0x39	; 57
    2222:	df 4f       	sbci	r29, 0xFF	; 255
    2224:	28 81       	ld	r18, Y
    2226:	39 81       	ldd	r19, Y+1	; 0x01
    2228:	c7 5c       	subi	r28, 0xC7	; 199
    222a:	d0 40       	sbci	r29, 0x00	; 0
    222c:	2d 34       	cpi	r18, 0x4D	; 77
    222e:	31 05       	cpc	r19, r1
    2230:	09 f0       	breq	.+2      	; 0x2234 <main+0x16ee>
    2232:	20 c8       	rjmp	.-4032   	; 0x1274 <main+0x72e>
					{
					case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str5); u8Cursor = 0; u8Icon = 6; u8AlarmSetting = 0;                   break;
    2234:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    2238:	ce 01       	movw	r24, r28
    223a:	8a 5a       	subi	r24, 0xAA	; 170
    223c:	9f 4f       	sbci	r25, 0xFF	; 255
    223e:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    2242:	10 92 97 01 	sts	0x0197, r1
    2246:	86 e0       	ldi	r24, 0x06	; 6
    2248:	80 93 8d 01 	sts	0x018D, r24
    224c:	10 92 92 01 	sts	0x0192, r1
    2250:	11 c8       	rjmp	.-4062   	; 0x1274 <main+0x72e>
					case 'R' : u8Cursor = 1; u8AlarmSetting = 0;                                                                                   break;
    2252:	81 e0       	ldi	r24, 0x01	; 1
    2254:	80 93 97 01 	sts	0x0197, r24
    2258:	10 92 92 01 	sts	0x0192, r1
    225c:	0b c8       	rjmp	.-4074   	; 0x1274 <main+0x72e>
					case 'L' : u8Cursor = 3; u8AlarmSetting = 0;                                                                                   break;
    225e:	83 e0       	ldi	r24, 0x03	; 3
    2260:	80 93 97 01 	sts	0x0197, r24
    2264:	10 92 92 01 	sts	0x0192, r1
    2268:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'U' : au8Alarm[HOURS]++; if (au8Alarm[HOURS] == 13) au8Alarm[HOURS] = 1;  u8AlarmSetting = 0;                             break;
    226c:	80 91 2c 01 	lds	r24, 0x012C
    2270:	8f 5f       	subi	r24, 0xFF	; 255
    2272:	80 93 2c 01 	sts	0x012C, r24
    2276:	80 91 2c 01 	lds	r24, 0x012C
    227a:	8d 30       	cpi	r24, 0x0D	; 13
    227c:	19 f4       	brne	.+6      	; 0x2284 <main+0x173e>
    227e:	81 e0       	ldi	r24, 0x01	; 1
    2280:	80 93 2c 01 	sts	0x012C, r24
    2284:	10 92 92 01 	sts	0x0192, r1
    2288:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'D' : if (au8Alarm[HOURS] == 1) au8Alarm[HOURS] = 13;  au8Alarm[HOURS]--; u8AlarmSetting = 0;                             break;
    228c:	80 91 2c 01 	lds	r24, 0x012C
    2290:	81 30       	cpi	r24, 0x01	; 1
    2292:	19 f4       	brne	.+6      	; 0x229a <main+0x1754>
    2294:	8d e0       	ldi	r24, 0x0D	; 13
    2296:	80 93 2c 01 	sts	0x012C, r24
    229a:	80 91 2c 01 	lds	r24, 0x012C
    229e:	81 50       	subi	r24, 0x01	; 1
    22a0:	80 93 2c 01 	sts	0x012C, r24
    22a4:	10 92 92 01 	sts	0x0192, r1
    22a8:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'E' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str5); u8Cursor = 0; u8Icon =6; u8AlarmStatus = 1; u8AlarmSetting = 0; break;
    22ac:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    22b0:	ce 01       	movw	r24, r28
    22b2:	8a 5a       	subi	r24, 0xAA	; 170
    22b4:	9f 4f       	sbci	r25, 0xFF	; 255
    22b6:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    22ba:	10 92 97 01 	sts	0x0197, r1
    22be:	86 e0       	ldi	r24, 0x06	; 6
    22c0:	80 93 8d 01 	sts	0x018D, r24
    22c4:	81 e0       	ldi	r24, 0x01	; 1
    22c6:	80 93 95 01 	sts	0x0195, r24
    22ca:	10 92 92 01 	sts	0x0192, r1
    22ce:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					}
				}
			}
			else if(u8Cursor == 1)
    22d2:	80 91 97 01 	lds	r24, 0x0197
    22d6:	81 30       	cpi	r24, 0x01	; 1
    22d8:	09 f0       	breq	.+2      	; 0x22dc <main+0x1796>
    22da:	a9 c0       	rjmp	.+338    	; 0x242e <main+0x18e8>
			{
				LCD_voidSetPosition(LCD_LINE1 ,LCD_COLUM7);
    22dc:	80 e0       	ldi	r24, 0x00	; 0
    22de:	66 e0       	ldi	r22, 0x06	; 6
    22e0:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				if(u8Key != NULL)
    22e4:	80 91 8c 01 	lds	r24, 0x018C
    22e8:	88 23       	and	r24, r24
    22ea:	11 f4       	brne	.+4      	; 0x22f0 <main+0x17aa>
    22ec:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
				{
					switch(u8Key)
    22f0:	80 91 8c 01 	lds	r24, 0x018C
    22f4:	e8 2f       	mov	r30, r24
    22f6:	f0 e0       	ldi	r31, 0x00	; 0
    22f8:	cb 53       	subi	r28, 0x3B	; 59
    22fa:	df 4f       	sbci	r29, 0xFF	; 255
    22fc:	f9 83       	std	Y+1, r31	; 0x01
    22fe:	e8 83       	st	Y, r30
    2300:	c5 5c       	subi	r28, 0xC5	; 197
    2302:	d0 40       	sbci	r29, 0x00	; 0
    2304:	cb 53       	subi	r28, 0x3B	; 59
    2306:	df 4f       	sbci	r29, 0xFF	; 255
    2308:	28 81       	ld	r18, Y
    230a:	39 81       	ldd	r19, Y+1	; 0x01
    230c:	c5 5c       	subi	r28, 0xC5	; 197
    230e:	d0 40       	sbci	r29, 0x00	; 0
    2310:	2c 34       	cpi	r18, 0x4C	; 76
    2312:	31 05       	cpc	r19, r1
    2314:	09 f4       	brne	.+2      	; 0x2318 <main+0x17d2>
    2316:	53 c0       	rjmp	.+166    	; 0x23be <main+0x1878>
    2318:	cb 53       	subi	r28, 0x3B	; 59
    231a:	df 4f       	sbci	r29, 0xFF	; 255
    231c:	88 81       	ld	r24, Y
    231e:	99 81       	ldd	r25, Y+1	; 0x01
    2320:	c5 5c       	subi	r28, 0xC5	; 197
    2322:	d0 40       	sbci	r29, 0x00	; 0
    2324:	8d 34       	cpi	r24, 0x4D	; 77
    2326:	91 05       	cpc	r25, r1
    2328:	b4 f4       	brge	.+44     	; 0x2356 <main+0x1810>
    232a:	cb 53       	subi	r28, 0x3B	; 59
    232c:	df 4f       	sbci	r29, 0xFF	; 255
    232e:	e8 81       	ld	r30, Y
    2330:	f9 81       	ldd	r31, Y+1	; 0x01
    2332:	c5 5c       	subi	r28, 0xC5	; 197
    2334:	d0 40       	sbci	r29, 0x00	; 0
    2336:	e4 34       	cpi	r30, 0x44	; 68
    2338:	f1 05       	cpc	r31, r1
    233a:	09 f4       	brne	.+2      	; 0x233e <main+0x17f8>
    233c:	55 c0       	rjmp	.+170    	; 0x23e8 <main+0x18a2>
    233e:	cb 53       	subi	r28, 0x3B	; 59
    2340:	df 4f       	sbci	r29, 0xFF	; 255
    2342:	28 81       	ld	r18, Y
    2344:	39 81       	ldd	r19, Y+1	; 0x01
    2346:	c5 5c       	subi	r28, 0xC5	; 197
    2348:	d0 40       	sbci	r29, 0x00	; 0
    234a:	25 34       	cpi	r18, 0x45	; 69
    234c:	31 05       	cpc	r19, r1
    234e:	09 f4       	brne	.+2      	; 0x2352 <main+0x180c>
    2350:	5b c0       	rjmp	.+182    	; 0x2408 <main+0x18c2>
    2352:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
    2356:	cb 53       	subi	r28, 0x3B	; 59
    2358:	df 4f       	sbci	r29, 0xFF	; 255
    235a:	88 81       	ld	r24, Y
    235c:	99 81       	ldd	r25, Y+1	; 0x01
    235e:	c5 5c       	subi	r28, 0xC5	; 197
    2360:	d0 40       	sbci	r29, 0x00	; 0
    2362:	82 35       	cpi	r24, 0x52	; 82
    2364:	91 05       	cpc	r25, r1
    2366:	21 f1       	breq	.+72     	; 0x23b0 <main+0x186a>
    2368:	cb 53       	subi	r28, 0x3B	; 59
    236a:	df 4f       	sbci	r29, 0xFF	; 255
    236c:	e8 81       	ld	r30, Y
    236e:	f9 81       	ldd	r31, Y+1	; 0x01
    2370:	c5 5c       	subi	r28, 0xC5	; 197
    2372:	d0 40       	sbci	r29, 0x00	; 0
    2374:	e5 35       	cpi	r30, 0x55	; 85
    2376:	f1 05       	cpc	r31, r1
    2378:	41 f1       	breq	.+80     	; 0x23ca <main+0x1884>
    237a:	cb 53       	subi	r28, 0x3B	; 59
    237c:	df 4f       	sbci	r29, 0xFF	; 255
    237e:	28 81       	ld	r18, Y
    2380:	39 81       	ldd	r19, Y+1	; 0x01
    2382:	c5 5c       	subi	r28, 0xC5	; 197
    2384:	d0 40       	sbci	r29, 0x00	; 0
    2386:	2d 34       	cpi	r18, 0x4D	; 77
    2388:	31 05       	cpc	r19, r1
    238a:	11 f0       	breq	.+4      	; 0x2390 <main+0x184a>
    238c:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					{
					case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str5); u8Cursor = 0; u8Icon = 6; u8AlarmSetting = 0;                   break;
    2390:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    2394:	ce 01       	movw	r24, r28
    2396:	8a 5a       	subi	r24, 0xAA	; 170
    2398:	9f 4f       	sbci	r25, 0xFF	; 255
    239a:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    239e:	10 92 97 01 	sts	0x0197, r1
    23a2:	86 e0       	ldi	r24, 0x06	; 6
    23a4:	80 93 8d 01 	sts	0x018D, r24
    23a8:	10 92 92 01 	sts	0x0192, r1
    23ac:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'R' : u8Cursor = 2; u8AlarmSetting = 0;                                                                                   break;
    23b0:	82 e0       	ldi	r24, 0x02	; 2
    23b2:	80 93 97 01 	sts	0x0197, r24
    23b6:	10 92 92 01 	sts	0x0192, r1
    23ba:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'L' : u8Cursor = 0; u8AlarmSetting = 0;                                                                                   break;
    23be:	10 92 97 01 	sts	0x0197, r1
    23c2:	10 92 92 01 	sts	0x0192, r1
    23c6:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'U' : au8Alarm[MINUTES]++; if (au8Alarm[MINUTES] == 60) au8Alarm[MINUTES] = 0;  u8AlarmSetting = 0;                       break;
    23ca:	80 91 2d 01 	lds	r24, 0x012D
    23ce:	8f 5f       	subi	r24, 0xFF	; 255
    23d0:	80 93 2d 01 	sts	0x012D, r24
    23d4:	80 91 2d 01 	lds	r24, 0x012D
    23d8:	8c 33       	cpi	r24, 0x3C	; 60
    23da:	11 f4       	brne	.+4      	; 0x23e0 <main+0x189a>
    23dc:	10 92 2d 01 	sts	0x012D, r1
    23e0:	10 92 92 01 	sts	0x0192, r1
    23e4:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'D' : if (au8Alarm[MINUTES] == 0) au8Alarm[MINUTES] = 60;  au8Alarm[MINUTES]--; u8AlarmSetting = 0;                       break;
    23e8:	80 91 2d 01 	lds	r24, 0x012D
    23ec:	88 23       	and	r24, r24
    23ee:	19 f4       	brne	.+6      	; 0x23f6 <main+0x18b0>
    23f0:	8c e3       	ldi	r24, 0x3C	; 60
    23f2:	80 93 2d 01 	sts	0x012D, r24
    23f6:	80 91 2d 01 	lds	r24, 0x012D
    23fa:	81 50       	subi	r24, 0x01	; 1
    23fc:	80 93 2d 01 	sts	0x012D, r24
    2400:	10 92 92 01 	sts	0x0192, r1
    2404:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'E' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str5); u8Cursor = 0; u8Icon =6; u8AlarmStatus = 1; u8AlarmSetting = 0; break;
    2408:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    240c:	ce 01       	movw	r24, r28
    240e:	8a 5a       	subi	r24, 0xAA	; 170
    2410:	9f 4f       	sbci	r25, 0xFF	; 255
    2412:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    2416:	10 92 97 01 	sts	0x0197, r1
    241a:	86 e0       	ldi	r24, 0x06	; 6
    241c:	80 93 8d 01 	sts	0x018D, r24
    2420:	81 e0       	ldi	r24, 0x01	; 1
    2422:	80 93 95 01 	sts	0x0195, r24
    2426:	10 92 92 01 	sts	0x0192, r1
    242a:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					}
				}
			}
			else if (u8Cursor == 2)
    242e:	80 91 97 01 	lds	r24, 0x0197
    2432:	82 30       	cpi	r24, 0x02	; 2
    2434:	09 f0       	breq	.+2      	; 0x2438 <main+0x18f2>
    2436:	aa c0       	rjmp	.+340    	; 0x258c <main+0x1a46>
			{
				LCD_voidSetPosition(LCD_LINE1 ,LCD_COLUM10);
    2438:	80 e0       	ldi	r24, 0x00	; 0
    243a:	69 e0       	ldi	r22, 0x09	; 9
    243c:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				if(u8Key != NULL)
    2440:	80 91 8c 01 	lds	r24, 0x018C
    2444:	88 23       	and	r24, r24
    2446:	11 f4       	brne	.+4      	; 0x244c <main+0x1906>
    2448:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
				{
					switch(u8Key)
    244c:	80 91 8c 01 	lds	r24, 0x018C
    2450:	e8 2f       	mov	r30, r24
    2452:	f0 e0       	ldi	r31, 0x00	; 0
    2454:	cd 53       	subi	r28, 0x3D	; 61
    2456:	df 4f       	sbci	r29, 0xFF	; 255
    2458:	f9 83       	std	Y+1, r31	; 0x01
    245a:	e8 83       	st	Y, r30
    245c:	c3 5c       	subi	r28, 0xC3	; 195
    245e:	d0 40       	sbci	r29, 0x00	; 0
    2460:	cd 53       	subi	r28, 0x3D	; 61
    2462:	df 4f       	sbci	r29, 0xFF	; 255
    2464:	28 81       	ld	r18, Y
    2466:	39 81       	ldd	r19, Y+1	; 0x01
    2468:	c3 5c       	subi	r28, 0xC3	; 195
    246a:	d0 40       	sbci	r29, 0x00	; 0
    246c:	2c 34       	cpi	r18, 0x4C	; 76
    246e:	31 05       	cpc	r19, r1
    2470:	09 f4       	brne	.+2      	; 0x2474 <main+0x192e>
    2472:	53 c0       	rjmp	.+166    	; 0x251a <main+0x19d4>
    2474:	cd 53       	subi	r28, 0x3D	; 61
    2476:	df 4f       	sbci	r29, 0xFF	; 255
    2478:	88 81       	ld	r24, Y
    247a:	99 81       	ldd	r25, Y+1	; 0x01
    247c:	c3 5c       	subi	r28, 0xC3	; 195
    247e:	d0 40       	sbci	r29, 0x00	; 0
    2480:	8d 34       	cpi	r24, 0x4D	; 77
    2482:	91 05       	cpc	r25, r1
    2484:	b4 f4       	brge	.+44     	; 0x24b2 <main+0x196c>
    2486:	cd 53       	subi	r28, 0x3D	; 61
    2488:	df 4f       	sbci	r29, 0xFF	; 255
    248a:	e8 81       	ld	r30, Y
    248c:	f9 81       	ldd	r31, Y+1	; 0x01
    248e:	c3 5c       	subi	r28, 0xC3	; 195
    2490:	d0 40       	sbci	r29, 0x00	; 0
    2492:	e4 34       	cpi	r30, 0x44	; 68
    2494:	f1 05       	cpc	r31, r1
    2496:	09 f4       	brne	.+2      	; 0x249a <main+0x1954>
    2498:	56 c0       	rjmp	.+172    	; 0x2546 <main+0x1a00>
    249a:	cd 53       	subi	r28, 0x3D	; 61
    249c:	df 4f       	sbci	r29, 0xFF	; 255
    249e:	28 81       	ld	r18, Y
    24a0:	39 81       	ldd	r19, Y+1	; 0x01
    24a2:	c3 5c       	subi	r28, 0xC3	; 195
    24a4:	d0 40       	sbci	r29, 0x00	; 0
    24a6:	25 34       	cpi	r18, 0x45	; 69
    24a8:	31 05       	cpc	r19, r1
    24aa:	09 f4       	brne	.+2      	; 0x24ae <main+0x1968>
    24ac:	5c c0       	rjmp	.+184    	; 0x2566 <main+0x1a20>
    24ae:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
    24b2:	cd 53       	subi	r28, 0x3D	; 61
    24b4:	df 4f       	sbci	r29, 0xFF	; 255
    24b6:	88 81       	ld	r24, Y
    24b8:	99 81       	ldd	r25, Y+1	; 0x01
    24ba:	c3 5c       	subi	r28, 0xC3	; 195
    24bc:	d0 40       	sbci	r29, 0x00	; 0
    24be:	82 35       	cpi	r24, 0x52	; 82
    24c0:	91 05       	cpc	r25, r1
    24c2:	21 f1       	breq	.+72     	; 0x250c <main+0x19c6>
    24c4:	cd 53       	subi	r28, 0x3D	; 61
    24c6:	df 4f       	sbci	r29, 0xFF	; 255
    24c8:	e8 81       	ld	r30, Y
    24ca:	f9 81       	ldd	r31, Y+1	; 0x01
    24cc:	c3 5c       	subi	r28, 0xC3	; 195
    24ce:	d0 40       	sbci	r29, 0x00	; 0
    24d0:	e5 35       	cpi	r30, 0x55	; 85
    24d2:	f1 05       	cpc	r31, r1
    24d4:	49 f1       	breq	.+82     	; 0x2528 <main+0x19e2>
    24d6:	cd 53       	subi	r28, 0x3D	; 61
    24d8:	df 4f       	sbci	r29, 0xFF	; 255
    24da:	28 81       	ld	r18, Y
    24dc:	39 81       	ldd	r19, Y+1	; 0x01
    24de:	c3 5c       	subi	r28, 0xC3	; 195
    24e0:	d0 40       	sbci	r29, 0x00	; 0
    24e2:	2d 34       	cpi	r18, 0x4D	; 77
    24e4:	31 05       	cpc	r19, r1
    24e6:	11 f0       	breq	.+4      	; 0x24ec <main+0x19a6>
    24e8:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					{
					case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str5); u8Cursor = 0; u8Icon = 6; u8AlarmSetting = 0;                    break;
    24ec:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    24f0:	ce 01       	movw	r24, r28
    24f2:	8a 5a       	subi	r24, 0xAA	; 170
    24f4:	9f 4f       	sbci	r25, 0xFF	; 255
    24f6:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    24fa:	10 92 97 01 	sts	0x0197, r1
    24fe:	86 e0       	ldi	r24, 0x06	; 6
    2500:	80 93 8d 01 	sts	0x018D, r24
    2504:	10 92 92 01 	sts	0x0192, r1
    2508:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'R' : u8Cursor = 3; u8AlarmSetting = 0;                                                                                    break;
    250c:	83 e0       	ldi	r24, 0x03	; 3
    250e:	80 93 97 01 	sts	0x0197, r24
    2512:	10 92 92 01 	sts	0x0192, r1
    2516:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'L' : u8Cursor = 1; u8AlarmSetting = 0;                                                                                    break;
    251a:	81 e0       	ldi	r24, 0x01	; 1
    251c:	80 93 97 01 	sts	0x0197, r24
    2520:	10 92 92 01 	sts	0x0192, r1
    2524:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'U' : au8Alarm[SECONDS]++; if(au8Alarm[SECONDS] == 60) au8Alarm[SECONDS] = 0;    u8AlarmSetting = 0;                       break;
    2528:	80 91 2e 01 	lds	r24, 0x012E
    252c:	8f 5f       	subi	r24, 0xFF	; 255
    252e:	80 93 2e 01 	sts	0x012E, r24
    2532:	80 91 2e 01 	lds	r24, 0x012E
    2536:	8c 33       	cpi	r24, 0x3C	; 60
    2538:	11 f4       	brne	.+4      	; 0x253e <main+0x19f8>
    253a:	10 92 2e 01 	sts	0x012E, r1
    253e:	10 92 92 01 	sts	0x0192, r1
    2542:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'D' : if (au8Alarm[SECONDS] == 0) au8Alarm[SECONDS] = 60;  au8Alarm[SECONDS]--;  u8AlarmSetting = 0;                       break;
    2546:	80 91 2e 01 	lds	r24, 0x012E
    254a:	88 23       	and	r24, r24
    254c:	19 f4       	brne	.+6      	; 0x2554 <main+0x1a0e>
    254e:	8c e3       	ldi	r24, 0x3C	; 60
    2550:	80 93 2e 01 	sts	0x012E, r24
    2554:	80 91 2e 01 	lds	r24, 0x012E
    2558:	81 50       	subi	r24, 0x01	; 1
    255a:	80 93 2e 01 	sts	0x012E, r24
    255e:	10 92 92 01 	sts	0x0192, r1
    2562:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'E' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str5); u8Cursor = 0; u8Icon =6; u8AlarmStatus = 1;  u8AlarmSetting = 0; break;
    2566:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    256a:	ce 01       	movw	r24, r28
    256c:	8a 5a       	subi	r24, 0xAA	; 170
    256e:	9f 4f       	sbci	r25, 0xFF	; 255
    2570:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    2574:	10 92 97 01 	sts	0x0197, r1
    2578:	86 e0       	ldi	r24, 0x06	; 6
    257a:	80 93 8d 01 	sts	0x018D, r24
    257e:	81 e0       	ldi	r24, 0x01	; 1
    2580:	80 93 95 01 	sts	0x0195, r24
    2584:	10 92 92 01 	sts	0x0192, r1
    2588:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					}
				}
			}
			else if(u8Cursor == 3)
    258c:	80 91 97 01 	lds	r24, 0x0197
    2590:	83 30       	cpi	r24, 0x03	; 3
    2592:	11 f0       	breq	.+4      	; 0x2598 <main+0x1a52>
    2594:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
			{
				LCD_voidSetPosition(LCD_LINE1 ,LCD_COLUM12);
    2598:	80 e0       	ldi	r24, 0x00	; 0
    259a:	6b e0       	ldi	r22, 0x0B	; 11
    259c:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				if(u8Key != NULL)
    25a0:	80 91 8c 01 	lds	r24, 0x018C
    25a4:	88 23       	and	r24, r24
    25a6:	11 f4       	brne	.+4      	; 0x25ac <main+0x1a66>
    25a8:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
				{
					switch(u8Key)
    25ac:	80 91 8c 01 	lds	r24, 0x018C
    25b0:	e8 2f       	mov	r30, r24
    25b2:	f0 e0       	ldi	r31, 0x00	; 0
    25b4:	cf 53       	subi	r28, 0x3F	; 63
    25b6:	df 4f       	sbci	r29, 0xFF	; 255
    25b8:	f9 83       	std	Y+1, r31	; 0x01
    25ba:	e8 83       	st	Y, r30
    25bc:	c1 5c       	subi	r28, 0xC1	; 193
    25be:	d0 40       	sbci	r29, 0x00	; 0
    25c0:	cf 53       	subi	r28, 0x3F	; 63
    25c2:	df 4f       	sbci	r29, 0xFF	; 255
    25c4:	28 81       	ld	r18, Y
    25c6:	39 81       	ldd	r19, Y+1	; 0x01
    25c8:	c1 5c       	subi	r28, 0xC1	; 193
    25ca:	d0 40       	sbci	r29, 0x00	; 0
    25cc:	2c 34       	cpi	r18, 0x4C	; 76
    25ce:	31 05       	cpc	r19, r1
    25d0:	09 f4       	brne	.+2      	; 0x25d4 <main+0x1a8e>
    25d2:	52 c0       	rjmp	.+164    	; 0x2678 <main+0x1b32>
    25d4:	cf 53       	subi	r28, 0x3F	; 63
    25d6:	df 4f       	sbci	r29, 0xFF	; 255
    25d8:	88 81       	ld	r24, Y
    25da:	99 81       	ldd	r25, Y+1	; 0x01
    25dc:	c1 5c       	subi	r28, 0xC1	; 193
    25de:	d0 40       	sbci	r29, 0x00	; 0
    25e0:	8d 34       	cpi	r24, 0x4D	; 77
    25e2:	91 05       	cpc	r25, r1
    25e4:	b4 f4       	brge	.+44     	; 0x2612 <main+0x1acc>
    25e6:	cf 53       	subi	r28, 0x3F	; 63
    25e8:	df 4f       	sbci	r29, 0xFF	; 255
    25ea:	e8 81       	ld	r30, Y
    25ec:	f9 81       	ldd	r31, Y+1	; 0x01
    25ee:	c1 5c       	subi	r28, 0xC1	; 193
    25f0:	d0 40       	sbci	r29, 0x00	; 0
    25f2:	e4 34       	cpi	r30, 0x44	; 68
    25f4:	f1 05       	cpc	r31, r1
    25f6:	09 f4       	brne	.+2      	; 0x25fa <main+0x1ab4>
    25f8:	4d c0       	rjmp	.+154    	; 0x2694 <main+0x1b4e>
    25fa:	cf 53       	subi	r28, 0x3F	; 63
    25fc:	df 4f       	sbci	r29, 0xFF	; 255
    25fe:	28 81       	ld	r18, Y
    2600:	39 81       	ldd	r19, Y+1	; 0x01
    2602:	c1 5c       	subi	r28, 0xC1	; 193
    2604:	d0 40       	sbci	r29, 0x00	; 0
    2606:	25 34       	cpi	r18, 0x45	; 69
    2608:	31 05       	cpc	r19, r1
    260a:	09 f4       	brne	.+2      	; 0x260e <main+0x1ac8>
    260c:	49 c0       	rjmp	.+146    	; 0x26a0 <main+0x1b5a>
    260e:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
    2612:	cf 53       	subi	r28, 0x3F	; 63
    2614:	df 4f       	sbci	r29, 0xFF	; 255
    2616:	88 81       	ld	r24, Y
    2618:	99 81       	ldd	r25, Y+1	; 0x01
    261a:	c1 5c       	subi	r28, 0xC1	; 193
    261c:	d0 40       	sbci	r29, 0x00	; 0
    261e:	82 35       	cpi	r24, 0x52	; 82
    2620:	91 05       	cpc	r25, r1
    2622:	21 f1       	breq	.+72     	; 0x266c <main+0x1b26>
    2624:	cf 53       	subi	r28, 0x3F	; 63
    2626:	df 4f       	sbci	r29, 0xFF	; 255
    2628:	e8 81       	ld	r30, Y
    262a:	f9 81       	ldd	r31, Y+1	; 0x01
    262c:	c1 5c       	subi	r28, 0xC1	; 193
    262e:	d0 40       	sbci	r29, 0x00	; 0
    2630:	e5 35       	cpi	r30, 0x55	; 85
    2632:	f1 05       	cpc	r31, r1
    2634:	41 f1       	breq	.+80     	; 0x2686 <main+0x1b40>
    2636:	cf 53       	subi	r28, 0x3F	; 63
    2638:	df 4f       	sbci	r29, 0xFF	; 255
    263a:	28 81       	ld	r18, Y
    263c:	39 81       	ldd	r19, Y+1	; 0x01
    263e:	c1 5c       	subi	r28, 0xC1	; 193
    2640:	d0 40       	sbci	r29, 0x00	; 0
    2642:	2d 34       	cpi	r18, 0x4D	; 77
    2644:	31 05       	cpc	r19, r1
    2646:	11 f0       	breq	.+4      	; 0x264c <main+0x1b06>
    2648:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					{
					case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str5); u8Cursor = 0;  u8Icon = 6; u8AlarmSetting = 0;                  break;
    264c:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    2650:	ce 01       	movw	r24, r28
    2652:	8a 5a       	subi	r24, 0xAA	; 170
    2654:	9f 4f       	sbci	r25, 0xFF	; 255
    2656:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    265a:	10 92 97 01 	sts	0x0197, r1
    265e:	86 e0       	ldi	r24, 0x06	; 6
    2660:	80 93 8d 01 	sts	0x018D, r24
    2664:	10 92 92 01 	sts	0x0192, r1
    2668:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'R' : u8Cursor = 0;   u8AlarmSetting = 0;                              												   break;
    266c:	10 92 97 01 	sts	0x0197, r1
    2670:	10 92 92 01 	sts	0x0192, r1
    2674:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'L' : u8Cursor = 2;   u8AlarmSetting = 0;                            													   break;
    2678:	82 e0       	ldi	r24, 0x02	; 2
    267a:	80 93 97 01 	sts	0x0197, r24
    267e:	10 92 92 01 	sts	0x0192, r1
    2682:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'U' : u8AlarmForm =1; u8AlarmSetting = 0;                           													   break;
    2686:	81 e0       	ldi	r24, 0x01	; 1
    2688:	80 93 96 01 	sts	0x0196, r24
    268c:	10 92 92 01 	sts	0x0192, r1
    2690:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'D' : u8AlarmForm =0; u8AlarmSetting = 0;                           													   break;
    2694:	10 92 96 01 	sts	0x0196, r1
    2698:	10 92 92 01 	sts	0x0192, r1
    269c:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'E' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str5); u8Cursor = 0; u8Icon =6; u8AlarmStatus = 1; u8AlarmSetting = 0; break;
    26a0:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    26a4:	ce 01       	movw	r24, r28
    26a6:	8a 5a       	subi	r24, 0xAA	; 170
    26a8:	9f 4f       	sbci	r25, 0xFF	; 255
    26aa:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    26ae:	10 92 97 01 	sts	0x0197, r1
    26b2:	86 e0       	ldi	r24, 0x06	; 6
    26b4:	80 93 8d 01 	sts	0x018D, r24
    26b8:	81 e0       	ldi	r24, 0x01	; 1
    26ba:	80 93 95 01 	sts	0x0195, r24
    26be:	10 92 92 01 	sts	0x0192, r1
    26c2:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
				}
			}
		}
//***********************************************************************************************************************************************************************************************************************************************************
		/* Date Setting */
		else if (u8Icon == 12)
    26c6:	80 91 8d 01 	lds	r24, 0x018D
    26ca:	8c 30       	cpi	r24, 0x0C	; 12
    26cc:	09 f0       	breq	.+2      	; 0x26d0 <main+0x1b8a>
    26ce:	f5 c2       	rjmp	.+1514   	; 0x2cba <main+0x2174>
		{
			LCD_voidEnableCursor();
    26d0:	0e 94 af 29 	call	0x535e	; 0x535e <LCD_voidEnableCursor>
			if(u8DateSetting == 0)
    26d4:	80 91 91 01 	lds	r24, 0x0191
    26d8:	88 23       	and	r24, r24
    26da:	09 f0       	breq	.+2      	; 0x26de <main+0x1b98>
    26dc:	59 c0       	rjmp	.+178    	; 0x2790 <main+0x1c4a>
			{
				if(u8Day < 10)
    26de:	80 91 2b 01 	lds	r24, 0x012B
    26e2:	8a 30       	cpi	r24, 0x0A	; 10
    26e4:	58 f5       	brcc	.+86     	; 0x273c <main+0x1bf6>
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM4);
    26e6:	80 e0       	ldi	r24, 0x00	; 0
    26e8:	63 e0       	ldi	r22, 0x03	; 3
    26ea:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendData('0');
    26ee:	80 e3       	ldi	r24, 0x30	; 48
    26f0:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
					LCD_voidSendInteger(u8Day);
    26f4:	80 91 2b 01 	lds	r24, 0x012B
    26f8:	88 2f       	mov	r24, r24
    26fa:	90 e0       	ldi	r25, 0x00	; 0
    26fc:	a0 e0       	ldi	r26, 0x00	; 0
    26fe:	b0 e0       	ldi	r27, 0x00	; 0
    2700:	bc 01       	movw	r22, r24
    2702:	cd 01       	movw	r24, r26
    2704:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
					LCD_voidSendString(&au8Months[u8Month]);
    2708:	22 e4       	ldi	r18, 0x42	; 66
    270a:	31 e0       	ldi	r19, 0x01	; 1
    270c:	80 91 8b 01 	lds	r24, 0x018B
    2710:	88 2f       	mov	r24, r24
    2712:	90 e0       	ldi	r25, 0x00	; 0
    2714:	88 0f       	add	r24, r24
    2716:	99 1f       	adc	r25, r25
    2718:	88 0f       	add	r24, r24
    271a:	99 1f       	adc	r25, r25
    271c:	82 0f       	add	r24, r18
    271e:	93 1f       	adc	r25, r19
    2720:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
					LCD_voidSendInteger(u16Year);
    2724:	80 91 7e 01 	lds	r24, 0x017E
    2728:	90 91 7f 01 	lds	r25, 0x017F
    272c:	cc 01       	movw	r24, r24
    272e:	a0 e0       	ldi	r26, 0x00	; 0
    2730:	b0 e0       	ldi	r27, 0x00	; 0
    2732:	bc 01       	movw	r22, r24
    2734:	cd 01       	movw	r24, r26
    2736:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
    273a:	27 c0       	rjmp	.+78     	; 0x278a <main+0x1c44>
				}
				else
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM4);
    273c:	80 e0       	ldi	r24, 0x00	; 0
    273e:	63 e0       	ldi	r22, 0x03	; 3
    2740:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendInteger(u8Day);
    2744:	80 91 2b 01 	lds	r24, 0x012B
    2748:	88 2f       	mov	r24, r24
    274a:	90 e0       	ldi	r25, 0x00	; 0
    274c:	a0 e0       	ldi	r26, 0x00	; 0
    274e:	b0 e0       	ldi	r27, 0x00	; 0
    2750:	bc 01       	movw	r22, r24
    2752:	cd 01       	movw	r24, r26
    2754:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
					LCD_voidSendString(&au8Months[u8Month]);
    2758:	22 e4       	ldi	r18, 0x42	; 66
    275a:	31 e0       	ldi	r19, 0x01	; 1
    275c:	80 91 8b 01 	lds	r24, 0x018B
    2760:	88 2f       	mov	r24, r24
    2762:	90 e0       	ldi	r25, 0x00	; 0
    2764:	88 0f       	add	r24, r24
    2766:	99 1f       	adc	r25, r25
    2768:	88 0f       	add	r24, r24
    276a:	99 1f       	adc	r25, r25
    276c:	82 0f       	add	r24, r18
    276e:	93 1f       	adc	r25, r19
    2770:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
					LCD_voidSendInteger(u16Year);
    2774:	80 91 7e 01 	lds	r24, 0x017E
    2778:	90 91 7f 01 	lds	r25, 0x017F
    277c:	cc 01       	movw	r24, r24
    277e:	a0 e0       	ldi	r26, 0x00	; 0
    2780:	b0 e0       	ldi	r27, 0x00	; 0
    2782:	bc 01       	movw	r22, r24
    2784:	cd 01       	movw	r24, r26
    2786:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
				}
				u8DateSetting = 1;
    278a:	81 e0       	ldi	r24, 0x01	; 1
    278c:	80 93 91 01 	sts	0x0191, r24
			}

			if (u8Cursor == 0)
    2790:	80 91 97 01 	lds	r24, 0x0197
    2794:	88 23       	and	r24, r24
    2796:	09 f0       	breq	.+2      	; 0x279a <main+0x1c54>
    2798:	42 c1       	rjmp	.+644    	; 0x2a1e <main+0x1ed8>
			{
				LCD_voidSetPosition(LCD_LINE1 ,LCD_COLUM5);
    279a:	80 e0       	ldi	r24, 0x00	; 0
    279c:	64 e0       	ldi	r22, 0x04	; 4
    279e:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				if(u8Key != NULL)
    27a2:	80 91 8c 01 	lds	r24, 0x018C
    27a6:	88 23       	and	r24, r24
    27a8:	11 f4       	brne	.+4      	; 0x27ae <main+0x1c68>
    27aa:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
				{
					switch(u8Key)
    27ae:	80 91 8c 01 	lds	r24, 0x018C
    27b2:	e8 2f       	mov	r30, r24
    27b4:	f0 e0       	ldi	r31, 0x00	; 0
    27b6:	c1 54       	subi	r28, 0x41	; 65
    27b8:	df 4f       	sbci	r29, 0xFF	; 255
    27ba:	f9 83       	std	Y+1, r31	; 0x01
    27bc:	e8 83       	st	Y, r30
    27be:	cf 5b       	subi	r28, 0xBF	; 191
    27c0:	d0 40       	sbci	r29, 0x00	; 0
    27c2:	c1 54       	subi	r28, 0x41	; 65
    27c4:	df 4f       	sbci	r29, 0xFF	; 255
    27c6:	28 81       	ld	r18, Y
    27c8:	39 81       	ldd	r19, Y+1	; 0x01
    27ca:	cf 5b       	subi	r28, 0xBF	; 191
    27cc:	d0 40       	sbci	r29, 0x00	; 0
    27ce:	2c 34       	cpi	r18, 0x4C	; 76
    27d0:	31 05       	cpc	r19, r1
    27d2:	09 f4       	brne	.+2      	; 0x27d6 <main+0x1c90>
    27d4:	52 c0       	rjmp	.+164    	; 0x287a <main+0x1d34>
    27d6:	c1 54       	subi	r28, 0x41	; 65
    27d8:	df 4f       	sbci	r29, 0xFF	; 255
    27da:	88 81       	ld	r24, Y
    27dc:	99 81       	ldd	r25, Y+1	; 0x01
    27de:	cf 5b       	subi	r28, 0xBF	; 191
    27e0:	d0 40       	sbci	r29, 0x00	; 0
    27e2:	8d 34       	cpi	r24, 0x4D	; 77
    27e4:	91 05       	cpc	r25, r1
    27e6:	b4 f4       	brge	.+44     	; 0x2814 <main+0x1cce>
    27e8:	c1 54       	subi	r28, 0x41	; 65
    27ea:	df 4f       	sbci	r29, 0xFF	; 255
    27ec:	e8 81       	ld	r30, Y
    27ee:	f9 81       	ldd	r31, Y+1	; 0x01
    27f0:	cf 5b       	subi	r28, 0xBF	; 191
    27f2:	d0 40       	sbci	r29, 0x00	; 0
    27f4:	e4 34       	cpi	r30, 0x44	; 68
    27f6:	f1 05       	cpc	r31, r1
    27f8:	09 f4       	brne	.+2      	; 0x27fc <main+0x1cb6>
    27fa:	96 c0       	rjmp	.+300    	; 0x2928 <main+0x1de2>
    27fc:	c1 54       	subi	r28, 0x41	; 65
    27fe:	df 4f       	sbci	r29, 0xFF	; 255
    2800:	28 81       	ld	r18, Y
    2802:	39 81       	ldd	r19, Y+1	; 0x01
    2804:	cf 5b       	subi	r28, 0xBF	; 191
    2806:	d0 40       	sbci	r29, 0x00	; 0
    2808:	25 34       	cpi	r18, 0x45	; 69
    280a:	31 05       	cpc	r19, r1
    280c:	09 f4       	brne	.+2      	; 0x2810 <main+0x1cca>
    280e:	f8 c0       	rjmp	.+496    	; 0x2a00 <main+0x1eba>
    2810:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
    2814:	c1 54       	subi	r28, 0x41	; 65
    2816:	df 4f       	sbci	r29, 0xFF	; 255
    2818:	88 81       	ld	r24, Y
    281a:	99 81       	ldd	r25, Y+1	; 0x01
    281c:	cf 5b       	subi	r28, 0xBF	; 191
    281e:	d0 40       	sbci	r29, 0x00	; 0
    2820:	82 35       	cpi	r24, 0x52	; 82
    2822:	91 05       	cpc	r25, r1
    2824:	19 f1       	breq	.+70     	; 0x286c <main+0x1d26>
    2826:	c1 54       	subi	r28, 0x41	; 65
    2828:	df 4f       	sbci	r29, 0xFF	; 255
    282a:	e8 81       	ld	r30, Y
    282c:	f9 81       	ldd	r31, Y+1	; 0x01
    282e:	cf 5b       	subi	r28, 0xBF	; 191
    2830:	d0 40       	sbci	r29, 0x00	; 0
    2832:	e5 35       	cpi	r30, 0x55	; 85
    2834:	f1 05       	cpc	r31, r1
    2836:	41 f1       	breq	.+80     	; 0x2888 <main+0x1d42>
    2838:	c1 54       	subi	r28, 0x41	; 65
    283a:	df 4f       	sbci	r29, 0xFF	; 255
    283c:	28 81       	ld	r18, Y
    283e:	39 81       	ldd	r19, Y+1	; 0x01
    2840:	cf 5b       	subi	r28, 0xBF	; 191
    2842:	d0 40       	sbci	r29, 0x00	; 0
    2844:	2d 34       	cpi	r18, 0x4D	; 77
    2846:	31 05       	cpc	r19, r1
    2848:	11 f0       	breq	.+4      	; 0x284e <main+0x1d08>
    284a:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					{
					case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str2); u8Cursor = 0; u8Icon = 3; u8DateSetting = 0; break;
    284e:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    2852:	ce 01       	movw	r24, r28
    2854:	83 96       	adiw	r24, 0x23	; 35
    2856:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    285a:	10 92 97 01 	sts	0x0197, r1
    285e:	83 e0       	ldi	r24, 0x03	; 3
    2860:	80 93 8d 01 	sts	0x018D, r24
    2864:	10 92 91 01 	sts	0x0191, r1
    2868:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'R' : u8Cursor = 1; u8DateSetting = 0; break;
    286c:	81 e0       	ldi	r24, 0x01	; 1
    286e:	80 93 97 01 	sts	0x0197, r24
    2872:	10 92 91 01 	sts	0x0191, r1
    2876:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'L' : u8Cursor = 2; u8DateSetting = 0; break;
    287a:	82 e0       	ldi	r24, 0x02	; 2
    287c:	80 93 97 01 	sts	0x0197, r24
    2880:	10 92 91 01 	sts	0x0191, r1
    2884:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'U' :
						u8Day++;
    2888:	80 91 2b 01 	lds	r24, 0x012B
    288c:	8f 5f       	subi	r24, 0xFF	; 255
    288e:	80 93 2b 01 	sts	0x012B, r24
						if((u8Day == 30) && (u8Month == FEB) && ((u16Year % 4) == 0 )) u8Day = 1;
    2892:	80 91 2b 01 	lds	r24, 0x012B
    2896:	8e 31       	cpi	r24, 0x1E	; 30
    2898:	81 f4       	brne	.+32     	; 0x28ba <main+0x1d74>
    289a:	80 91 8b 01 	lds	r24, 0x018B
    289e:	81 30       	cpi	r24, 0x01	; 1
    28a0:	61 f4       	brne	.+24     	; 0x28ba <main+0x1d74>
    28a2:	80 91 7e 01 	lds	r24, 0x017E
    28a6:	90 91 7f 01 	lds	r25, 0x017F
    28aa:	83 70       	andi	r24, 0x03	; 3
    28ac:	90 70       	andi	r25, 0x00	; 0
    28ae:	00 97       	sbiw	r24, 0x00	; 0
    28b0:	21 f4       	brne	.+8      	; 0x28ba <main+0x1d74>
    28b2:	81 e0       	ldi	r24, 0x01	; 1
    28b4:	80 93 2b 01 	sts	0x012B, r24
    28b8:	33 c0       	rjmp	.+102    	; 0x2920 <main+0x1dda>
						else if ((u8Day == 29) && (u8Month == FEB) && ((u16Year % 4) != 0 )) u8Day = 1;
    28ba:	80 91 2b 01 	lds	r24, 0x012B
    28be:	8d 31       	cpi	r24, 0x1D	; 29
    28c0:	81 f4       	brne	.+32     	; 0x28e2 <main+0x1d9c>
    28c2:	80 91 8b 01 	lds	r24, 0x018B
    28c6:	81 30       	cpi	r24, 0x01	; 1
    28c8:	61 f4       	brne	.+24     	; 0x28e2 <main+0x1d9c>
    28ca:	80 91 7e 01 	lds	r24, 0x017E
    28ce:	90 91 7f 01 	lds	r25, 0x017F
    28d2:	83 70       	andi	r24, 0x03	; 3
    28d4:	90 70       	andi	r25, 0x00	; 0
    28d6:	00 97       	sbiw	r24, 0x00	; 0
    28d8:	21 f0       	breq	.+8      	; 0x28e2 <main+0x1d9c>
    28da:	81 e0       	ldi	r24, 0x01	; 1
    28dc:	80 93 2b 01 	sts	0x012B, r24
    28e0:	1f c0       	rjmp	.+62     	; 0x2920 <main+0x1dda>
						else if ((u8Day == 31) && ((u8Month == APR)||(u8Month == JUN)||(u8Month == SEP)||(u8Month == NOV))) u8Day = 1;
    28e2:	80 91 2b 01 	lds	r24, 0x012B
    28e6:	8f 31       	cpi	r24, 0x1F	; 31
    28e8:	a1 f4       	brne	.+40     	; 0x2912 <main+0x1dcc>
    28ea:	80 91 8b 01 	lds	r24, 0x018B
    28ee:	83 30       	cpi	r24, 0x03	; 3
    28f0:	61 f0       	breq	.+24     	; 0x290a <main+0x1dc4>
    28f2:	80 91 8b 01 	lds	r24, 0x018B
    28f6:	85 30       	cpi	r24, 0x05	; 5
    28f8:	41 f0       	breq	.+16     	; 0x290a <main+0x1dc4>
    28fa:	80 91 8b 01 	lds	r24, 0x018B
    28fe:	88 30       	cpi	r24, 0x08	; 8
    2900:	21 f0       	breq	.+8      	; 0x290a <main+0x1dc4>
    2902:	80 91 8b 01 	lds	r24, 0x018B
    2906:	8a 30       	cpi	r24, 0x0A	; 10
    2908:	21 f4       	brne	.+8      	; 0x2912 <main+0x1dcc>
    290a:	81 e0       	ldi	r24, 0x01	; 1
    290c:	80 93 2b 01 	sts	0x012B, r24
    2910:	07 c0       	rjmp	.+14     	; 0x2920 <main+0x1dda>
						else if (u8Day == 32) u8Day = 1; u8DateSetting = 0; break;
    2912:	80 91 2b 01 	lds	r24, 0x012B
    2916:	80 32       	cpi	r24, 0x20	; 32
    2918:	19 f4       	brne	.+6      	; 0x2920 <main+0x1dda>
    291a:	81 e0       	ldi	r24, 0x01	; 1
    291c:	80 93 2b 01 	sts	0x012B, r24
    2920:	10 92 91 01 	sts	0x0191, r1
    2924:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'D' :
						if((u8Day == 1) && (u8Month == FEB) && ((u16Year % 4) == 0 )) u8Day = 30;
    2928:	80 91 2b 01 	lds	r24, 0x012B
    292c:	81 30       	cpi	r24, 0x01	; 1
    292e:	81 f4       	brne	.+32     	; 0x2950 <main+0x1e0a>
    2930:	80 91 8b 01 	lds	r24, 0x018B
    2934:	81 30       	cpi	r24, 0x01	; 1
    2936:	61 f4       	brne	.+24     	; 0x2950 <main+0x1e0a>
    2938:	80 91 7e 01 	lds	r24, 0x017E
    293c:	90 91 7f 01 	lds	r25, 0x017F
    2940:	83 70       	andi	r24, 0x03	; 3
    2942:	90 70       	andi	r25, 0x00	; 0
    2944:	00 97       	sbiw	r24, 0x00	; 0
    2946:	21 f4       	brne	.+8      	; 0x2950 <main+0x1e0a>
    2948:	8e e1       	ldi	r24, 0x1E	; 30
    294a:	80 93 2b 01 	sts	0x012B, r24
    294e:	4f c0       	rjmp	.+158    	; 0x29ee <main+0x1ea8>
						else if ((u8Day == 1) && (u8Month == FEB) && ((u16Year % 4) != 0 )) u8Day = 29;
    2950:	80 91 2b 01 	lds	r24, 0x012B
    2954:	81 30       	cpi	r24, 0x01	; 1
    2956:	81 f4       	brne	.+32     	; 0x2978 <main+0x1e32>
    2958:	80 91 8b 01 	lds	r24, 0x018B
    295c:	81 30       	cpi	r24, 0x01	; 1
    295e:	61 f4       	brne	.+24     	; 0x2978 <main+0x1e32>
    2960:	80 91 7e 01 	lds	r24, 0x017E
    2964:	90 91 7f 01 	lds	r25, 0x017F
    2968:	83 70       	andi	r24, 0x03	; 3
    296a:	90 70       	andi	r25, 0x00	; 0
    296c:	00 97       	sbiw	r24, 0x00	; 0
    296e:	21 f0       	breq	.+8      	; 0x2978 <main+0x1e32>
    2970:	8d e1       	ldi	r24, 0x1D	; 29
    2972:	80 93 2b 01 	sts	0x012B, r24
    2976:	3b c0       	rjmp	.+118    	; 0x29ee <main+0x1ea8>
						else if ((u8Day == 1) && ((u8Month == APR)||(u8Month == JUN)||(u8Month == SEP)||(u8Month == NOV))) u8Day = 31;
    2978:	80 91 2b 01 	lds	r24, 0x012B
    297c:	81 30       	cpi	r24, 0x01	; 1
    297e:	a1 f4       	brne	.+40     	; 0x29a8 <main+0x1e62>
    2980:	80 91 8b 01 	lds	r24, 0x018B
    2984:	83 30       	cpi	r24, 0x03	; 3
    2986:	61 f0       	breq	.+24     	; 0x29a0 <main+0x1e5a>
    2988:	80 91 8b 01 	lds	r24, 0x018B
    298c:	85 30       	cpi	r24, 0x05	; 5
    298e:	41 f0       	breq	.+16     	; 0x29a0 <main+0x1e5a>
    2990:	80 91 8b 01 	lds	r24, 0x018B
    2994:	88 30       	cpi	r24, 0x08	; 8
    2996:	21 f0       	breq	.+8      	; 0x29a0 <main+0x1e5a>
    2998:	80 91 8b 01 	lds	r24, 0x018B
    299c:	8a 30       	cpi	r24, 0x0A	; 10
    299e:	21 f4       	brne	.+8      	; 0x29a8 <main+0x1e62>
    29a0:	8f e1       	ldi	r24, 0x1F	; 31
    29a2:	80 93 2b 01 	sts	0x012B, r24
    29a6:	23 c0       	rjmp	.+70     	; 0x29ee <main+0x1ea8>
						else if ((u8Day == 1) && ((u8Month == JAN)||(u8Month == MAR)||(u8Month == MAY)||(u8Month == JUL)||(u8Month == AUG)||(u8Month == OCT)||(u8Month == DEC))) u8Day = 32;
    29a8:	80 91 2b 01 	lds	r24, 0x012B
    29ac:	81 30       	cpi	r24, 0x01	; 1
    29ae:	f9 f4       	brne	.+62     	; 0x29ee <main+0x1ea8>
    29b0:	80 91 8b 01 	lds	r24, 0x018B
    29b4:	88 23       	and	r24, r24
    29b6:	c1 f0       	breq	.+48     	; 0x29e8 <main+0x1ea2>
    29b8:	80 91 8b 01 	lds	r24, 0x018B
    29bc:	82 30       	cpi	r24, 0x02	; 2
    29be:	a1 f0       	breq	.+40     	; 0x29e8 <main+0x1ea2>
    29c0:	80 91 8b 01 	lds	r24, 0x018B
    29c4:	84 30       	cpi	r24, 0x04	; 4
    29c6:	81 f0       	breq	.+32     	; 0x29e8 <main+0x1ea2>
    29c8:	80 91 8b 01 	lds	r24, 0x018B
    29cc:	86 30       	cpi	r24, 0x06	; 6
    29ce:	61 f0       	breq	.+24     	; 0x29e8 <main+0x1ea2>
    29d0:	80 91 8b 01 	lds	r24, 0x018B
    29d4:	87 30       	cpi	r24, 0x07	; 7
    29d6:	41 f0       	breq	.+16     	; 0x29e8 <main+0x1ea2>
    29d8:	80 91 8b 01 	lds	r24, 0x018B
    29dc:	89 30       	cpi	r24, 0x09	; 9
    29de:	21 f0       	breq	.+8      	; 0x29e8 <main+0x1ea2>
    29e0:	80 91 8b 01 	lds	r24, 0x018B
    29e4:	8b 30       	cpi	r24, 0x0B	; 11
    29e6:	19 f4       	brne	.+6      	; 0x29ee <main+0x1ea8>
    29e8:	80 e2       	ldi	r24, 0x20	; 32
    29ea:	80 93 2b 01 	sts	0x012B, r24
						u8Day-- ; u8DateSetting = 0; break;
    29ee:	80 91 2b 01 	lds	r24, 0x012B
    29f2:	81 50       	subi	r24, 0x01	; 1
    29f4:	80 93 2b 01 	sts	0x012B, r24
    29f8:	10 92 91 01 	sts	0x0191, r1
    29fc:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'E' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str2); u8Cursor = 0; u8Icon =3; u8DateSetting = 0; break;
    2a00:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    2a04:	ce 01       	movw	r24, r28
    2a06:	83 96       	adiw	r24, 0x23	; 35
    2a08:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    2a0c:	10 92 97 01 	sts	0x0197, r1
    2a10:	83 e0       	ldi	r24, 0x03	; 3
    2a12:	80 93 8d 01 	sts	0x018D, r24
    2a16:	10 92 91 01 	sts	0x0191, r1
    2a1a:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					}
				}
			}

			else if(u8Cursor == 1)
    2a1e:	80 91 97 01 	lds	r24, 0x0197
    2a22:	81 30       	cpi	r24, 0x01	; 1
    2a24:	09 f0       	breq	.+2      	; 0x2a28 <main+0x1ee2>
    2a26:	a4 c0       	rjmp	.+328    	; 0x2b70 <main+0x202a>
			{
				LCD_voidSetPosition(LCD_LINE1 ,LCD_COLUM8);
    2a28:	80 e0       	ldi	r24, 0x00	; 0
    2a2a:	67 e0       	ldi	r22, 0x07	; 7
    2a2c:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				if(u8Key != NULL)
    2a30:	80 91 8c 01 	lds	r24, 0x018C
    2a34:	88 23       	and	r24, r24
    2a36:	11 f4       	brne	.+4      	; 0x2a3c <main+0x1ef6>
    2a38:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
				{
					switch(u8Key)
    2a3c:	80 91 8c 01 	lds	r24, 0x018C
    2a40:	e8 2f       	mov	r30, r24
    2a42:	f0 e0       	ldi	r31, 0x00	; 0
    2a44:	c3 54       	subi	r28, 0x43	; 67
    2a46:	df 4f       	sbci	r29, 0xFF	; 255
    2a48:	f9 83       	std	Y+1, r31	; 0x01
    2a4a:	e8 83       	st	Y, r30
    2a4c:	cd 5b       	subi	r28, 0xBD	; 189
    2a4e:	d0 40       	sbci	r29, 0x00	; 0
    2a50:	c3 54       	subi	r28, 0x43	; 67
    2a52:	df 4f       	sbci	r29, 0xFF	; 255
    2a54:	28 81       	ld	r18, Y
    2a56:	39 81       	ldd	r19, Y+1	; 0x01
    2a58:	cd 5b       	subi	r28, 0xBD	; 189
    2a5a:	d0 40       	sbci	r29, 0x00	; 0
    2a5c:	2c 34       	cpi	r18, 0x4C	; 76
    2a5e:	31 05       	cpc	r19, r1
    2a60:	09 f4       	brne	.+2      	; 0x2a64 <main+0x1f1e>
    2a62:	52 c0       	rjmp	.+164    	; 0x2b08 <main+0x1fc2>
    2a64:	c3 54       	subi	r28, 0x43	; 67
    2a66:	df 4f       	sbci	r29, 0xFF	; 255
    2a68:	88 81       	ld	r24, Y
    2a6a:	99 81       	ldd	r25, Y+1	; 0x01
    2a6c:	cd 5b       	subi	r28, 0xBD	; 189
    2a6e:	d0 40       	sbci	r29, 0x00	; 0
    2a70:	8d 34       	cpi	r24, 0x4D	; 77
    2a72:	91 05       	cpc	r25, r1
    2a74:	b4 f4       	brge	.+44     	; 0x2aa2 <main+0x1f5c>
    2a76:	c3 54       	subi	r28, 0x43	; 67
    2a78:	df 4f       	sbci	r29, 0xFF	; 255
    2a7a:	e8 81       	ld	r30, Y
    2a7c:	f9 81       	ldd	r31, Y+1	; 0x01
    2a7e:	cd 5b       	subi	r28, 0xBD	; 189
    2a80:	d0 40       	sbci	r29, 0x00	; 0
    2a82:	e4 34       	cpi	r30, 0x44	; 68
    2a84:	f1 05       	cpc	r31, r1
    2a86:	09 f4       	brne	.+2      	; 0x2a8a <main+0x1f44>
    2a88:	54 c0       	rjmp	.+168    	; 0x2b32 <main+0x1fec>
    2a8a:	c3 54       	subi	r28, 0x43	; 67
    2a8c:	df 4f       	sbci	r29, 0xFF	; 255
    2a8e:	28 81       	ld	r18, Y
    2a90:	39 81       	ldd	r19, Y+1	; 0x01
    2a92:	cd 5b       	subi	r28, 0xBD	; 189
    2a94:	d0 40       	sbci	r29, 0x00	; 0
    2a96:	25 34       	cpi	r18, 0x45	; 69
    2a98:	31 05       	cpc	r19, r1
    2a9a:	09 f4       	brne	.+2      	; 0x2a9e <main+0x1f58>
    2a9c:	5a c0       	rjmp	.+180    	; 0x2b52 <main+0x200c>
    2a9e:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
    2aa2:	c3 54       	subi	r28, 0x43	; 67
    2aa4:	df 4f       	sbci	r29, 0xFF	; 255
    2aa6:	88 81       	ld	r24, Y
    2aa8:	99 81       	ldd	r25, Y+1	; 0x01
    2aaa:	cd 5b       	subi	r28, 0xBD	; 189
    2aac:	d0 40       	sbci	r29, 0x00	; 0
    2aae:	82 35       	cpi	r24, 0x52	; 82
    2ab0:	91 05       	cpc	r25, r1
    2ab2:	19 f1       	breq	.+70     	; 0x2afa <main+0x1fb4>
    2ab4:	c3 54       	subi	r28, 0x43	; 67
    2ab6:	df 4f       	sbci	r29, 0xFF	; 255
    2ab8:	e8 81       	ld	r30, Y
    2aba:	f9 81       	ldd	r31, Y+1	; 0x01
    2abc:	cd 5b       	subi	r28, 0xBD	; 189
    2abe:	d0 40       	sbci	r29, 0x00	; 0
    2ac0:	e5 35       	cpi	r30, 0x55	; 85
    2ac2:	f1 05       	cpc	r31, r1
    2ac4:	39 f1       	breq	.+78     	; 0x2b14 <main+0x1fce>
    2ac6:	c3 54       	subi	r28, 0x43	; 67
    2ac8:	df 4f       	sbci	r29, 0xFF	; 255
    2aca:	28 81       	ld	r18, Y
    2acc:	39 81       	ldd	r19, Y+1	; 0x01
    2ace:	cd 5b       	subi	r28, 0xBD	; 189
    2ad0:	d0 40       	sbci	r29, 0x00	; 0
    2ad2:	2d 34       	cpi	r18, 0x4D	; 77
    2ad4:	31 05       	cpc	r19, r1
    2ad6:	11 f0       	breq	.+4      	; 0x2adc <main+0x1f96>
    2ad8:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					{
					case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str2); u8Cursor = 0; u8Icon = 3; u8DateSetting = 0; break;
    2adc:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    2ae0:	ce 01       	movw	r24, r28
    2ae2:	83 96       	adiw	r24, 0x23	; 35
    2ae4:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    2ae8:	10 92 97 01 	sts	0x0197, r1
    2aec:	83 e0       	ldi	r24, 0x03	; 3
    2aee:	80 93 8d 01 	sts	0x018D, r24
    2af2:	10 92 91 01 	sts	0x0191, r1
    2af6:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'R' : u8Cursor = 2; u8DateSetting = 0;                              									break;
    2afa:	82 e0       	ldi	r24, 0x02	; 2
    2afc:	80 93 97 01 	sts	0x0197, r24
    2b00:	10 92 91 01 	sts	0x0191, r1
    2b04:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'L' : u8Cursor = 0; u8DateSetting = 0;                              								    break;
    2b08:	10 92 97 01 	sts	0x0197, r1
    2b0c:	10 92 91 01 	sts	0x0191, r1
    2b10:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'U' : u8Month++; if ( u8Month > DEC) u8Month = JAN; u8DateSetting = 0;                                 break;
    2b14:	80 91 8b 01 	lds	r24, 0x018B
    2b18:	8f 5f       	subi	r24, 0xFF	; 255
    2b1a:	80 93 8b 01 	sts	0x018B, r24
    2b1e:	80 91 8b 01 	lds	r24, 0x018B
    2b22:	8c 30       	cpi	r24, 0x0C	; 12
    2b24:	10 f0       	brcs	.+4      	; 0x2b2a <main+0x1fe4>
    2b26:	10 92 8b 01 	sts	0x018B, r1
    2b2a:	10 92 91 01 	sts	0x0191, r1
    2b2e:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'D' : if (u8Month == JAN) u8Month = DEC + 1;  u8Month--; u8DateSetting = 0;                            break;
    2b32:	80 91 8b 01 	lds	r24, 0x018B
    2b36:	88 23       	and	r24, r24
    2b38:	19 f4       	brne	.+6      	; 0x2b40 <main+0x1ffa>
    2b3a:	8c e0       	ldi	r24, 0x0C	; 12
    2b3c:	80 93 8b 01 	sts	0x018B, r24
    2b40:	80 91 8b 01 	lds	r24, 0x018B
    2b44:	81 50       	subi	r24, 0x01	; 1
    2b46:	80 93 8b 01 	sts	0x018B, r24
    2b4a:	10 92 91 01 	sts	0x0191, r1
    2b4e:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'E' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str2); u8Cursor = 0; u8Icon =3; u8DateSetting = 0;  break;
    2b52:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    2b56:	ce 01       	movw	r24, r28
    2b58:	83 96       	adiw	r24, 0x23	; 35
    2b5a:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    2b5e:	10 92 97 01 	sts	0x0197, r1
    2b62:	83 e0       	ldi	r24, 0x03	; 3
    2b64:	80 93 8d 01 	sts	0x018D, r24
    2b68:	10 92 91 01 	sts	0x0191, r1
    2b6c:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					}
				}
			}
			else if (u8Cursor == 2)
    2b70:	80 91 97 01 	lds	r24, 0x0197
    2b74:	82 30       	cpi	r24, 0x02	; 2
    2b76:	11 f0       	breq	.+4      	; 0x2b7c <main+0x2036>
    2b78:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
			{
				LCD_voidSetPosition(LCD_LINE1 ,LCD_COLUM12);
    2b7c:	80 e0       	ldi	r24, 0x00	; 0
    2b7e:	6b e0       	ldi	r22, 0x0B	; 11
    2b80:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				if(u8Key != NULL)
    2b84:	80 91 8c 01 	lds	r24, 0x018C
    2b88:	88 23       	and	r24, r24
    2b8a:	11 f4       	brne	.+4      	; 0x2b90 <main+0x204a>
    2b8c:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
				{
					switch(u8Key)
    2b90:	80 91 8c 01 	lds	r24, 0x018C
    2b94:	e8 2f       	mov	r30, r24
    2b96:	f0 e0       	ldi	r31, 0x00	; 0
    2b98:	c5 54       	subi	r28, 0x45	; 69
    2b9a:	df 4f       	sbci	r29, 0xFF	; 255
    2b9c:	f9 83       	std	Y+1, r31	; 0x01
    2b9e:	e8 83       	st	Y, r30
    2ba0:	cb 5b       	subi	r28, 0xBB	; 187
    2ba2:	d0 40       	sbci	r29, 0x00	; 0
    2ba4:	c5 54       	subi	r28, 0x45	; 69
    2ba6:	df 4f       	sbci	r29, 0xFF	; 255
    2ba8:	28 81       	ld	r18, Y
    2baa:	39 81       	ldd	r19, Y+1	; 0x01
    2bac:	cb 5b       	subi	r28, 0xBB	; 187
    2bae:	d0 40       	sbci	r29, 0x00	; 0
    2bb0:	2c 34       	cpi	r18, 0x4C	; 76
    2bb2:	31 05       	cpc	r19, r1
    2bb4:	09 f4       	brne	.+2      	; 0x2bb8 <main+0x2072>
    2bb6:	51 c0       	rjmp	.+162    	; 0x2c5a <main+0x2114>
    2bb8:	c5 54       	subi	r28, 0x45	; 69
    2bba:	df 4f       	sbci	r29, 0xFF	; 255
    2bbc:	88 81       	ld	r24, Y
    2bbe:	99 81       	ldd	r25, Y+1	; 0x01
    2bc0:	cb 5b       	subi	r28, 0xBB	; 187
    2bc2:	d0 40       	sbci	r29, 0x00	; 0
    2bc4:	8d 34       	cpi	r24, 0x4D	; 77
    2bc6:	91 05       	cpc	r25, r1
    2bc8:	b4 f4       	brge	.+44     	; 0x2bf6 <main+0x20b0>
    2bca:	c5 54       	subi	r28, 0x45	; 69
    2bcc:	df 4f       	sbci	r29, 0xFF	; 255
    2bce:	e8 81       	ld	r30, Y
    2bd0:	f9 81       	ldd	r31, Y+1	; 0x01
    2bd2:	cb 5b       	subi	r28, 0xBB	; 187
    2bd4:	d0 40       	sbci	r29, 0x00	; 0
    2bd6:	e4 34       	cpi	r30, 0x44	; 68
    2bd8:	f1 05       	cpc	r31, r1
    2bda:	09 f4       	brne	.+2      	; 0x2bde <main+0x2098>
    2bdc:	52 c0       	rjmp	.+164    	; 0x2c82 <main+0x213c>
    2bde:	c5 54       	subi	r28, 0x45	; 69
    2be0:	df 4f       	sbci	r29, 0xFF	; 255
    2be2:	28 81       	ld	r18, Y
    2be4:	39 81       	ldd	r19, Y+1	; 0x01
    2be6:	cb 5b       	subi	r28, 0xBB	; 187
    2be8:	d0 40       	sbci	r29, 0x00	; 0
    2bea:	25 34       	cpi	r18, 0x45	; 69
    2bec:	31 05       	cpc	r19, r1
    2bee:	09 f4       	brne	.+2      	; 0x2bf2 <main+0x20ac>
    2bf0:	55 c0       	rjmp	.+170    	; 0x2c9c <main+0x2156>
    2bf2:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
    2bf6:	c5 54       	subi	r28, 0x45	; 69
    2bf8:	df 4f       	sbci	r29, 0xFF	; 255
    2bfa:	88 81       	ld	r24, Y
    2bfc:	99 81       	ldd	r25, Y+1	; 0x01
    2bfe:	cb 5b       	subi	r28, 0xBB	; 187
    2c00:	d0 40       	sbci	r29, 0x00	; 0
    2c02:	82 35       	cpi	r24, 0x52	; 82
    2c04:	91 05       	cpc	r25, r1
    2c06:	19 f1       	breq	.+70     	; 0x2c4e <main+0x2108>
    2c08:	c5 54       	subi	r28, 0x45	; 69
    2c0a:	df 4f       	sbci	r29, 0xFF	; 255
    2c0c:	e8 81       	ld	r30, Y
    2c0e:	f9 81       	ldd	r31, Y+1	; 0x01
    2c10:	cb 5b       	subi	r28, 0xBB	; 187
    2c12:	d0 40       	sbci	r29, 0x00	; 0
    2c14:	e5 35       	cpi	r30, 0x55	; 85
    2c16:	f1 05       	cpc	r31, r1
    2c18:	39 f1       	breq	.+78     	; 0x2c68 <main+0x2122>
    2c1a:	c5 54       	subi	r28, 0x45	; 69
    2c1c:	df 4f       	sbci	r29, 0xFF	; 255
    2c1e:	28 81       	ld	r18, Y
    2c20:	39 81       	ldd	r19, Y+1	; 0x01
    2c22:	cb 5b       	subi	r28, 0xBB	; 187
    2c24:	d0 40       	sbci	r29, 0x00	; 0
    2c26:	2d 34       	cpi	r18, 0x4D	; 77
    2c28:	31 05       	cpc	r19, r1
    2c2a:	11 f0       	breq	.+4      	; 0x2c30 <main+0x20ea>
    2c2c:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					{
					case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str2); u8Cursor = 0; u8Icon = 3; u8DateSetting = 0;  break;
    2c30:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    2c34:	ce 01       	movw	r24, r28
    2c36:	83 96       	adiw	r24, 0x23	; 35
    2c38:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    2c3c:	10 92 97 01 	sts	0x0197, r1
    2c40:	83 e0       	ldi	r24, 0x03	; 3
    2c42:	80 93 8d 01 	sts	0x018D, r24
    2c46:	10 92 91 01 	sts	0x0191, r1
    2c4a:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'R' : u8Cursor = 0; u8DateSetting = 0;                               									 break;
    2c4e:	10 92 97 01 	sts	0x0197, r1
    2c52:	10 92 91 01 	sts	0x0191, r1
    2c56:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'L' : u8Cursor = 1; u8DateSetting = 0;                               									 break;
    2c5a:	81 e0       	ldi	r24, 0x01	; 1
    2c5c:	80 93 97 01 	sts	0x0197, r24
    2c60:	10 92 91 01 	sts	0x0191, r1
    2c64:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'U' : u16Year++; u8DateSetting = 0;                                                                     break;
    2c68:	80 91 7e 01 	lds	r24, 0x017E
    2c6c:	90 91 7f 01 	lds	r25, 0x017F
    2c70:	01 96       	adiw	r24, 0x01	; 1
    2c72:	90 93 7f 01 	sts	0x017F, r25
    2c76:	80 93 7e 01 	sts	0x017E, r24
    2c7a:	10 92 91 01 	sts	0x0191, r1
    2c7e:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'D' : u16Year--; u8DateSetting = 0;                                                                     break;
    2c82:	80 91 7e 01 	lds	r24, 0x017E
    2c86:	90 91 7f 01 	lds	r25, 0x017F
    2c8a:	01 97       	sbiw	r24, 0x01	; 1
    2c8c:	90 93 7f 01 	sts	0x017F, r25
    2c90:	80 93 7e 01 	sts	0x017E, r24
    2c94:	10 92 91 01 	sts	0x0191, r1
    2c98:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'E' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str2); u8Cursor = 0; u8Icon =3; u8DateSetting = 0;   break;
    2c9c:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    2ca0:	ce 01       	movw	r24, r28
    2ca2:	83 96       	adiw	r24, 0x23	; 35
    2ca4:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    2ca8:	10 92 97 01 	sts	0x0197, r1
    2cac:	83 e0       	ldi	r24, 0x03	; 3
    2cae:	80 93 8d 01 	sts	0x018D, r24
    2cb2:	10 92 91 01 	sts	0x0191, r1
    2cb6:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
				}
			}
		}
//***********************************************************************************************************************************************************************************************************************************************************
		/* Stop Watch Show */
		else if (u8Icon == 13)
    2cba:	80 91 8d 01 	lds	r24, 0x018D
    2cbe:	8d 30       	cpi	r24, 0x0D	; 13
    2cc0:	09 f0       	breq	.+2      	; 0x2cc4 <main+0x217e>
    2cc2:	c8 c0       	rjmp	.+400    	; 0x2e54 <main+0x230e>
		{
			if(au8StopWatch[SW_MINUTES] < 10)
    2cc4:	80 91 9d 01 	lds	r24, 0x019D
    2cc8:	8a 30       	cpi	r24, 0x0A	; 10
    2cca:	b0 f4       	brcc	.+44     	; 0x2cf8 <main+0x21b2>
			{
				LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM5);
    2ccc:	80 e0       	ldi	r24, 0x00	; 0
    2cce:	64 e0       	ldi	r22, 0x04	; 4
    2cd0:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				LCD_voidSendData('0');
    2cd4:	80 e3       	ldi	r24, 0x30	; 48
    2cd6:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
				LCD_voidSendInteger(au8StopWatch[SW_MINUTES]);
    2cda:	80 91 9d 01 	lds	r24, 0x019D
    2cde:	88 2f       	mov	r24, r24
    2ce0:	90 e0       	ldi	r25, 0x00	; 0
    2ce2:	a0 e0       	ldi	r26, 0x00	; 0
    2ce4:	b0 e0       	ldi	r27, 0x00	; 0
    2ce6:	bc 01       	movw	r22, r24
    2ce8:	cd 01       	movw	r24, r26
    2cea:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
				LCD_voidSendString(":");
    2cee:	85 e6       	ldi	r24, 0x65	; 101
    2cf0:	90 e0       	ldi	r25, 0x00	; 0
    2cf2:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    2cf6:	19 c0       	rjmp	.+50     	; 0x2d2a <main+0x21e4>
			}
			else if (au8StopWatch[SW_MINUTES] < 60)
    2cf8:	80 91 9d 01 	lds	r24, 0x019D
    2cfc:	8c 33       	cpi	r24, 0x3C	; 60
    2cfe:	98 f4       	brcc	.+38     	; 0x2d26 <main+0x21e0>
			{
				LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM5);
    2d00:	80 e0       	ldi	r24, 0x00	; 0
    2d02:	64 e0       	ldi	r22, 0x04	; 4
    2d04:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				LCD_voidSendInteger(au8StopWatch[SW_MINUTES]);
    2d08:	80 91 9d 01 	lds	r24, 0x019D
    2d0c:	88 2f       	mov	r24, r24
    2d0e:	90 e0       	ldi	r25, 0x00	; 0
    2d10:	a0 e0       	ldi	r26, 0x00	; 0
    2d12:	b0 e0       	ldi	r27, 0x00	; 0
    2d14:	bc 01       	movw	r22, r24
    2d16:	cd 01       	movw	r24, r26
    2d18:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
				LCD_voidSendString(":");
    2d1c:	85 e6       	ldi	r24, 0x65	; 101
    2d1e:	90 e0       	ldi	r25, 0x00	; 0
    2d20:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    2d24:	02 c0       	rjmp	.+4      	; 0x2d2a <main+0x21e4>
			}
			else
			{
				au8StopWatch[SW_MINUTES] = 0;
    2d26:	10 92 9d 01 	sts	0x019D, r1
			}

			if(au8StopWatch[SW_SECONDS] < 10)
    2d2a:	80 91 9e 01 	lds	r24, 0x019E
    2d2e:	8a 30       	cpi	r24, 0x0A	; 10
    2d30:	b0 f4       	brcc	.+44     	; 0x2d5e <main+0x2218>
			{
				LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM8);
    2d32:	80 e0       	ldi	r24, 0x00	; 0
    2d34:	67 e0       	ldi	r22, 0x07	; 7
    2d36:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				LCD_voidSendData('0');
    2d3a:	80 e3       	ldi	r24, 0x30	; 48
    2d3c:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
				LCD_voidSendInteger(au8StopWatch[SW_SECONDS]);
    2d40:	80 91 9e 01 	lds	r24, 0x019E
    2d44:	88 2f       	mov	r24, r24
    2d46:	90 e0       	ldi	r25, 0x00	; 0
    2d48:	a0 e0       	ldi	r26, 0x00	; 0
    2d4a:	b0 e0       	ldi	r27, 0x00	; 0
    2d4c:	bc 01       	movw	r22, r24
    2d4e:	cd 01       	movw	r24, r26
    2d50:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
				LCD_voidSendString(":");
    2d54:	85 e6       	ldi	r24, 0x65	; 101
    2d56:	90 e0       	ldi	r25, 0x00	; 0
    2d58:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    2d5c:	1e c0       	rjmp	.+60     	; 0x2d9a <main+0x2254>
			}
			else if (au8StopWatch[SW_SECONDS] < 60)
    2d5e:	80 91 9e 01 	lds	r24, 0x019E
    2d62:	8c 33       	cpi	r24, 0x3C	; 60
    2d64:	98 f4       	brcc	.+38     	; 0x2d8c <main+0x2246>
			{
				LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM8);
    2d66:	80 e0       	ldi	r24, 0x00	; 0
    2d68:	67 e0       	ldi	r22, 0x07	; 7
    2d6a:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				LCD_voidSendInteger(au8StopWatch[SW_SECONDS]);
    2d6e:	80 91 9e 01 	lds	r24, 0x019E
    2d72:	88 2f       	mov	r24, r24
    2d74:	90 e0       	ldi	r25, 0x00	; 0
    2d76:	a0 e0       	ldi	r26, 0x00	; 0
    2d78:	b0 e0       	ldi	r27, 0x00	; 0
    2d7a:	bc 01       	movw	r22, r24
    2d7c:	cd 01       	movw	r24, r26
    2d7e:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
				LCD_voidSendString(":");
    2d82:	85 e6       	ldi	r24, 0x65	; 101
    2d84:	90 e0       	ldi	r25, 0x00	; 0
    2d86:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    2d8a:	07 c0       	rjmp	.+14     	; 0x2d9a <main+0x2254>
			}
			else
			{
				au8StopWatch[SW_SECONDS] = 0;
    2d8c:	10 92 9e 01 	sts	0x019E, r1
				au8StopWatch[SW_MINUTES]++;
    2d90:	80 91 9d 01 	lds	r24, 0x019D
    2d94:	8f 5f       	subi	r24, 0xFF	; 255
    2d96:	80 93 9d 01 	sts	0x019D, r24
			}

			if(au8StopWatch[MILLI_SECONDS] < 100)
    2d9a:	80 91 9f 01 	lds	r24, 0x019F
    2d9e:	84 36       	cpi	r24, 0x64	; 100
    2da0:	b0 f4       	brcc	.+44     	; 0x2dce <main+0x2288>
			{
				LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM11);
    2da2:	80 e0       	ldi	r24, 0x00	; 0
    2da4:	6a e0       	ldi	r22, 0x0A	; 10
    2da6:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				if (au8StopWatch[MILLI_SECONDS] == 0) LCD_voidSendData('0');
    2daa:	80 91 9f 01 	lds	r24, 0x019F
    2dae:	88 23       	and	r24, r24
    2db0:	19 f4       	brne	.+6      	; 0x2db8 <main+0x2272>
    2db2:	80 e3       	ldi	r24, 0x30	; 48
    2db4:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
				LCD_voidSendInteger(au8StopWatch[2]);
    2db8:	80 91 9f 01 	lds	r24, 0x019F
    2dbc:	88 2f       	mov	r24, r24
    2dbe:	90 e0       	ldi	r25, 0x00	; 0
    2dc0:	a0 e0       	ldi	r26, 0x00	; 0
    2dc2:	b0 e0       	ldi	r27, 0x00	; 0
    2dc4:	bc 01       	movw	r22, r24
    2dc6:	cd 01       	movw	r24, r26
    2dc8:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
    2dcc:	07 c0       	rjmp	.+14     	; 0x2ddc <main+0x2296>
			}
			else
			{
				au8StopWatch[MILLI_SECONDS] = 0;
    2dce:	10 92 9f 01 	sts	0x019F, r1
				au8StopWatch[SW_SECONDS]++;
    2dd2:	80 91 9e 01 	lds	r24, 0x019E
    2dd6:	8f 5f       	subi	r24, 0xFF	; 255
    2dd8:	80 93 9e 01 	sts	0x019E, r24
			}

			if(u8Key != NULL)
    2ddc:	80 91 8c 01 	lds	r24, 0x018C
    2de0:	88 23       	and	r24, r24
    2de2:	11 f4       	brne	.+4      	; 0x2de8 <main+0x22a2>
    2de4:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
			{
				switch(u8Key)
    2de8:	80 91 8c 01 	lds	r24, 0x018C
    2dec:	e8 2f       	mov	r30, r24
    2dee:	f0 e0       	ldi	r31, 0x00	; 0
    2df0:	c7 54       	subi	r28, 0x47	; 71
    2df2:	df 4f       	sbci	r29, 0xFF	; 255
    2df4:	f9 83       	std	Y+1, r31	; 0x01
    2df6:	e8 83       	st	Y, r30
    2df8:	c9 5b       	subi	r28, 0xB9	; 185
    2dfa:	d0 40       	sbci	r29, 0x00	; 0
    2dfc:	c7 54       	subi	r28, 0x47	; 71
    2dfe:	df 4f       	sbci	r29, 0xFF	; 255
    2e00:	28 81       	ld	r18, Y
    2e02:	39 81       	ldd	r19, Y+1	; 0x01
    2e04:	c9 5b       	subi	r28, 0xB9	; 185
    2e06:	d0 40       	sbci	r29, 0x00	; 0
    2e08:	25 34       	cpi	r18, 0x45	; 69
    2e0a:	31 05       	cpc	r19, r1
    2e0c:	f1 f0       	breq	.+60     	; 0x2e4a <main+0x2304>
    2e0e:	c7 54       	subi	r28, 0x47	; 71
    2e10:	df 4f       	sbci	r29, 0xFF	; 255
    2e12:	88 81       	ld	r24, Y
    2e14:	99 81       	ldd	r25, Y+1	; 0x01
    2e16:	c9 5b       	subi	r28, 0xB9	; 185
    2e18:	d0 40       	sbci	r29, 0x00	; 0
    2e1a:	8d 34       	cpi	r24, 0x4D	; 77
    2e1c:	91 05       	cpc	r25, r1
    2e1e:	11 f0       	breq	.+4      	; 0x2e24 <main+0x22de>
    2e20:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
				{
				case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str3);  u8Icon = 4; u8StartStopWatch = 0; au8StopWatch[SW_MINUTES] = 0; au8StopWatch[SW_SECONDS] = 0; au8StopWatch[MILLI_SECONDS] = 0;  break;
    2e24:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    2e28:	ce 01       	movw	r24, r28
    2e2a:	c4 96       	adiw	r24, 0x34	; 52
    2e2c:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    2e30:	84 e0       	ldi	r24, 0x04	; 4
    2e32:	80 93 8d 01 	sts	0x018D, r24
    2e36:	10 92 98 01 	sts	0x0198, r1
    2e3a:	10 92 9d 01 	sts	0x019D, r1
    2e3e:	10 92 9e 01 	sts	0x019E, r1
    2e42:	10 92 9f 01 	sts	0x019F, r1
    2e46:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
				case 'E' : u8StartStopWatch = 1;                                                                  																                                break;
    2e4a:	81 e0       	ldi	r24, 0x01	; 1
    2e4c:	80 93 98 01 	sts	0x0198, r24
    2e50:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
			}

		}
//*****************************************************************************************************************************************************************************************************************************************************************
		/* Time Setting */
		else if (u8Icon == 14)
    2e54:	80 91 8d 01 	lds	r24, 0x018D
    2e58:	8e 30       	cpi	r24, 0x0E	; 14
    2e5a:	09 f0       	breq	.+2      	; 0x2e5e <main+0x2318>
    2e5c:	6c c3       	rjmp	.+1752   	; 0x3536 <main+0x29f0>
		{
			LCD_voidEnableCursor();
    2e5e:	0e 94 af 29 	call	0x535e	; 0x535e <LCD_voidEnableCursor>
			if (u8TimeSetting == 0)
    2e62:	80 91 8f 01 	lds	r24, 0x018F
    2e66:	88 23       	and	r24, r24
    2e68:	09 f0       	breq	.+2      	; 0x2e6c <main+0x2326>
    2e6a:	9f c0       	rjmp	.+318    	; 0x2faa <main+0x2464>
			{
				if(au8TimeSetting[HOURS] < 10)
    2e6c:	80 91 2f 01 	lds	r24, 0x012F
    2e70:	8a 30       	cpi	r24, 0x0A	; 10
    2e72:	a8 f4       	brcc	.+42     	; 0x2e9e <main+0x2358>
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM3);
    2e74:	80 e0       	ldi	r24, 0x00	; 0
    2e76:	62 e0       	ldi	r22, 0x02	; 2
    2e78:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendData('0');
    2e7c:	80 e3       	ldi	r24, 0x30	; 48
    2e7e:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
					LCD_voidSendInteger(au8TimeSetting[HOURS]);
    2e82:	80 91 2f 01 	lds	r24, 0x012F
    2e86:	88 2f       	mov	r24, r24
    2e88:	90 e0       	ldi	r25, 0x00	; 0
    2e8a:	a0 e0       	ldi	r26, 0x00	; 0
    2e8c:	b0 e0       	ldi	r27, 0x00	; 0
    2e8e:	bc 01       	movw	r22, r24
    2e90:	cd 01       	movw	r24, r26
    2e92:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
					LCD_voidSendData(':');
    2e96:	8a e3       	ldi	r24, 0x3A	; 58
    2e98:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
    2e9c:	11 c0       	rjmp	.+34     	; 0x2ec0 <main+0x237a>
				}
				else
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM3);
    2e9e:	80 e0       	ldi	r24, 0x00	; 0
    2ea0:	62 e0       	ldi	r22, 0x02	; 2
    2ea2:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendInteger(au8TimeSetting[HOURS]);
    2ea6:	80 91 2f 01 	lds	r24, 0x012F
    2eaa:	88 2f       	mov	r24, r24
    2eac:	90 e0       	ldi	r25, 0x00	; 0
    2eae:	a0 e0       	ldi	r26, 0x00	; 0
    2eb0:	b0 e0       	ldi	r27, 0x00	; 0
    2eb2:	bc 01       	movw	r22, r24
    2eb4:	cd 01       	movw	r24, r26
    2eb6:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
					LCD_voidSendData(':');
    2eba:	8a e3       	ldi	r24, 0x3A	; 58
    2ebc:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
				}

				if(au8TimeSetting[MINUTES] < 10)
    2ec0:	80 91 30 01 	lds	r24, 0x0130
    2ec4:	8a 30       	cpi	r24, 0x0A	; 10
    2ec6:	a8 f4       	brcc	.+42     	; 0x2ef2 <main+0x23ac>
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM6);
    2ec8:	80 e0       	ldi	r24, 0x00	; 0
    2eca:	65 e0       	ldi	r22, 0x05	; 5
    2ecc:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendData('0');
    2ed0:	80 e3       	ldi	r24, 0x30	; 48
    2ed2:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
					LCD_voidSendInteger(au8TimeSetting[MINUTES]);
    2ed6:	80 91 30 01 	lds	r24, 0x0130
    2eda:	88 2f       	mov	r24, r24
    2edc:	90 e0       	ldi	r25, 0x00	; 0
    2ede:	a0 e0       	ldi	r26, 0x00	; 0
    2ee0:	b0 e0       	ldi	r27, 0x00	; 0
    2ee2:	bc 01       	movw	r22, r24
    2ee4:	cd 01       	movw	r24, r26
    2ee6:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
					LCD_voidSendData(':');
    2eea:	8a e3       	ldi	r24, 0x3A	; 58
    2eec:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
    2ef0:	11 c0       	rjmp	.+34     	; 0x2f14 <main+0x23ce>
				}
				else
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM6);
    2ef2:	80 e0       	ldi	r24, 0x00	; 0
    2ef4:	65 e0       	ldi	r22, 0x05	; 5
    2ef6:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendInteger(au8TimeSetting[MINUTES]);
    2efa:	80 91 30 01 	lds	r24, 0x0130
    2efe:	88 2f       	mov	r24, r24
    2f00:	90 e0       	ldi	r25, 0x00	; 0
    2f02:	a0 e0       	ldi	r26, 0x00	; 0
    2f04:	b0 e0       	ldi	r27, 0x00	; 0
    2f06:	bc 01       	movw	r22, r24
    2f08:	cd 01       	movw	r24, r26
    2f0a:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
					LCD_voidSendData(':');
    2f0e:	8a e3       	ldi	r24, 0x3A	; 58
    2f10:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
				}

				if(au8TimeSetting[SECONDS] < 10)
    2f14:	80 91 31 01 	lds	r24, 0x0131
    2f18:	8a 30       	cpi	r24, 0x0A	; 10
    2f1a:	20 f5       	brcc	.+72     	; 0x2f64 <main+0x241e>
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM9);
    2f1c:	80 e0       	ldi	r24, 0x00	; 0
    2f1e:	68 e0       	ldi	r22, 0x08	; 8
    2f20:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendData('0');
    2f24:	80 e3       	ldi	r24, 0x30	; 48
    2f26:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
					LCD_voidSendInteger(au8TimeSetting[SECONDS]);
    2f2a:	80 91 31 01 	lds	r24, 0x0131
    2f2e:	88 2f       	mov	r24, r24
    2f30:	90 e0       	ldi	r25, 0x00	; 0
    2f32:	a0 e0       	ldi	r26, 0x00	; 0
    2f34:	b0 e0       	ldi	r27, 0x00	; 0
    2f36:	bc 01       	movw	r22, r24
    2f38:	cd 01       	movw	r24, r26
    2f3a:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
					LCD_voidSendData(' ');
    2f3e:	80 e2       	ldi	r24, 0x20	; 32
    2f40:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
					LCD_voidSendString(&au8TimeForm[u8TimeForm]);
    2f44:	42 e7       	ldi	r20, 0x72	; 114
    2f46:	51 e0       	ldi	r21, 0x01	; 1
    2f48:	80 91 8e 01 	lds	r24, 0x018E
    2f4c:	28 2f       	mov	r18, r24
    2f4e:	30 e0       	ldi	r19, 0x00	; 0
    2f50:	c9 01       	movw	r24, r18
    2f52:	88 0f       	add	r24, r24
    2f54:	99 1f       	adc	r25, r25
    2f56:	82 0f       	add	r24, r18
    2f58:	93 1f       	adc	r25, r19
    2f5a:	84 0f       	add	r24, r20
    2f5c:	95 1f       	adc	r25, r21
    2f5e:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    2f62:	20 c0       	rjmp	.+64     	; 0x2fa4 <main+0x245e>
				}
				else
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM9);
    2f64:	80 e0       	ldi	r24, 0x00	; 0
    2f66:	68 e0       	ldi	r22, 0x08	; 8
    2f68:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendInteger(au8TimeSetting[SECONDS]);
    2f6c:	80 91 31 01 	lds	r24, 0x0131
    2f70:	88 2f       	mov	r24, r24
    2f72:	90 e0       	ldi	r25, 0x00	; 0
    2f74:	a0 e0       	ldi	r26, 0x00	; 0
    2f76:	b0 e0       	ldi	r27, 0x00	; 0
    2f78:	bc 01       	movw	r22, r24
    2f7a:	cd 01       	movw	r24, r26
    2f7c:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
					LCD_voidSendData(' ');
    2f80:	80 e2       	ldi	r24, 0x20	; 32
    2f82:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
					LCD_voidSendString(&au8TimeForm[u8TimeForm]);
    2f86:	42 e7       	ldi	r20, 0x72	; 114
    2f88:	51 e0       	ldi	r21, 0x01	; 1
    2f8a:	80 91 8e 01 	lds	r24, 0x018E
    2f8e:	28 2f       	mov	r18, r24
    2f90:	30 e0       	ldi	r19, 0x00	; 0
    2f92:	c9 01       	movw	r24, r18
    2f94:	88 0f       	add	r24, r24
    2f96:	99 1f       	adc	r25, r25
    2f98:	82 0f       	add	r24, r18
    2f9a:	93 1f       	adc	r25, r19
    2f9c:	84 0f       	add	r24, r20
    2f9e:	95 1f       	adc	r25, r21
    2fa0:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
				}
				u8TimeSetting = 1;
    2fa4:	81 e0       	ldi	r24, 0x01	; 1
    2fa6:	80 93 8f 01 	sts	0x018F, r24
			}

			if (u8Cursor == 0)
    2faa:	80 91 97 01 	lds	r24, 0x0197
    2fae:	88 23       	and	r24, r24
    2fb0:	09 f0       	breq	.+2      	; 0x2fb4 <main+0x246e>
    2fb2:	b2 c0       	rjmp	.+356    	; 0x3118 <main+0x25d2>
			{
				LCD_voidSetPosition(LCD_LINE1 ,LCD_COLUM4);
    2fb4:	80 e0       	ldi	r24, 0x00	; 0
    2fb6:	63 e0       	ldi	r22, 0x03	; 3
    2fb8:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				if(u8Key != NULL)
    2fbc:	80 91 8c 01 	lds	r24, 0x018C
    2fc0:	88 23       	and	r24, r24
    2fc2:	11 f4       	brne	.+4      	; 0x2fc8 <main+0x2482>
    2fc4:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
				{
					switch(u8Key)
    2fc8:	80 91 8c 01 	lds	r24, 0x018C
    2fcc:	e8 2f       	mov	r30, r24
    2fce:	f0 e0       	ldi	r31, 0x00	; 0
    2fd0:	c9 54       	subi	r28, 0x49	; 73
    2fd2:	df 4f       	sbci	r29, 0xFF	; 255
    2fd4:	f9 83       	std	Y+1, r31	; 0x01
    2fd6:	e8 83       	st	Y, r30
    2fd8:	c7 5b       	subi	r28, 0xB7	; 183
    2fda:	d0 40       	sbci	r29, 0x00	; 0
    2fdc:	c9 54       	subi	r28, 0x49	; 73
    2fde:	df 4f       	sbci	r29, 0xFF	; 255
    2fe0:	28 81       	ld	r18, Y
    2fe2:	39 81       	ldd	r19, Y+1	; 0x01
    2fe4:	c7 5b       	subi	r28, 0xB7	; 183
    2fe6:	d0 40       	sbci	r29, 0x00	; 0
    2fe8:	2c 34       	cpi	r18, 0x4C	; 76
    2fea:	31 05       	cpc	r19, r1
    2fec:	09 f4       	brne	.+2      	; 0x2ff0 <main+0x24aa>
    2fee:	52 c0       	rjmp	.+164    	; 0x3094 <main+0x254e>
    2ff0:	c9 54       	subi	r28, 0x49	; 73
    2ff2:	df 4f       	sbci	r29, 0xFF	; 255
    2ff4:	88 81       	ld	r24, Y
    2ff6:	99 81       	ldd	r25, Y+1	; 0x01
    2ff8:	c7 5b       	subi	r28, 0xB7	; 183
    2ffa:	d0 40       	sbci	r29, 0x00	; 0
    2ffc:	8d 34       	cpi	r24, 0x4D	; 77
    2ffe:	91 05       	cpc	r25, r1
    3000:	b4 f4       	brge	.+44     	; 0x302e <main+0x24e8>
    3002:	c9 54       	subi	r28, 0x49	; 73
    3004:	df 4f       	sbci	r29, 0xFF	; 255
    3006:	e8 81       	ld	r30, Y
    3008:	f9 81       	ldd	r31, Y+1	; 0x01
    300a:	c7 5b       	subi	r28, 0xB7	; 183
    300c:	d0 40       	sbci	r29, 0x00	; 0
    300e:	e4 34       	cpi	r30, 0x44	; 68
    3010:	f1 05       	cpc	r31, r1
    3012:	09 f4       	brne	.+2      	; 0x3016 <main+0x24d0>
    3014:	56 c0       	rjmp	.+172    	; 0x30c2 <main+0x257c>
    3016:	c9 54       	subi	r28, 0x49	; 73
    3018:	df 4f       	sbci	r29, 0xFF	; 255
    301a:	28 81       	ld	r18, Y
    301c:	39 81       	ldd	r19, Y+1	; 0x01
    301e:	c7 5b       	subi	r28, 0xB7	; 183
    3020:	d0 40       	sbci	r29, 0x00	; 0
    3022:	25 34       	cpi	r18, 0x45	; 69
    3024:	31 05       	cpc	r19, r1
    3026:	09 f4       	brne	.+2      	; 0x302a <main+0x24e4>
    3028:	5c c0       	rjmp	.+184    	; 0x30e2 <main+0x259c>
    302a:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
    302e:	c9 54       	subi	r28, 0x49	; 73
    3030:	df 4f       	sbci	r29, 0xFF	; 255
    3032:	88 81       	ld	r24, Y
    3034:	99 81       	ldd	r25, Y+1	; 0x01
    3036:	c7 5b       	subi	r28, 0xB7	; 183
    3038:	d0 40       	sbci	r29, 0x00	; 0
    303a:	82 35       	cpi	r24, 0x52	; 82
    303c:	91 05       	cpc	r25, r1
    303e:	19 f1       	breq	.+70     	; 0x3086 <main+0x2540>
    3040:	c9 54       	subi	r28, 0x49	; 73
    3042:	df 4f       	sbci	r29, 0xFF	; 255
    3044:	e8 81       	ld	r30, Y
    3046:	f9 81       	ldd	r31, Y+1	; 0x01
    3048:	c7 5b       	subi	r28, 0xB7	; 183
    304a:	d0 40       	sbci	r29, 0x00	; 0
    304c:	e5 35       	cpi	r30, 0x55	; 85
    304e:	f1 05       	cpc	r31, r1
    3050:	41 f1       	breq	.+80     	; 0x30a2 <main+0x255c>
    3052:	c9 54       	subi	r28, 0x49	; 73
    3054:	df 4f       	sbci	r29, 0xFF	; 255
    3056:	28 81       	ld	r18, Y
    3058:	39 81       	ldd	r19, Y+1	; 0x01
    305a:	c7 5b       	subi	r28, 0xB7	; 183
    305c:	d0 40       	sbci	r29, 0x00	; 0
    305e:	2d 34       	cpi	r18, 0x4D	; 77
    3060:	31 05       	cpc	r19, r1
    3062:	11 f0       	breq	.+4      	; 0x3068 <main+0x2522>
    3064:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					{
					case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str1); u8Cursor = 0; u8Icon = 2; u8TimeSetting = 0;                                                                                                            break;
    3068:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    306c:	ce 01       	movw	r24, r28
    306e:	42 96       	adiw	r24, 0x12	; 18
    3070:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    3074:	10 92 97 01 	sts	0x0197, r1
    3078:	82 e0       	ldi	r24, 0x02	; 2
    307a:	80 93 8d 01 	sts	0x018D, r24
    307e:	10 92 8f 01 	sts	0x018F, r1
    3082:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'R' : u8Cursor = 1; u8TimeSetting = 0;                                                                                          																                   break;
    3086:	81 e0       	ldi	r24, 0x01	; 1
    3088:	80 93 97 01 	sts	0x0197, r24
    308c:	10 92 8f 01 	sts	0x018F, r1
    3090:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'L' : u8Cursor = 3; u8TimeSetting = 0;                                                                                          	  															               	   break;
    3094:	83 e0       	ldi	r24, 0x03	; 3
    3096:	80 93 97 01 	sts	0x0197, r24
    309a:	10 92 8f 01 	sts	0x018F, r1
    309e:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'U' : au8TimeSetting[HOURS]++; if (au8TimeSetting[HOURS] == 13) au8TimeSetting[HOURS] = 1;      u8TimeSetting = 0;                                                                                                break;
    30a2:	80 91 2f 01 	lds	r24, 0x012F
    30a6:	8f 5f       	subi	r24, 0xFF	; 255
    30a8:	80 93 2f 01 	sts	0x012F, r24
    30ac:	80 91 2f 01 	lds	r24, 0x012F
    30b0:	8d 30       	cpi	r24, 0x0D	; 13
    30b2:	19 f4       	brne	.+6      	; 0x30ba <main+0x2574>
    30b4:	81 e0       	ldi	r24, 0x01	; 1
    30b6:	80 93 2f 01 	sts	0x012F, r24
    30ba:	10 92 8f 01 	sts	0x018F, r1
    30be:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'D' : if (au8TimeSetting[HOURS] == 1) au8TimeSetting[HOURS] = 13;  au8TimeSetting[HOURS]--;     u8TimeSetting = 0;                                                                                                break;
    30c2:	80 91 2f 01 	lds	r24, 0x012F
    30c6:	81 30       	cpi	r24, 0x01	; 1
    30c8:	19 f4       	brne	.+6      	; 0x30d0 <main+0x258a>
    30ca:	8d e0       	ldi	r24, 0x0D	; 13
    30cc:	80 93 2f 01 	sts	0x012F, r24
    30d0:	80 91 2f 01 	lds	r24, 0x012F
    30d4:	81 50       	subi	r24, 0x01	; 1
    30d6:	80 93 2f 01 	sts	0x012F, r24
    30da:	10 92 8f 01 	sts	0x018F, r1
    30de:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'E' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str1); u8TimeSetting = 0; u8Cursor = 0; u8Icon = 2; u8Hours = au8TimeSetting[HOURS]; u8Minutes = au8TimeSetting[MINUTES]; u8Seconds = au8TimeSetting[SECONDS]; break;
    30e2:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    30e6:	ce 01       	movw	r24, r28
    30e8:	42 96       	adiw	r24, 0x12	; 18
    30ea:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    30ee:	10 92 8f 01 	sts	0x018F, r1
    30f2:	10 92 97 01 	sts	0x0197, r1
    30f6:	82 e0       	ldi	r24, 0x02	; 2
    30f8:	80 93 8d 01 	sts	0x018D, r24
    30fc:	80 91 2f 01 	lds	r24, 0x012F
    3100:	80 93 2a 01 	sts	0x012A, r24
    3104:	80 91 30 01 	lds	r24, 0x0130
    3108:	80 93 8a 01 	sts	0x018A, r24
    310c:	80 91 31 01 	lds	r24, 0x0131
    3110:	80 93 89 01 	sts	0x0189, r24
    3114:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					}
				}
			}
			else if(u8Cursor == 1)
    3118:	80 91 97 01 	lds	r24, 0x0197
    311c:	81 30       	cpi	r24, 0x01	; 1
    311e:	09 f0       	breq	.+2      	; 0x3122 <main+0x25dc>
    3120:	b0 c0       	rjmp	.+352    	; 0x3282 <main+0x273c>
			{
				LCD_voidSetPosition(LCD_LINE1 ,LCD_COLUM7);
    3122:	80 e0       	ldi	r24, 0x00	; 0
    3124:	66 e0       	ldi	r22, 0x06	; 6
    3126:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				if(u8Key != NULL)
    312a:	80 91 8c 01 	lds	r24, 0x018C
    312e:	88 23       	and	r24, r24
    3130:	11 f4       	brne	.+4      	; 0x3136 <main+0x25f0>
    3132:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
				{
					switch(u8Key)
    3136:	80 91 8c 01 	lds	r24, 0x018C
    313a:	e8 2f       	mov	r30, r24
    313c:	f0 e0       	ldi	r31, 0x00	; 0
    313e:	cb 54       	subi	r28, 0x4B	; 75
    3140:	df 4f       	sbci	r29, 0xFF	; 255
    3142:	f9 83       	std	Y+1, r31	; 0x01
    3144:	e8 83       	st	Y, r30
    3146:	c5 5b       	subi	r28, 0xB5	; 181
    3148:	d0 40       	sbci	r29, 0x00	; 0
    314a:	cb 54       	subi	r28, 0x4B	; 75
    314c:	df 4f       	sbci	r29, 0xFF	; 255
    314e:	28 81       	ld	r18, Y
    3150:	39 81       	ldd	r19, Y+1	; 0x01
    3152:	c5 5b       	subi	r28, 0xB5	; 181
    3154:	d0 40       	sbci	r29, 0x00	; 0
    3156:	2c 34       	cpi	r18, 0x4C	; 76
    3158:	31 05       	cpc	r19, r1
    315a:	09 f4       	brne	.+2      	; 0x315e <main+0x2618>
    315c:	52 c0       	rjmp	.+164    	; 0x3202 <main+0x26bc>
    315e:	cb 54       	subi	r28, 0x4B	; 75
    3160:	df 4f       	sbci	r29, 0xFF	; 255
    3162:	88 81       	ld	r24, Y
    3164:	99 81       	ldd	r25, Y+1	; 0x01
    3166:	c5 5b       	subi	r28, 0xB5	; 181
    3168:	d0 40       	sbci	r29, 0x00	; 0
    316a:	8d 34       	cpi	r24, 0x4D	; 77
    316c:	91 05       	cpc	r25, r1
    316e:	b4 f4       	brge	.+44     	; 0x319c <main+0x2656>
    3170:	cb 54       	subi	r28, 0x4B	; 75
    3172:	df 4f       	sbci	r29, 0xFF	; 255
    3174:	e8 81       	ld	r30, Y
    3176:	f9 81       	ldd	r31, Y+1	; 0x01
    3178:	c5 5b       	subi	r28, 0xB5	; 181
    317a:	d0 40       	sbci	r29, 0x00	; 0
    317c:	e4 34       	cpi	r30, 0x44	; 68
    317e:	f1 05       	cpc	r31, r1
    3180:	09 f4       	brne	.+2      	; 0x3184 <main+0x263e>
    3182:	54 c0       	rjmp	.+168    	; 0x322c <main+0x26e6>
    3184:	cb 54       	subi	r28, 0x4B	; 75
    3186:	df 4f       	sbci	r29, 0xFF	; 255
    3188:	28 81       	ld	r18, Y
    318a:	39 81       	ldd	r19, Y+1	; 0x01
    318c:	c5 5b       	subi	r28, 0xB5	; 181
    318e:	d0 40       	sbci	r29, 0x00	; 0
    3190:	25 34       	cpi	r18, 0x45	; 69
    3192:	31 05       	cpc	r19, r1
    3194:	09 f4       	brne	.+2      	; 0x3198 <main+0x2652>
    3196:	5a c0       	rjmp	.+180    	; 0x324c <main+0x2706>
    3198:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
    319c:	cb 54       	subi	r28, 0x4B	; 75
    319e:	df 4f       	sbci	r29, 0xFF	; 255
    31a0:	88 81       	ld	r24, Y
    31a2:	99 81       	ldd	r25, Y+1	; 0x01
    31a4:	c5 5b       	subi	r28, 0xB5	; 181
    31a6:	d0 40       	sbci	r29, 0x00	; 0
    31a8:	82 35       	cpi	r24, 0x52	; 82
    31aa:	91 05       	cpc	r25, r1
    31ac:	19 f1       	breq	.+70     	; 0x31f4 <main+0x26ae>
    31ae:	cb 54       	subi	r28, 0x4B	; 75
    31b0:	df 4f       	sbci	r29, 0xFF	; 255
    31b2:	e8 81       	ld	r30, Y
    31b4:	f9 81       	ldd	r31, Y+1	; 0x01
    31b6:	c5 5b       	subi	r28, 0xB5	; 181
    31b8:	d0 40       	sbci	r29, 0x00	; 0
    31ba:	e5 35       	cpi	r30, 0x55	; 85
    31bc:	f1 05       	cpc	r31, r1
    31be:	39 f1       	breq	.+78     	; 0x320e <main+0x26c8>
    31c0:	cb 54       	subi	r28, 0x4B	; 75
    31c2:	df 4f       	sbci	r29, 0xFF	; 255
    31c4:	28 81       	ld	r18, Y
    31c6:	39 81       	ldd	r19, Y+1	; 0x01
    31c8:	c5 5b       	subi	r28, 0xB5	; 181
    31ca:	d0 40       	sbci	r29, 0x00	; 0
    31cc:	2d 34       	cpi	r18, 0x4D	; 77
    31ce:	31 05       	cpc	r19, r1
    31d0:	11 f0       	breq	.+4      	; 0x31d6 <main+0x2690>
    31d2:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					{
					case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str1); u8Cursor = 0; u8Icon = 2; u8TimeSetting = 0;   																						                   break;
    31d6:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    31da:	ce 01       	movw	r24, r28
    31dc:	42 96       	adiw	r24, 0x12	; 18
    31de:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    31e2:	10 92 97 01 	sts	0x0197, r1
    31e6:	82 e0       	ldi	r24, 0x02	; 2
    31e8:	80 93 8d 01 	sts	0x018D, r24
    31ec:	10 92 8f 01 	sts	0x018F, r1
    31f0:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'R' : u8Cursor = 2; u8TimeSetting = 0;                    																																			               break;
    31f4:	82 e0       	ldi	r24, 0x02	; 2
    31f6:	80 93 97 01 	sts	0x0197, r24
    31fa:	10 92 8f 01 	sts	0x018F, r1
    31fe:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'L' : u8Cursor = 0; u8TimeSetting = 0;                      																																		               break;
    3202:	10 92 97 01 	sts	0x0197, r1
    3206:	10 92 8f 01 	sts	0x018F, r1
    320a:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'U' : au8TimeSetting[MINUTES]++; if (au8TimeSetting[MINUTES] == 60) au8TimeSetting[MINUTES] = 0;      u8TimeSetting = 0;                            														       break;
    320e:	80 91 30 01 	lds	r24, 0x0130
    3212:	8f 5f       	subi	r24, 0xFF	; 255
    3214:	80 93 30 01 	sts	0x0130, r24
    3218:	80 91 30 01 	lds	r24, 0x0130
    321c:	8c 33       	cpi	r24, 0x3C	; 60
    321e:	11 f4       	brne	.+4      	; 0x3224 <main+0x26de>
    3220:	10 92 30 01 	sts	0x0130, r1
    3224:	10 92 8f 01 	sts	0x018F, r1
    3228:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'D' : if (au8TimeSetting[MINUTES] == 0) au8TimeSetting[MINUTES] = 60; au8TimeSetting[MINUTES]--;      u8TimeSetting = 0;                                              											   break;
    322c:	80 91 30 01 	lds	r24, 0x0130
    3230:	88 23       	and	r24, r24
    3232:	19 f4       	brne	.+6      	; 0x323a <main+0x26f4>
    3234:	8c e3       	ldi	r24, 0x3C	; 60
    3236:	80 93 30 01 	sts	0x0130, r24
    323a:	80 91 30 01 	lds	r24, 0x0130
    323e:	81 50       	subi	r24, 0x01	; 1
    3240:	80 93 30 01 	sts	0x0130, r24
    3244:	10 92 8f 01 	sts	0x018F, r1
    3248:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'E' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str1); u8TimeSetting = 0; u8Cursor = 0; u8Icon = 2; u8Hours = au8TimeSetting[HOURS]; u8Minutes = au8TimeSetting[MINUTES]; u8Seconds = au8TimeSetting[SECONDS]; break;
    324c:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    3250:	ce 01       	movw	r24, r28
    3252:	42 96       	adiw	r24, 0x12	; 18
    3254:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    3258:	10 92 8f 01 	sts	0x018F, r1
    325c:	10 92 97 01 	sts	0x0197, r1
    3260:	82 e0       	ldi	r24, 0x02	; 2
    3262:	80 93 8d 01 	sts	0x018D, r24
    3266:	80 91 2f 01 	lds	r24, 0x012F
    326a:	80 93 2a 01 	sts	0x012A, r24
    326e:	80 91 30 01 	lds	r24, 0x0130
    3272:	80 93 8a 01 	sts	0x018A, r24
    3276:	80 91 31 01 	lds	r24, 0x0131
    327a:	80 93 89 01 	sts	0x0189, r24
    327e:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					}
				}
			}
			else if (u8Cursor == 2)
    3282:	80 91 97 01 	lds	r24, 0x0197
    3286:	82 30       	cpi	r24, 0x02	; 2
    3288:	09 f0       	breq	.+2      	; 0x328c <main+0x2746>
    328a:	b1 c0       	rjmp	.+354    	; 0x33ee <main+0x28a8>
			{
				LCD_voidSetPosition(LCD_LINE1 ,LCD_COLUM10);
    328c:	80 e0       	ldi	r24, 0x00	; 0
    328e:	69 e0       	ldi	r22, 0x09	; 9
    3290:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				if(u8Key != NULL)
    3294:	80 91 8c 01 	lds	r24, 0x018C
    3298:	88 23       	and	r24, r24
    329a:	11 f4       	brne	.+4      	; 0x32a0 <main+0x275a>
    329c:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
				{
					switch(u8Key)
    32a0:	80 91 8c 01 	lds	r24, 0x018C
    32a4:	e8 2f       	mov	r30, r24
    32a6:	f0 e0       	ldi	r31, 0x00	; 0
    32a8:	cd 54       	subi	r28, 0x4D	; 77
    32aa:	df 4f       	sbci	r29, 0xFF	; 255
    32ac:	f9 83       	std	Y+1, r31	; 0x01
    32ae:	e8 83       	st	Y, r30
    32b0:	c3 5b       	subi	r28, 0xB3	; 179
    32b2:	d0 40       	sbci	r29, 0x00	; 0
    32b4:	cd 54       	subi	r28, 0x4D	; 77
    32b6:	df 4f       	sbci	r29, 0xFF	; 255
    32b8:	28 81       	ld	r18, Y
    32ba:	39 81       	ldd	r19, Y+1	; 0x01
    32bc:	c3 5b       	subi	r28, 0xB3	; 179
    32be:	d0 40       	sbci	r29, 0x00	; 0
    32c0:	2c 34       	cpi	r18, 0x4C	; 76
    32c2:	31 05       	cpc	r19, r1
    32c4:	09 f4       	brne	.+2      	; 0x32c8 <main+0x2782>
    32c6:	52 c0       	rjmp	.+164    	; 0x336c <main+0x2826>
    32c8:	cd 54       	subi	r28, 0x4D	; 77
    32ca:	df 4f       	sbci	r29, 0xFF	; 255
    32cc:	88 81       	ld	r24, Y
    32ce:	99 81       	ldd	r25, Y+1	; 0x01
    32d0:	c3 5b       	subi	r28, 0xB3	; 179
    32d2:	d0 40       	sbci	r29, 0x00	; 0
    32d4:	8d 34       	cpi	r24, 0x4D	; 77
    32d6:	91 05       	cpc	r25, r1
    32d8:	b4 f4       	brge	.+44     	; 0x3306 <main+0x27c0>
    32da:	cd 54       	subi	r28, 0x4D	; 77
    32dc:	df 4f       	sbci	r29, 0xFF	; 255
    32de:	e8 81       	ld	r30, Y
    32e0:	f9 81       	ldd	r31, Y+1	; 0x01
    32e2:	c3 5b       	subi	r28, 0xB3	; 179
    32e4:	d0 40       	sbci	r29, 0x00	; 0
    32e6:	e4 34       	cpi	r30, 0x44	; 68
    32e8:	f1 05       	cpc	r31, r1
    32ea:	09 f4       	brne	.+2      	; 0x32ee <main+0x27a8>
    32ec:	55 c0       	rjmp	.+170    	; 0x3398 <main+0x2852>
    32ee:	cd 54       	subi	r28, 0x4D	; 77
    32f0:	df 4f       	sbci	r29, 0xFF	; 255
    32f2:	28 81       	ld	r18, Y
    32f4:	39 81       	ldd	r19, Y+1	; 0x01
    32f6:	c3 5b       	subi	r28, 0xB3	; 179
    32f8:	d0 40       	sbci	r29, 0x00	; 0
    32fa:	25 34       	cpi	r18, 0x45	; 69
    32fc:	31 05       	cpc	r19, r1
    32fe:	09 f4       	brne	.+2      	; 0x3302 <main+0x27bc>
    3300:	5b c0       	rjmp	.+182    	; 0x33b8 <main+0x2872>
    3302:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
    3306:	cd 54       	subi	r28, 0x4D	; 77
    3308:	df 4f       	sbci	r29, 0xFF	; 255
    330a:	88 81       	ld	r24, Y
    330c:	99 81       	ldd	r25, Y+1	; 0x01
    330e:	c3 5b       	subi	r28, 0xB3	; 179
    3310:	d0 40       	sbci	r29, 0x00	; 0
    3312:	82 35       	cpi	r24, 0x52	; 82
    3314:	91 05       	cpc	r25, r1
    3316:	19 f1       	breq	.+70     	; 0x335e <main+0x2818>
    3318:	cd 54       	subi	r28, 0x4D	; 77
    331a:	df 4f       	sbci	r29, 0xFF	; 255
    331c:	e8 81       	ld	r30, Y
    331e:	f9 81       	ldd	r31, Y+1	; 0x01
    3320:	c3 5b       	subi	r28, 0xB3	; 179
    3322:	d0 40       	sbci	r29, 0x00	; 0
    3324:	e5 35       	cpi	r30, 0x55	; 85
    3326:	f1 05       	cpc	r31, r1
    3328:	41 f1       	breq	.+80     	; 0x337a <main+0x2834>
    332a:	cd 54       	subi	r28, 0x4D	; 77
    332c:	df 4f       	sbci	r29, 0xFF	; 255
    332e:	28 81       	ld	r18, Y
    3330:	39 81       	ldd	r19, Y+1	; 0x01
    3332:	c3 5b       	subi	r28, 0xB3	; 179
    3334:	d0 40       	sbci	r29, 0x00	; 0
    3336:	2d 34       	cpi	r18, 0x4D	; 77
    3338:	31 05       	cpc	r19, r1
    333a:	11 f0       	breq	.+4      	; 0x3340 <main+0x27fa>
    333c:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					{
					case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str1); u8Cursor = 0; u8Icon = 2; u8TimeSetting = 0;																							   				   break;
    3340:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    3344:	ce 01       	movw	r24, r28
    3346:	42 96       	adiw	r24, 0x12	; 18
    3348:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    334c:	10 92 97 01 	sts	0x0197, r1
    3350:	82 e0       	ldi	r24, 0x02	; 2
    3352:	80 93 8d 01 	sts	0x018D, r24
    3356:	10 92 8f 01 	sts	0x018F, r1
    335a:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'R' : u8Cursor = 3; u8TimeSetting = 0;                       																	                                                              	   				   break;
    335e:	83 e0       	ldi	r24, 0x03	; 3
    3360:	80 93 97 01 	sts	0x0197, r24
    3364:	10 92 8f 01 	sts	0x018F, r1
    3368:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'L' : u8Cursor = 1; u8TimeSetting = 0;                      																		                                                                			   break;
    336c:	81 e0       	ldi	r24, 0x01	; 1
    336e:	80 93 97 01 	sts	0x0197, r24
    3372:	10 92 8f 01 	sts	0x018F, r1
    3376:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'U' : au8TimeSetting[SECONDS]++; if (au8TimeSetting[SECONDS] == 60 ) au8TimeSetting[SECONDS] = 0 ; u8TimeSetting = 0;                              															   break;
    337a:	80 91 31 01 	lds	r24, 0x0131
    337e:	8f 5f       	subi	r24, 0xFF	; 255
    3380:	80 93 31 01 	sts	0x0131, r24
    3384:	80 91 31 01 	lds	r24, 0x0131
    3388:	8c 33       	cpi	r24, 0x3C	; 60
    338a:	11 f4       	brne	.+4      	; 0x3390 <main+0x284a>
    338c:	10 92 31 01 	sts	0x0131, r1
    3390:	10 92 8f 01 	sts	0x018F, r1
    3394:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'D' : if (au8TimeSetting[SECONDS] == 0) au8TimeSetting[SECONDS] = 60;  au8TimeSetting[SECONDS]--;  u8TimeSetting = 0;                                           												   break;
    3398:	80 91 31 01 	lds	r24, 0x0131
    339c:	88 23       	and	r24, r24
    339e:	19 f4       	brne	.+6      	; 0x33a6 <main+0x2860>
    33a0:	8c e3       	ldi	r24, 0x3C	; 60
    33a2:	80 93 31 01 	sts	0x0131, r24
    33a6:	80 91 31 01 	lds	r24, 0x0131
    33aa:	81 50       	subi	r24, 0x01	; 1
    33ac:	80 93 31 01 	sts	0x0131, r24
    33b0:	10 92 8f 01 	sts	0x018F, r1
    33b4:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'E' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str1); u8TimeSetting = 0; u8Cursor = 0; u8Icon = 2; u8Hours = au8TimeSetting[HOURS]; u8Minutes = au8TimeSetting[MINUTES]; u8Seconds = au8TimeSetting[SECONDS]; break;
    33b8:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    33bc:	ce 01       	movw	r24, r28
    33be:	42 96       	adiw	r24, 0x12	; 18
    33c0:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    33c4:	10 92 8f 01 	sts	0x018F, r1
    33c8:	10 92 97 01 	sts	0x0197, r1
    33cc:	82 e0       	ldi	r24, 0x02	; 2
    33ce:	80 93 8d 01 	sts	0x018D, r24
    33d2:	80 91 2f 01 	lds	r24, 0x012F
    33d6:	80 93 2a 01 	sts	0x012A, r24
    33da:	80 91 30 01 	lds	r24, 0x0130
    33de:	80 93 8a 01 	sts	0x018A, r24
    33e2:	80 91 31 01 	lds	r24, 0x0131
    33e6:	80 93 89 01 	sts	0x0189, r24
    33ea:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					}
				}
			}
			else if(u8Cursor == 3)
    33ee:	80 91 97 01 	lds	r24, 0x0197
    33f2:	83 30       	cpi	r24, 0x03	; 3
    33f4:	11 f0       	breq	.+4      	; 0x33fa <main+0x28b4>
    33f6:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
			{
				LCD_voidSetPosition(LCD_LINE1 ,LCD_COLUM13);
    33fa:	80 e0       	ldi	r24, 0x00	; 0
    33fc:	6c e0       	ldi	r22, 0x0C	; 12
    33fe:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
				if(u8Key != NULL)
    3402:	80 91 8c 01 	lds	r24, 0x018C
    3406:	88 23       	and	r24, r24
    3408:	11 f4       	brne	.+4      	; 0x340e <main+0x28c8>
    340a:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
				{
					switch(u8Key)
    340e:	80 91 8c 01 	lds	r24, 0x018C
    3412:	e8 2f       	mov	r30, r24
    3414:	f0 e0       	ldi	r31, 0x00	; 0
    3416:	cf 54       	subi	r28, 0x4F	; 79
    3418:	df 4f       	sbci	r29, 0xFF	; 255
    341a:	f9 83       	std	Y+1, r31	; 0x01
    341c:	e8 83       	st	Y, r30
    341e:	c1 5b       	subi	r28, 0xB1	; 177
    3420:	d0 40       	sbci	r29, 0x00	; 0
    3422:	cf 54       	subi	r28, 0x4F	; 79
    3424:	df 4f       	sbci	r29, 0xFF	; 255
    3426:	28 81       	ld	r18, Y
    3428:	39 81       	ldd	r19, Y+1	; 0x01
    342a:	c1 5b       	subi	r28, 0xB1	; 177
    342c:	d0 40       	sbci	r29, 0x00	; 0
    342e:	2c 34       	cpi	r18, 0x4C	; 76
    3430:	31 05       	cpc	r19, r1
    3432:	09 f4       	brne	.+2      	; 0x3436 <main+0x28f0>
    3434:	51 c0       	rjmp	.+162    	; 0x34d8 <main+0x2992>
    3436:	cf 54       	subi	r28, 0x4F	; 79
    3438:	df 4f       	sbci	r29, 0xFF	; 255
    343a:	88 81       	ld	r24, Y
    343c:	99 81       	ldd	r25, Y+1	; 0x01
    343e:	c1 5b       	subi	r28, 0xB1	; 177
    3440:	d0 40       	sbci	r29, 0x00	; 0
    3442:	8d 34       	cpi	r24, 0x4D	; 77
    3444:	91 05       	cpc	r25, r1
    3446:	b4 f4       	brge	.+44     	; 0x3474 <main+0x292e>
    3448:	cf 54       	subi	r28, 0x4F	; 79
    344a:	df 4f       	sbci	r29, 0xFF	; 255
    344c:	e8 81       	ld	r30, Y
    344e:	f9 81       	ldd	r31, Y+1	; 0x01
    3450:	c1 5b       	subi	r28, 0xB1	; 177
    3452:	d0 40       	sbci	r29, 0x00	; 0
    3454:	e4 34       	cpi	r30, 0x44	; 68
    3456:	f1 05       	cpc	r31, r1
    3458:	09 f4       	brne	.+2      	; 0x345c <main+0x2916>
    345a:	4c c0       	rjmp	.+152    	; 0x34f4 <main+0x29ae>
    345c:	cf 54       	subi	r28, 0x4F	; 79
    345e:	df 4f       	sbci	r29, 0xFF	; 255
    3460:	28 81       	ld	r18, Y
    3462:	39 81       	ldd	r19, Y+1	; 0x01
    3464:	c1 5b       	subi	r28, 0xB1	; 177
    3466:	d0 40       	sbci	r29, 0x00	; 0
    3468:	25 34       	cpi	r18, 0x45	; 69
    346a:	31 05       	cpc	r19, r1
    346c:	09 f4       	brne	.+2      	; 0x3470 <main+0x292a>
    346e:	48 c0       	rjmp	.+144    	; 0x3500 <main+0x29ba>
    3470:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
    3474:	cf 54       	subi	r28, 0x4F	; 79
    3476:	df 4f       	sbci	r29, 0xFF	; 255
    3478:	88 81       	ld	r24, Y
    347a:	99 81       	ldd	r25, Y+1	; 0x01
    347c:	c1 5b       	subi	r28, 0xB1	; 177
    347e:	d0 40       	sbci	r29, 0x00	; 0
    3480:	82 35       	cpi	r24, 0x52	; 82
    3482:	91 05       	cpc	r25, r1
    3484:	19 f1       	breq	.+70     	; 0x34cc <main+0x2986>
    3486:	cf 54       	subi	r28, 0x4F	; 79
    3488:	df 4f       	sbci	r29, 0xFF	; 255
    348a:	e8 81       	ld	r30, Y
    348c:	f9 81       	ldd	r31, Y+1	; 0x01
    348e:	c1 5b       	subi	r28, 0xB1	; 177
    3490:	d0 40       	sbci	r29, 0x00	; 0
    3492:	e5 35       	cpi	r30, 0x55	; 85
    3494:	f1 05       	cpc	r31, r1
    3496:	39 f1       	breq	.+78     	; 0x34e6 <main+0x29a0>
    3498:	cf 54       	subi	r28, 0x4F	; 79
    349a:	df 4f       	sbci	r29, 0xFF	; 255
    349c:	28 81       	ld	r18, Y
    349e:	39 81       	ldd	r19, Y+1	; 0x01
    34a0:	c1 5b       	subi	r28, 0xB1	; 177
    34a2:	d0 40       	sbci	r29, 0x00	; 0
    34a4:	2d 34       	cpi	r18, 0x4D	; 77
    34a6:	31 05       	cpc	r19, r1
    34a8:	11 f0       	breq	.+4      	; 0x34ae <main+0x2968>
    34aa:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					{
					case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str1); u8Cursor = 0;  u8Icon = 2; u8TimeSetting = 0;																						                   break;
    34ae:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    34b2:	ce 01       	movw	r24, r28
    34b4:	42 96       	adiw	r24, 0x12	; 18
    34b6:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    34ba:	10 92 97 01 	sts	0x0197, r1
    34be:	82 e0       	ldi	r24, 0x02	; 2
    34c0:	80 93 8d 01 	sts	0x018D, r24
    34c4:	10 92 8f 01 	sts	0x018F, r1
    34c8:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'R' : u8Cursor = 0; u8TimeSetting = 0;                     																																		               break;
    34cc:	10 92 97 01 	sts	0x0197, r1
    34d0:	10 92 8f 01 	sts	0x018F, r1
    34d4:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'L' : u8Cursor = 2; u8TimeSetting = 0;                      																																		               break;
    34d8:	82 e0       	ldi	r24, 0x02	; 2
    34da:	80 93 97 01 	sts	0x0197, r24
    34de:	10 92 8f 01 	sts	0x018F, r1
    34e2:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'U' : u8TimeForm =1;u8TimeSetting = 0;                       																																		               break;
    34e6:	81 e0       	ldi	r24, 0x01	; 1
    34e8:	80 93 8e 01 	sts	0x018E, r24
    34ec:	10 92 8f 01 	sts	0x018F, r1
    34f0:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'D' : u8TimeForm =0;u8TimeSetting = 0;                      																																	                   break;
    34f4:	10 92 8e 01 	sts	0x018E, r1
    34f8:	10 92 8f 01 	sts	0x018F, r1
    34fc:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					case 'E' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str1); u8TimeSetting = 0; u8Cursor = 0; u8Icon = 2; u8Hours = au8TimeSetting[HOURS]; u8Minutes = au8TimeSetting[MINUTES]; u8Seconds = au8TimeSetting[SECONDS]; break;
    3500:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    3504:	ce 01       	movw	r24, r28
    3506:	42 96       	adiw	r24, 0x12	; 18
    3508:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    350c:	10 92 8f 01 	sts	0x018F, r1
    3510:	10 92 97 01 	sts	0x0197, r1
    3514:	82 e0       	ldi	r24, 0x02	; 2
    3516:	80 93 8d 01 	sts	0x018D, r24
    351a:	80 91 2f 01 	lds	r24, 0x012F
    351e:	80 93 2a 01 	sts	0x012A, r24
    3522:	80 91 30 01 	lds	r24, 0x0130
    3526:	80 93 8a 01 	sts	0x018A, r24
    352a:	80 91 31 01 	lds	r24, 0x0131
    352e:	80 93 89 01 	sts	0x0189, r24
    3532:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
				}
			}
		}
//******************************************************************************************************************************************************************************************************************************************************
		/* Timer Show and Setting */
		else if (u8Icon == 15)
    3536:	80 91 8d 01 	lds	r24, 0x018D
    353a:	8f 30       	cpi	r24, 0x0F	; 15
    353c:	11 f0       	breq	.+4      	; 0x3542 <main+0x29fc>
    353e:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
		{
			if (u8StartTimer == 1) LCD_voidDisableCursor();
    3542:	80 91 99 01 	lds	r24, 0x0199
    3546:	81 30       	cpi	r24, 0x01	; 1
    3548:	19 f4       	brne	.+6      	; 0x3550 <main+0x2a0a>
    354a:	0e 94 27 29 	call	0x524e	; 0x524e <LCD_voidDisableCursor>
    354e:	02 c0       	rjmp	.+4      	; 0x3554 <main+0x2a0e>
			else LCD_voidEnableCursor();
    3550:	0e 94 af 29 	call	0x535e	; 0x535e <LCD_voidEnableCursor>
			if(u8TimerSetting == 0)
    3554:	80 91 93 01 	lds	r24, 0x0193
    3558:	88 23       	and	r24, r24
    355a:	09 f0       	breq	.+2      	; 0x355e <main+0x2a18>
    355c:	86 c0       	rjmp	.+268    	; 0x366a <main+0x2b24>
			{
				if(au8Timer[HOURS] < 10)
    355e:	80 91 9a 01 	lds	r24, 0x019A
    3562:	8a 30       	cpi	r24, 0x0A	; 10
    3564:	b0 f4       	brcc	.+44     	; 0x3592 <main+0x2a4c>
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM5);
    3566:	80 e0       	ldi	r24, 0x00	; 0
    3568:	64 e0       	ldi	r22, 0x04	; 4
    356a:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendData('0');
    356e:	80 e3       	ldi	r24, 0x30	; 48
    3570:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
					LCD_voidSendInteger(au8Timer[HOURS]);
    3574:	80 91 9a 01 	lds	r24, 0x019A
    3578:	88 2f       	mov	r24, r24
    357a:	90 e0       	ldi	r25, 0x00	; 0
    357c:	a0 e0       	ldi	r26, 0x00	; 0
    357e:	b0 e0       	ldi	r27, 0x00	; 0
    3580:	bc 01       	movw	r22, r24
    3582:	cd 01       	movw	r24, r26
    3584:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
					LCD_voidSendString(":");
    3588:	85 e6       	ldi	r24, 0x65	; 101
    358a:	90 e0       	ldi	r25, 0x00	; 0
    358c:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    3590:	12 c0       	rjmp	.+36     	; 0x35b6 <main+0x2a70>
				}
				else
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM5);
    3592:	80 e0       	ldi	r24, 0x00	; 0
    3594:	64 e0       	ldi	r22, 0x04	; 4
    3596:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendInteger(au8Timer[HOURS]);
    359a:	80 91 9a 01 	lds	r24, 0x019A
    359e:	88 2f       	mov	r24, r24
    35a0:	90 e0       	ldi	r25, 0x00	; 0
    35a2:	a0 e0       	ldi	r26, 0x00	; 0
    35a4:	b0 e0       	ldi	r27, 0x00	; 0
    35a6:	bc 01       	movw	r22, r24
    35a8:	cd 01       	movw	r24, r26
    35aa:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
					LCD_voidSendString(":");
    35ae:	85 e6       	ldi	r24, 0x65	; 101
    35b0:	90 e0       	ldi	r25, 0x00	; 0
    35b2:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
				}

				if(au8Timer[MINUTES] < 10)
    35b6:	80 91 9b 01 	lds	r24, 0x019B
    35ba:	8a 30       	cpi	r24, 0x0A	; 10
    35bc:	b0 f4       	brcc	.+44     	; 0x35ea <main+0x2aa4>
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM8);
    35be:	80 e0       	ldi	r24, 0x00	; 0
    35c0:	67 e0       	ldi	r22, 0x07	; 7
    35c2:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendData('0');
    35c6:	80 e3       	ldi	r24, 0x30	; 48
    35c8:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
					LCD_voidSendInteger(au8Timer[MINUTES]);
    35cc:	80 91 9b 01 	lds	r24, 0x019B
    35d0:	88 2f       	mov	r24, r24
    35d2:	90 e0       	ldi	r25, 0x00	; 0
    35d4:	a0 e0       	ldi	r26, 0x00	; 0
    35d6:	b0 e0       	ldi	r27, 0x00	; 0
    35d8:	bc 01       	movw	r22, r24
    35da:	cd 01       	movw	r24, r26
    35dc:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
					LCD_voidSendString(":");
    35e0:	85 e6       	ldi	r24, 0x65	; 101
    35e2:	90 e0       	ldi	r25, 0x00	; 0
    35e4:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    35e8:	12 c0       	rjmp	.+36     	; 0x360e <main+0x2ac8>
				}
				else
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM8);
    35ea:	80 e0       	ldi	r24, 0x00	; 0
    35ec:	67 e0       	ldi	r22, 0x07	; 7
    35ee:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendInteger(au8Timer[MINUTES]);
    35f2:	80 91 9b 01 	lds	r24, 0x019B
    35f6:	88 2f       	mov	r24, r24
    35f8:	90 e0       	ldi	r25, 0x00	; 0
    35fa:	a0 e0       	ldi	r26, 0x00	; 0
    35fc:	b0 e0       	ldi	r27, 0x00	; 0
    35fe:	bc 01       	movw	r22, r24
    3600:	cd 01       	movw	r24, r26
    3602:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
					LCD_voidSendString(":");
    3606:	85 e6       	ldi	r24, 0x65	; 101
    3608:	90 e0       	ldi	r25, 0x00	; 0
    360a:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
				}

				if(au8Timer[SECONDS] < 10)
    360e:	80 91 9c 01 	lds	r24, 0x019C
    3612:	8a 30       	cpi	r24, 0x0A	; 10
    3614:	90 f4       	brcc	.+36     	; 0x363a <main+0x2af4>
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM11);
    3616:	80 e0       	ldi	r24, 0x00	; 0
    3618:	6a e0       	ldi	r22, 0x0A	; 10
    361a:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendData('0');
    361e:	80 e3       	ldi	r24, 0x30	; 48
    3620:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
					LCD_voidSendInteger(au8Timer[2]);
    3624:	80 91 9c 01 	lds	r24, 0x019C
    3628:	88 2f       	mov	r24, r24
    362a:	90 e0       	ldi	r25, 0x00	; 0
    362c:	a0 e0       	ldi	r26, 0x00	; 0
    362e:	b0 e0       	ldi	r27, 0x00	; 0
    3630:	bc 01       	movw	r22, r24
    3632:	cd 01       	movw	r24, r26
    3634:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
    3638:	0e c0       	rjmp	.+28     	; 0x3656 <main+0x2b10>
				}
				else
				{
					LCD_voidSetPosition(LCD_LINE1 , LCD_COLUM11);
    363a:	80 e0       	ldi	r24, 0x00	; 0
    363c:	6a e0       	ldi	r22, 0x0A	; 10
    363e:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					LCD_voidSendInteger(au8Timer[SECONDS]);
    3642:	80 91 9c 01 	lds	r24, 0x019C
    3646:	88 2f       	mov	r24, r24
    3648:	90 e0       	ldi	r25, 0x00	; 0
    364a:	a0 e0       	ldi	r26, 0x00	; 0
    364c:	b0 e0       	ldi	r27, 0x00	; 0
    364e:	bc 01       	movw	r22, r24
    3650:	cd 01       	movw	r24, r26
    3652:	0e 94 cb 27 	call	0x4f96	; 0x4f96 <LCD_voidSendInteger>
				}

				if (u8StartTimer == 1) u8TimerSetting = 0;
    3656:	80 91 99 01 	lds	r24, 0x0199
    365a:	81 30       	cpi	r24, 0x01	; 1
    365c:	19 f4       	brne	.+6      	; 0x3664 <main+0x2b1e>
    365e:	10 92 93 01 	sts	0x0193, r1
    3662:	03 c0       	rjmp	.+6      	; 0x366a <main+0x2b24>
				else u8TimerSetting = 1;
    3664:	81 e0       	ldi	r24, 0x01	; 1
    3666:	80 93 93 01 	sts	0x0193, r24
			}

			if(u8StartTimer == 0)
    366a:	80 91 99 01 	lds	r24, 0x0199
    366e:	88 23       	and	r24, r24
    3670:	09 f0       	breq	.+2      	; 0x3674 <main+0x2b2e>
    3672:	e8 c1       	rjmp	.+976    	; 0x3a44 <main+0x2efe>
			{
				if (u8Cursor == 0)
    3674:	80 91 97 01 	lds	r24, 0x0197
    3678:	88 23       	and	r24, r24
    367a:	09 f0       	breq	.+2      	; 0x367e <main+0x2b38>
    367c:	9e c0       	rjmp	.+316    	; 0x37ba <main+0x2c74>
				{
					LCD_voidSetPosition(LCD_LINE1 ,LCD_COLUM6);
    367e:	80 e0       	ldi	r24, 0x00	; 0
    3680:	65 e0       	ldi	r22, 0x05	; 5
    3682:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					if(u8Key != NULL)
    3686:	80 91 8c 01 	lds	r24, 0x018C
    368a:	88 23       	and	r24, r24
    368c:	11 f4       	brne	.+4      	; 0x3692 <main+0x2b4c>
    368e:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					{
						switch(u8Key)
    3692:	80 91 8c 01 	lds	r24, 0x018C
    3696:	e8 2f       	mov	r30, r24
    3698:	f0 e0       	ldi	r31, 0x00	; 0
    369a:	c1 55       	subi	r28, 0x51	; 81
    369c:	df 4f       	sbci	r29, 0xFF	; 255
    369e:	f9 83       	std	Y+1, r31	; 0x01
    36a0:	e8 83       	st	Y, r30
    36a2:	cf 5a       	subi	r28, 0xAF	; 175
    36a4:	d0 40       	sbci	r29, 0x00	; 0
    36a6:	c1 55       	subi	r28, 0x51	; 81
    36a8:	df 4f       	sbci	r29, 0xFF	; 255
    36aa:	28 81       	ld	r18, Y
    36ac:	39 81       	ldd	r19, Y+1	; 0x01
    36ae:	cf 5a       	subi	r28, 0xAF	; 175
    36b0:	d0 40       	sbci	r29, 0x00	; 0
    36b2:	2c 34       	cpi	r18, 0x4C	; 76
    36b4:	31 05       	cpc	r19, r1
    36b6:	09 f4       	brne	.+2      	; 0x36ba <main+0x2b74>
    36b8:	53 c0       	rjmp	.+166    	; 0x3760 <main+0x2c1a>
    36ba:	c1 55       	subi	r28, 0x51	; 81
    36bc:	df 4f       	sbci	r29, 0xFF	; 255
    36be:	88 81       	ld	r24, Y
    36c0:	99 81       	ldd	r25, Y+1	; 0x01
    36c2:	cf 5a       	subi	r28, 0xAF	; 175
    36c4:	d0 40       	sbci	r29, 0x00	; 0
    36c6:	8d 34       	cpi	r24, 0x4D	; 77
    36c8:	91 05       	cpc	r25, r1
    36ca:	b4 f4       	brge	.+44     	; 0x36f8 <main+0x2bb2>
    36cc:	c1 55       	subi	r28, 0x51	; 81
    36ce:	df 4f       	sbci	r29, 0xFF	; 255
    36d0:	e8 81       	ld	r30, Y
    36d2:	f9 81       	ldd	r31, Y+1	; 0x01
    36d4:	cf 5a       	subi	r28, 0xAF	; 175
    36d6:	d0 40       	sbci	r29, 0x00	; 0
    36d8:	e4 34       	cpi	r30, 0x44	; 68
    36da:	f1 05       	cpc	r31, r1
    36dc:	09 f4       	brne	.+2      	; 0x36e0 <main+0x2b9a>
    36de:	56 c0       	rjmp	.+172    	; 0x378c <main+0x2c46>
    36e0:	c1 55       	subi	r28, 0x51	; 81
    36e2:	df 4f       	sbci	r29, 0xFF	; 255
    36e4:	28 81       	ld	r18, Y
    36e6:	39 81       	ldd	r19, Y+1	; 0x01
    36e8:	cf 5a       	subi	r28, 0xAF	; 175
    36ea:	d0 40       	sbci	r29, 0x00	; 0
    36ec:	25 34       	cpi	r18, 0x45	; 69
    36ee:	31 05       	cpc	r19, r1
    36f0:	09 f4       	brne	.+2      	; 0x36f4 <main+0x2bae>
    36f2:	5c c0       	rjmp	.+184    	; 0x37ac <main+0x2c66>
    36f4:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
    36f8:	c1 55       	subi	r28, 0x51	; 81
    36fa:	df 4f       	sbci	r29, 0xFF	; 255
    36fc:	88 81       	ld	r24, Y
    36fe:	99 81       	ldd	r25, Y+1	; 0x01
    3700:	cf 5a       	subi	r28, 0xAF	; 175
    3702:	d0 40       	sbci	r29, 0x00	; 0
    3704:	82 35       	cpi	r24, 0x52	; 82
    3706:	91 05       	cpc	r25, r1
    3708:	21 f1       	breq	.+72     	; 0x3752 <main+0x2c0c>
    370a:	c1 55       	subi	r28, 0x51	; 81
    370c:	df 4f       	sbci	r29, 0xFF	; 255
    370e:	e8 81       	ld	r30, Y
    3710:	f9 81       	ldd	r31, Y+1	; 0x01
    3712:	cf 5a       	subi	r28, 0xAF	; 175
    3714:	d0 40       	sbci	r29, 0x00	; 0
    3716:	e5 35       	cpi	r30, 0x55	; 85
    3718:	f1 05       	cpc	r31, r1
    371a:	49 f1       	breq	.+82     	; 0x376e <main+0x2c28>
    371c:	c1 55       	subi	r28, 0x51	; 81
    371e:	df 4f       	sbci	r29, 0xFF	; 255
    3720:	28 81       	ld	r18, Y
    3722:	39 81       	ldd	r19, Y+1	; 0x01
    3724:	cf 5a       	subi	r28, 0xAF	; 175
    3726:	d0 40       	sbci	r29, 0x00	; 0
    3728:	2d 34       	cpi	r18, 0x4D	; 77
    372a:	31 05       	cpc	r19, r1
    372c:	11 f0       	breq	.+4      	; 0x3732 <main+0x2bec>
    372e:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						{
						case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str8); u8Cursor = 0; u8Icon = 9; u8TimerSetting = 0; break;
    3732:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    3736:	ce 01       	movw	r24, r28
    3738:	87 57       	subi	r24, 0x77	; 119
    373a:	9f 4f       	sbci	r25, 0xFF	; 255
    373c:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    3740:	10 92 97 01 	sts	0x0197, r1
    3744:	89 e0       	ldi	r24, 0x09	; 9
    3746:	80 93 8d 01 	sts	0x018D, r24
    374a:	10 92 93 01 	sts	0x0193, r1
    374e:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						case 'R' : u8Cursor = 1; u8TimerSetting = 0;                               									 break;
    3752:	81 e0       	ldi	r24, 0x01	; 1
    3754:	80 93 97 01 	sts	0x0197, r24
    3758:	10 92 93 01 	sts	0x0193, r1
    375c:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						case 'L' : u8Cursor = 2; u8TimerSetting = 0;                              									 break;
    3760:	82 e0       	ldi	r24, 0x02	; 2
    3762:	80 93 97 01 	sts	0x0197, r24
    3766:	10 92 93 01 	sts	0x0193, r1
    376a:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						case 'U' : au8Timer[HOURS]++; if (au8Timer[HOURS] == 25) au8Timer[HOURS] = 0;  u8TimerSetting = 0;           break;
    376e:	80 91 9a 01 	lds	r24, 0x019A
    3772:	8f 5f       	subi	r24, 0xFF	; 255
    3774:	80 93 9a 01 	sts	0x019A, r24
    3778:	80 91 9a 01 	lds	r24, 0x019A
    377c:	89 31       	cpi	r24, 0x19	; 25
    377e:	11 f4       	brne	.+4      	; 0x3784 <main+0x2c3e>
    3780:	10 92 9a 01 	sts	0x019A, r1
    3784:	10 92 93 01 	sts	0x0193, r1
    3788:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						case 'D' : if (au8Timer[HOURS] == 0) au8Timer[HOURS] = 25;  au8Timer[HOURS]--; u8TimerSetting = 0;           break;
    378c:	80 91 9a 01 	lds	r24, 0x019A
    3790:	88 23       	and	r24, r24
    3792:	19 f4       	brne	.+6      	; 0x379a <main+0x2c54>
    3794:	89 e1       	ldi	r24, 0x19	; 25
    3796:	80 93 9a 01 	sts	0x019A, r24
    379a:	80 91 9a 01 	lds	r24, 0x019A
    379e:	81 50       	subi	r24, 0x01	; 1
    37a0:	80 93 9a 01 	sts	0x019A, r24
    37a4:	10 92 93 01 	sts	0x0193, r1
    37a8:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						case 'E' : u8StartTimer = 1;                                       u8TimerSetting = 0;                       break;
    37ac:	81 e0       	ldi	r24, 0x01	; 1
    37ae:	80 93 99 01 	sts	0x0199, r24
    37b2:	10 92 93 01 	sts	0x0193, r1
    37b6:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						}
					}
				}
				else if(u8Cursor == 1)
    37ba:	80 91 97 01 	lds	r24, 0x0197
    37be:	81 30       	cpi	r24, 0x01	; 1
    37c0:	09 f0       	breq	.+2      	; 0x37c4 <main+0x2c7e>
    37c2:	9d c0       	rjmp	.+314    	; 0x38fe <main+0x2db8>
				{
					LCD_voidSetPosition(LCD_LINE1 ,LCD_COLUM9);
    37c4:	80 e0       	ldi	r24, 0x00	; 0
    37c6:	68 e0       	ldi	r22, 0x08	; 8
    37c8:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					if(u8Key != NULL)
    37cc:	80 91 8c 01 	lds	r24, 0x018C
    37d0:	88 23       	and	r24, r24
    37d2:	11 f4       	brne	.+4      	; 0x37d8 <main+0x2c92>
    37d4:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					{
						switch(u8Key)
    37d8:	80 91 8c 01 	lds	r24, 0x018C
    37dc:	e8 2f       	mov	r30, r24
    37de:	f0 e0       	ldi	r31, 0x00	; 0
    37e0:	c3 55       	subi	r28, 0x53	; 83
    37e2:	df 4f       	sbci	r29, 0xFF	; 255
    37e4:	f9 83       	std	Y+1, r31	; 0x01
    37e6:	e8 83       	st	Y, r30
    37e8:	cd 5a       	subi	r28, 0xAD	; 173
    37ea:	d0 40       	sbci	r29, 0x00	; 0
    37ec:	c3 55       	subi	r28, 0x53	; 83
    37ee:	df 4f       	sbci	r29, 0xFF	; 255
    37f0:	28 81       	ld	r18, Y
    37f2:	39 81       	ldd	r19, Y+1	; 0x01
    37f4:	cd 5a       	subi	r28, 0xAD	; 173
    37f6:	d0 40       	sbci	r29, 0x00	; 0
    37f8:	2c 34       	cpi	r18, 0x4C	; 76
    37fa:	31 05       	cpc	r19, r1
    37fc:	09 f4       	brne	.+2      	; 0x3800 <main+0x2cba>
    37fe:	53 c0       	rjmp	.+166    	; 0x38a6 <main+0x2d60>
    3800:	c3 55       	subi	r28, 0x53	; 83
    3802:	df 4f       	sbci	r29, 0xFF	; 255
    3804:	88 81       	ld	r24, Y
    3806:	99 81       	ldd	r25, Y+1	; 0x01
    3808:	cd 5a       	subi	r28, 0xAD	; 173
    380a:	d0 40       	sbci	r29, 0x00	; 0
    380c:	8d 34       	cpi	r24, 0x4D	; 77
    380e:	91 05       	cpc	r25, r1
    3810:	b4 f4       	brge	.+44     	; 0x383e <main+0x2cf8>
    3812:	c3 55       	subi	r28, 0x53	; 83
    3814:	df 4f       	sbci	r29, 0xFF	; 255
    3816:	e8 81       	ld	r30, Y
    3818:	f9 81       	ldd	r31, Y+1	; 0x01
    381a:	cd 5a       	subi	r28, 0xAD	; 173
    381c:	d0 40       	sbci	r29, 0x00	; 0
    381e:	e4 34       	cpi	r30, 0x44	; 68
    3820:	f1 05       	cpc	r31, r1
    3822:	09 f4       	brne	.+2      	; 0x3826 <main+0x2ce0>
    3824:	55 c0       	rjmp	.+170    	; 0x38d0 <main+0x2d8a>
    3826:	c3 55       	subi	r28, 0x53	; 83
    3828:	df 4f       	sbci	r29, 0xFF	; 255
    382a:	28 81       	ld	r18, Y
    382c:	39 81       	ldd	r19, Y+1	; 0x01
    382e:	cd 5a       	subi	r28, 0xAD	; 173
    3830:	d0 40       	sbci	r29, 0x00	; 0
    3832:	25 34       	cpi	r18, 0x45	; 69
    3834:	31 05       	cpc	r19, r1
    3836:	09 f4       	brne	.+2      	; 0x383a <main+0x2cf4>
    3838:	5b c0       	rjmp	.+182    	; 0x38f0 <main+0x2daa>
    383a:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
    383e:	c3 55       	subi	r28, 0x53	; 83
    3840:	df 4f       	sbci	r29, 0xFF	; 255
    3842:	88 81       	ld	r24, Y
    3844:	99 81       	ldd	r25, Y+1	; 0x01
    3846:	cd 5a       	subi	r28, 0xAD	; 173
    3848:	d0 40       	sbci	r29, 0x00	; 0
    384a:	82 35       	cpi	r24, 0x52	; 82
    384c:	91 05       	cpc	r25, r1
    384e:	21 f1       	breq	.+72     	; 0x3898 <main+0x2d52>
    3850:	c3 55       	subi	r28, 0x53	; 83
    3852:	df 4f       	sbci	r29, 0xFF	; 255
    3854:	e8 81       	ld	r30, Y
    3856:	f9 81       	ldd	r31, Y+1	; 0x01
    3858:	cd 5a       	subi	r28, 0xAD	; 173
    385a:	d0 40       	sbci	r29, 0x00	; 0
    385c:	e5 35       	cpi	r30, 0x55	; 85
    385e:	f1 05       	cpc	r31, r1
    3860:	41 f1       	breq	.+80     	; 0x38b2 <main+0x2d6c>
    3862:	c3 55       	subi	r28, 0x53	; 83
    3864:	df 4f       	sbci	r29, 0xFF	; 255
    3866:	28 81       	ld	r18, Y
    3868:	39 81       	ldd	r19, Y+1	; 0x01
    386a:	cd 5a       	subi	r28, 0xAD	; 173
    386c:	d0 40       	sbci	r29, 0x00	; 0
    386e:	2d 34       	cpi	r18, 0x4D	; 77
    3870:	31 05       	cpc	r19, r1
    3872:	11 f0       	breq	.+4      	; 0x3878 <main+0x2d32>
    3874:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						{
						case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str8); u8Cursor = 0; u8Icon = 9; u8TimerSetting = 0; break;
    3878:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    387c:	ce 01       	movw	r24, r28
    387e:	87 57       	subi	r24, 0x77	; 119
    3880:	9f 4f       	sbci	r25, 0xFF	; 255
    3882:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    3886:	10 92 97 01 	sts	0x0197, r1
    388a:	89 e0       	ldi	r24, 0x09	; 9
    388c:	80 93 8d 01 	sts	0x018D, r24
    3890:	10 92 93 01 	sts	0x0193, r1
    3894:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						case 'R' : u8Cursor = 2; u8TimerSetting = 0;                                								 break;
    3898:	82 e0       	ldi	r24, 0x02	; 2
    389a:	80 93 97 01 	sts	0x0197, r24
    389e:	10 92 93 01 	sts	0x0193, r1
    38a2:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						case 'L' : u8Cursor = 0; u8TimerSetting = 0;                               									 break;
    38a6:	10 92 97 01 	sts	0x0197, r1
    38aa:	10 92 93 01 	sts	0x0193, r1
    38ae:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						case 'U' : au8Timer[MINUTES]++; if(au8Timer[MINUTES] == 60) au8Timer[MINUTES] = 0;  u8TimerSetting = 0;      break;
    38b2:	80 91 9b 01 	lds	r24, 0x019B
    38b6:	8f 5f       	subi	r24, 0xFF	; 255
    38b8:	80 93 9b 01 	sts	0x019B, r24
    38bc:	80 91 9b 01 	lds	r24, 0x019B
    38c0:	8c 33       	cpi	r24, 0x3C	; 60
    38c2:	11 f4       	brne	.+4      	; 0x38c8 <main+0x2d82>
    38c4:	10 92 9b 01 	sts	0x019B, r1
    38c8:	10 92 93 01 	sts	0x0193, r1
    38cc:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						case 'D' : if (au8Timer[MINUTES] == 0) au8Timer[MINUTES] = 60; au8Timer[MINUTES]--; u8TimerSetting = 0;      break;
    38d0:	80 91 9b 01 	lds	r24, 0x019B
    38d4:	88 23       	and	r24, r24
    38d6:	19 f4       	brne	.+6      	; 0x38de <main+0x2d98>
    38d8:	8c e3       	ldi	r24, 0x3C	; 60
    38da:	80 93 9b 01 	sts	0x019B, r24
    38de:	80 91 9b 01 	lds	r24, 0x019B
    38e2:	81 50       	subi	r24, 0x01	; 1
    38e4:	80 93 9b 01 	sts	0x019B, r24
    38e8:	10 92 93 01 	sts	0x0193, r1
    38ec:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						case 'E' : u8StartTimer = 1;                                      u8TimerSetting = 0;                        break;
    38f0:	81 e0       	ldi	r24, 0x01	; 1
    38f2:	80 93 99 01 	sts	0x0199, r24
    38f6:	10 92 93 01 	sts	0x0193, r1
    38fa:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						}
					}
				}
				else if (u8Cursor == 2)
    38fe:	80 91 97 01 	lds	r24, 0x0197
    3902:	82 30       	cpi	r24, 0x02	; 2
    3904:	11 f0       	breq	.+4      	; 0x390a <main+0x2dc4>
    3906:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
				{
					LCD_voidSetPosition(LCD_LINE1 ,LCD_COLUM12);
    390a:	80 e0       	ldi	r24, 0x00	; 0
    390c:	6b e0       	ldi	r22, 0x0B	; 11
    390e:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
					if(u8Key != NULL)
    3912:	80 91 8c 01 	lds	r24, 0x018C
    3916:	88 23       	and	r24, r24
    3918:	11 f4       	brne	.+4      	; 0x391e <main+0x2dd8>
    391a:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					{
						switch(u8Key)
    391e:	80 91 8c 01 	lds	r24, 0x018C
    3922:	e8 2f       	mov	r30, r24
    3924:	f0 e0       	ldi	r31, 0x00	; 0
    3926:	c5 55       	subi	r28, 0x55	; 85
    3928:	df 4f       	sbci	r29, 0xFF	; 255
    392a:	f9 83       	std	Y+1, r31	; 0x01
    392c:	e8 83       	st	Y, r30
    392e:	cb 5a       	subi	r28, 0xAB	; 171
    3930:	d0 40       	sbci	r29, 0x00	; 0
    3932:	c5 55       	subi	r28, 0x55	; 85
    3934:	df 4f       	sbci	r29, 0xFF	; 255
    3936:	28 81       	ld	r18, Y
    3938:	39 81       	ldd	r19, Y+1	; 0x01
    393a:	cb 5a       	subi	r28, 0xAB	; 171
    393c:	d0 40       	sbci	r29, 0x00	; 0
    393e:	2c 34       	cpi	r18, 0x4C	; 76
    3940:	31 05       	cpc	r19, r1
    3942:	09 f4       	brne	.+2      	; 0x3946 <main+0x2e00>
    3944:	52 c0       	rjmp	.+164    	; 0x39ea <main+0x2ea4>
    3946:	c5 55       	subi	r28, 0x55	; 85
    3948:	df 4f       	sbci	r29, 0xFF	; 255
    394a:	88 81       	ld	r24, Y
    394c:	99 81       	ldd	r25, Y+1	; 0x01
    394e:	cb 5a       	subi	r28, 0xAB	; 171
    3950:	d0 40       	sbci	r29, 0x00	; 0
    3952:	8d 34       	cpi	r24, 0x4D	; 77
    3954:	91 05       	cpc	r25, r1
    3956:	b4 f4       	brge	.+44     	; 0x3984 <main+0x2e3e>
    3958:	c5 55       	subi	r28, 0x55	; 85
    395a:	df 4f       	sbci	r29, 0xFF	; 255
    395c:	e8 81       	ld	r30, Y
    395e:	f9 81       	ldd	r31, Y+1	; 0x01
    3960:	cb 5a       	subi	r28, 0xAB	; 171
    3962:	d0 40       	sbci	r29, 0x00	; 0
    3964:	e4 34       	cpi	r30, 0x44	; 68
    3966:	f1 05       	cpc	r31, r1
    3968:	09 f4       	brne	.+2      	; 0x396c <main+0x2e26>
    396a:	55 c0       	rjmp	.+170    	; 0x3a16 <main+0x2ed0>
    396c:	c5 55       	subi	r28, 0x55	; 85
    396e:	df 4f       	sbci	r29, 0xFF	; 255
    3970:	28 81       	ld	r18, Y
    3972:	39 81       	ldd	r19, Y+1	; 0x01
    3974:	cb 5a       	subi	r28, 0xAB	; 171
    3976:	d0 40       	sbci	r29, 0x00	; 0
    3978:	25 34       	cpi	r18, 0x45	; 69
    397a:	31 05       	cpc	r19, r1
    397c:	09 f4       	brne	.+2      	; 0x3980 <main+0x2e3a>
    397e:	5b c0       	rjmp	.+182    	; 0x3a36 <main+0x2ef0>
    3980:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
    3984:	c5 55       	subi	r28, 0x55	; 85
    3986:	df 4f       	sbci	r29, 0xFF	; 255
    3988:	88 81       	ld	r24, Y
    398a:	99 81       	ldd	r25, Y+1	; 0x01
    398c:	cb 5a       	subi	r28, 0xAB	; 171
    398e:	d0 40       	sbci	r29, 0x00	; 0
    3990:	82 35       	cpi	r24, 0x52	; 82
    3992:	91 05       	cpc	r25, r1
    3994:	21 f1       	breq	.+72     	; 0x39de <main+0x2e98>
    3996:	c5 55       	subi	r28, 0x55	; 85
    3998:	df 4f       	sbci	r29, 0xFF	; 255
    399a:	e8 81       	ld	r30, Y
    399c:	f9 81       	ldd	r31, Y+1	; 0x01
    399e:	cb 5a       	subi	r28, 0xAB	; 171
    39a0:	d0 40       	sbci	r29, 0x00	; 0
    39a2:	e5 35       	cpi	r30, 0x55	; 85
    39a4:	f1 05       	cpc	r31, r1
    39a6:	41 f1       	breq	.+80     	; 0x39f8 <main+0x2eb2>
    39a8:	c5 55       	subi	r28, 0x55	; 85
    39aa:	df 4f       	sbci	r29, 0xFF	; 255
    39ac:	28 81       	ld	r18, Y
    39ae:	39 81       	ldd	r19, Y+1	; 0x01
    39b0:	cb 5a       	subi	r28, 0xAB	; 171
    39b2:	d0 40       	sbci	r29, 0x00	; 0
    39b4:	2d 34       	cpi	r18, 0x4D	; 77
    39b6:	31 05       	cpc	r19, r1
    39b8:	11 f0       	breq	.+4      	; 0x39be <main+0x2e78>
    39ba:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						{
						case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str8); u8Cursor = 0; u8Icon = 9; u8TimerSetting = 0; break;
    39be:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    39c2:	ce 01       	movw	r24, r28
    39c4:	87 57       	subi	r24, 0x77	; 119
    39c6:	9f 4f       	sbci	r25, 0xFF	; 255
    39c8:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    39cc:	10 92 97 01 	sts	0x0197, r1
    39d0:	89 e0       	ldi	r24, 0x09	; 9
    39d2:	80 93 8d 01 	sts	0x018D, r24
    39d6:	10 92 93 01 	sts	0x0193, r1
    39da:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						case 'R' : u8Cursor = 0; u8TimerSetting = 0;                            									 break;
    39de:	10 92 97 01 	sts	0x0197, r1
    39e2:	10 92 93 01 	sts	0x0193, r1
    39e6:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						case 'L' : u8Cursor = 1;  u8TimerSetting = 0;                         										 break;
    39ea:	81 e0       	ldi	r24, 0x01	; 1
    39ec:	80 93 97 01 	sts	0x0197, r24
    39f0:	10 92 93 01 	sts	0x0193, r1
    39f4:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						case 'U' : au8Timer[SECONDS]++; if (au8Timer[SECONDS] == 60) au8Timer[SECONDS] = 0;  u8TimerSetting = 0;     break;
    39f8:	80 91 9c 01 	lds	r24, 0x019C
    39fc:	8f 5f       	subi	r24, 0xFF	; 255
    39fe:	80 93 9c 01 	sts	0x019C, r24
    3a02:	80 91 9c 01 	lds	r24, 0x019C
    3a06:	8c 33       	cpi	r24, 0x3C	; 60
    3a08:	11 f4       	brne	.+4      	; 0x3a0e <main+0x2ec8>
    3a0a:	10 92 9c 01 	sts	0x019C, r1
    3a0e:	10 92 93 01 	sts	0x0193, r1
    3a12:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						case 'D' : if (au8Timer[SECONDS] == 0) au8Timer[SECONDS] = 60;  au8Timer[SECONDS]--; u8TimerSetting = 0;     break;
    3a16:	80 91 9c 01 	lds	r24, 0x019C
    3a1a:	88 23       	and	r24, r24
    3a1c:	19 f4       	brne	.+6      	; 0x3a24 <main+0x2ede>
    3a1e:	8c e3       	ldi	r24, 0x3C	; 60
    3a20:	80 93 9c 01 	sts	0x019C, r24
    3a24:	80 91 9c 01 	lds	r24, 0x019C
    3a28:	81 50       	subi	r24, 0x01	; 1
    3a2a:	80 93 9c 01 	sts	0x019C, r24
    3a2e:	10 92 93 01 	sts	0x0193, r1
    3a32:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
						case 'E' : u8StartTimer = 1;                                       u8TimerSetting = 0;                       break;
    3a36:	81 e0       	ldi	r24, 0x01	; 1
    3a38:	80 93 99 01 	sts	0x0199, r24
    3a3c:	10 92 93 01 	sts	0x0193, r1
    3a40:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
					}
				}
			}
			else
			{
				switch(u8Key)
    3a44:	80 91 8c 01 	lds	r24, 0x018C
    3a48:	88 2f       	mov	r24, r24
    3a4a:	90 e0       	ldi	r25, 0x00	; 0
    3a4c:	8d 34       	cpi	r24, 0x4D	; 77
    3a4e:	91 05       	cpc	r25, r1
    3a50:	11 f0       	breq	.+4      	; 0x3a56 <main+0x2f10>
    3a52:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>
				{
				case 'M' : LCD_voidClearDisplay(); LCD_voidSendString(u8Str8); u8Cursor = 0; u8Icon = 9; u8TimerSetting = 0; break;
    3a56:	0e 94 e5 26 	call	0x4dca	; 0x4dca <LCD_voidClearDisplay>
    3a5a:	ce 01       	movw	r24, r28
    3a5c:	87 57       	subi	r24, 0x77	; 119
    3a5e:	9f 4f       	sbci	r25, 0xFF	; 255
    3a60:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    3a64:	10 92 97 01 	sts	0x0197, r1
    3a68:	89 e0       	ldi	r24, 0x09	; 9
    3a6a:	80 93 8d 01 	sts	0x018D, r24
    3a6e:	10 92 93 01 	sts	0x0193, r1
    3a72:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <main+0x72e>

00003a76 <GetTime>:
	}
}

/* ISR FUNCTION */
void GetTime(void)
{
    3a76:	df 93       	push	r29
    3a78:	cf 93       	push	r28
    3a7a:	cd b7       	in	r28, 0x3d	; 61
    3a7c:	de b7       	in	r29, 0x3e	; 62
	u16Counter1++;
    3a7e:	80 91 86 01 	lds	r24, 0x0186
    3a82:	90 91 87 01 	lds	r25, 0x0187
    3a86:	01 96       	adiw	r24, 0x01	; 1
    3a88:	90 93 87 01 	sts	0x0187, r25
    3a8c:	80 93 86 01 	sts	0x0186, r24
	if (u16Counter1 == 1000)
    3a90:	80 91 86 01 	lds	r24, 0x0186
    3a94:	90 91 87 01 	lds	r25, 0x0187
    3a98:	23 e0       	ldi	r18, 0x03	; 3
    3a9a:	88 3e       	cpi	r24, 0xE8	; 232
    3a9c:	92 07       	cpc	r25, r18
    3a9e:	b1 f4       	brne	.+44     	; 0x3acc <GetTime+0x56>
	{
		u16Counter1 = 0;
    3aa0:	10 92 87 01 	sts	0x0187, r1
    3aa4:	10 92 86 01 	sts	0x0186, r1
		u8Seconds++;
    3aa8:	80 91 89 01 	lds	r24, 0x0189
    3aac:	8f 5f       	subi	r24, 0xFF	; 255
    3aae:	80 93 89 01 	sts	0x0189, r24
		if((u8StartTimer == 1) && (au8Timer[2] > 0)) au8Timer[2]--;
    3ab2:	80 91 99 01 	lds	r24, 0x0199
    3ab6:	81 30       	cpi	r24, 0x01	; 1
    3ab8:	49 f4       	brne	.+18     	; 0x3acc <GetTime+0x56>
    3aba:	80 91 9c 01 	lds	r24, 0x019C
    3abe:	88 23       	and	r24, r24
    3ac0:	29 f0       	breq	.+10     	; 0x3acc <GetTime+0x56>
    3ac2:	80 91 9c 01 	lds	r24, 0x019C
    3ac6:	81 50       	subi	r24, 0x01	; 1
    3ac8:	80 93 9c 01 	sts	0x019C, r24
	}
	if (u8StartStopWatch == 1)
    3acc:	80 91 98 01 	lds	r24, 0x0198
    3ad0:	81 30       	cpi	r24, 0x01	; 1
    3ad2:	81 f4       	brne	.+32     	; 0x3af4 <GetTime+0x7e>
	{
		u8Counter2++;
    3ad4:	80 91 88 01 	lds	r24, 0x0188
    3ad8:	8f 5f       	subi	r24, 0xFF	; 255
    3ada:	80 93 88 01 	sts	0x0188, r24
		if(u8Counter2 == 10)
    3ade:	80 91 88 01 	lds	r24, 0x0188
    3ae2:	8a 30       	cpi	r24, 0x0A	; 10
    3ae4:	39 f4       	brne	.+14     	; 0x3af4 <GetTime+0x7e>
		{
			u8Counter2 = 0;
    3ae6:	10 92 88 01 	sts	0x0188, r1
			au8StopWatch[2]++;
    3aea:	80 91 9f 01 	lds	r24, 0x019F
    3aee:	8f 5f       	subi	r24, 0xFF	; 255
    3af0:	80 93 9f 01 	sts	0x019F, r24
		}
	}
}
    3af4:	cf 91       	pop	r28
    3af6:	df 91       	pop	r29
    3af8:	08 95       	ret

00003afa <DIO_voidSetPinDir>:

/**********************************************************************************/
/**************************FUNCTIONS IMPLEMENTATION*******************************/
/********************************************************************************/
void DIO_voidSetPinDir (u8 PortId , u8 PinId , u8 PinDir)
{
    3afa:	df 93       	push	r29
    3afc:	cf 93       	push	r28
    3afe:	cd b7       	in	r28, 0x3d	; 61
    3b00:	de b7       	in	r29, 0x3e	; 62
    3b02:	27 97       	sbiw	r28, 0x07	; 7
    3b04:	0f b6       	in	r0, 0x3f	; 63
    3b06:	f8 94       	cli
    3b08:	de bf       	out	0x3e, r29	; 62
    3b0a:	0f be       	out	0x3f, r0	; 63
    3b0c:	cd bf       	out	0x3d, r28	; 61
    3b0e:	89 83       	std	Y+1, r24	; 0x01
    3b10:	6a 83       	std	Y+2, r22	; 0x02
    3b12:	4b 83       	std	Y+3, r20	; 0x03
	/*check from allowed values for PortId & PinId*/
	if ((PortId <= DIO_PORTD) && (PinId <= DIO_PIN7))
    3b14:	89 81       	ldd	r24, Y+1	; 0x01
    3b16:	84 30       	cpi	r24, 0x04	; 4
    3b18:	08 f0       	brcs	.+2      	; 0x3b1c <DIO_voidSetPinDir+0x22>
    3b1a:	ee c0       	rjmp	.+476    	; 0x3cf8 <DIO_voidSetPinDir+0x1fe>
    3b1c:	8a 81       	ldd	r24, Y+2	; 0x02
    3b1e:	88 30       	cpi	r24, 0x08	; 8
    3b20:	08 f0       	brcs	.+2      	; 0x3b24 <DIO_voidSetPinDir+0x2a>
    3b22:	ea c0       	rjmp	.+468    	; 0x3cf8 <DIO_voidSetPinDir+0x1fe>
	{
		/*check from PinDir value*/
		if(PinDir == DIO_OUTPUT)
    3b24:	8b 81       	ldd	r24, Y+3	; 0x03
    3b26:	81 30       	cpi	r24, 0x01	; 1
    3b28:	09 f0       	breq	.+2      	; 0x3b2c <DIO_voidSetPinDir+0x32>
    3b2a:	6f c0       	rjmp	.+222    	; 0x3c0a <DIO_voidSetPinDir+0x110>
		{
			switch(PortId)
    3b2c:	89 81       	ldd	r24, Y+1	; 0x01
    3b2e:	28 2f       	mov	r18, r24
    3b30:	30 e0       	ldi	r19, 0x00	; 0
    3b32:	3f 83       	std	Y+7, r19	; 0x07
    3b34:	2e 83       	std	Y+6, r18	; 0x06
    3b36:	8e 81       	ldd	r24, Y+6	; 0x06
    3b38:	9f 81       	ldd	r25, Y+7	; 0x07
    3b3a:	81 30       	cpi	r24, 0x01	; 1
    3b3c:	91 05       	cpc	r25, r1
    3b3e:	49 f1       	breq	.+82     	; 0x3b92 <DIO_voidSetPinDir+0x98>
    3b40:	2e 81       	ldd	r18, Y+6	; 0x06
    3b42:	3f 81       	ldd	r19, Y+7	; 0x07
    3b44:	22 30       	cpi	r18, 0x02	; 2
    3b46:	31 05       	cpc	r19, r1
    3b48:	2c f4       	brge	.+10     	; 0x3b54 <DIO_voidSetPinDir+0x5a>
    3b4a:	8e 81       	ldd	r24, Y+6	; 0x06
    3b4c:	9f 81       	ldd	r25, Y+7	; 0x07
    3b4e:	00 97       	sbiw	r24, 0x00	; 0
    3b50:	61 f0       	breq	.+24     	; 0x3b6a <DIO_voidSetPinDir+0x70>
    3b52:	d2 c0       	rjmp	.+420    	; 0x3cf8 <DIO_voidSetPinDir+0x1fe>
    3b54:	2e 81       	ldd	r18, Y+6	; 0x06
    3b56:	3f 81       	ldd	r19, Y+7	; 0x07
    3b58:	22 30       	cpi	r18, 0x02	; 2
    3b5a:	31 05       	cpc	r19, r1
    3b5c:	71 f1       	breq	.+92     	; 0x3bba <DIO_voidSetPinDir+0xc0>
    3b5e:	8e 81       	ldd	r24, Y+6	; 0x06
    3b60:	9f 81       	ldd	r25, Y+7	; 0x07
    3b62:	83 30       	cpi	r24, 0x03	; 3
    3b64:	91 05       	cpc	r25, r1
    3b66:	e9 f1       	breq	.+122    	; 0x3be2 <DIO_voidSetPinDir+0xe8>
    3b68:	c7 c0       	rjmp	.+398    	; 0x3cf8 <DIO_voidSetPinDir+0x1fe>
			{
			case DIO_PORTA: SET_BIT(DDRA_REG,PinId); break;
    3b6a:	aa e3       	ldi	r26, 0x3A	; 58
    3b6c:	b0 e0       	ldi	r27, 0x00	; 0
    3b6e:	ea e3       	ldi	r30, 0x3A	; 58
    3b70:	f0 e0       	ldi	r31, 0x00	; 0
    3b72:	80 81       	ld	r24, Z
    3b74:	48 2f       	mov	r20, r24
    3b76:	8a 81       	ldd	r24, Y+2	; 0x02
    3b78:	28 2f       	mov	r18, r24
    3b7a:	30 e0       	ldi	r19, 0x00	; 0
    3b7c:	81 e0       	ldi	r24, 0x01	; 1
    3b7e:	90 e0       	ldi	r25, 0x00	; 0
    3b80:	02 2e       	mov	r0, r18
    3b82:	02 c0       	rjmp	.+4      	; 0x3b88 <DIO_voidSetPinDir+0x8e>
    3b84:	88 0f       	add	r24, r24
    3b86:	99 1f       	adc	r25, r25
    3b88:	0a 94       	dec	r0
    3b8a:	e2 f7       	brpl	.-8      	; 0x3b84 <DIO_voidSetPinDir+0x8a>
    3b8c:	84 2b       	or	r24, r20
    3b8e:	8c 93       	st	X, r24
    3b90:	b3 c0       	rjmp	.+358    	; 0x3cf8 <DIO_voidSetPinDir+0x1fe>
			case DIO_PORTB: SET_BIT(DDRB_REG,PinId); break;
    3b92:	a7 e3       	ldi	r26, 0x37	; 55
    3b94:	b0 e0       	ldi	r27, 0x00	; 0
    3b96:	e7 e3       	ldi	r30, 0x37	; 55
    3b98:	f0 e0       	ldi	r31, 0x00	; 0
    3b9a:	80 81       	ld	r24, Z
    3b9c:	48 2f       	mov	r20, r24
    3b9e:	8a 81       	ldd	r24, Y+2	; 0x02
    3ba0:	28 2f       	mov	r18, r24
    3ba2:	30 e0       	ldi	r19, 0x00	; 0
    3ba4:	81 e0       	ldi	r24, 0x01	; 1
    3ba6:	90 e0       	ldi	r25, 0x00	; 0
    3ba8:	02 2e       	mov	r0, r18
    3baa:	02 c0       	rjmp	.+4      	; 0x3bb0 <DIO_voidSetPinDir+0xb6>
    3bac:	88 0f       	add	r24, r24
    3bae:	99 1f       	adc	r25, r25
    3bb0:	0a 94       	dec	r0
    3bb2:	e2 f7       	brpl	.-8      	; 0x3bac <DIO_voidSetPinDir+0xb2>
    3bb4:	84 2b       	or	r24, r20
    3bb6:	8c 93       	st	X, r24
    3bb8:	9f c0       	rjmp	.+318    	; 0x3cf8 <DIO_voidSetPinDir+0x1fe>
			case DIO_PORTC: SET_BIT(DDRC_REG,PinId); break;
    3bba:	a4 e3       	ldi	r26, 0x34	; 52
    3bbc:	b0 e0       	ldi	r27, 0x00	; 0
    3bbe:	e4 e3       	ldi	r30, 0x34	; 52
    3bc0:	f0 e0       	ldi	r31, 0x00	; 0
    3bc2:	80 81       	ld	r24, Z
    3bc4:	48 2f       	mov	r20, r24
    3bc6:	8a 81       	ldd	r24, Y+2	; 0x02
    3bc8:	28 2f       	mov	r18, r24
    3bca:	30 e0       	ldi	r19, 0x00	; 0
    3bcc:	81 e0       	ldi	r24, 0x01	; 1
    3bce:	90 e0       	ldi	r25, 0x00	; 0
    3bd0:	02 2e       	mov	r0, r18
    3bd2:	02 c0       	rjmp	.+4      	; 0x3bd8 <DIO_voidSetPinDir+0xde>
    3bd4:	88 0f       	add	r24, r24
    3bd6:	99 1f       	adc	r25, r25
    3bd8:	0a 94       	dec	r0
    3bda:	e2 f7       	brpl	.-8      	; 0x3bd4 <DIO_voidSetPinDir+0xda>
    3bdc:	84 2b       	or	r24, r20
    3bde:	8c 93       	st	X, r24
    3be0:	8b c0       	rjmp	.+278    	; 0x3cf8 <DIO_voidSetPinDir+0x1fe>
			case DIO_PORTD: SET_BIT(DDRD_REG,PinId); break;
    3be2:	a1 e3       	ldi	r26, 0x31	; 49
    3be4:	b0 e0       	ldi	r27, 0x00	; 0
    3be6:	e1 e3       	ldi	r30, 0x31	; 49
    3be8:	f0 e0       	ldi	r31, 0x00	; 0
    3bea:	80 81       	ld	r24, Z
    3bec:	48 2f       	mov	r20, r24
    3bee:	8a 81       	ldd	r24, Y+2	; 0x02
    3bf0:	28 2f       	mov	r18, r24
    3bf2:	30 e0       	ldi	r19, 0x00	; 0
    3bf4:	81 e0       	ldi	r24, 0x01	; 1
    3bf6:	90 e0       	ldi	r25, 0x00	; 0
    3bf8:	02 2e       	mov	r0, r18
    3bfa:	02 c0       	rjmp	.+4      	; 0x3c00 <DIO_voidSetPinDir+0x106>
    3bfc:	88 0f       	add	r24, r24
    3bfe:	99 1f       	adc	r25, r25
    3c00:	0a 94       	dec	r0
    3c02:	e2 f7       	brpl	.-8      	; 0x3bfc <DIO_voidSetPinDir+0x102>
    3c04:	84 2b       	or	r24, r20
    3c06:	8c 93       	st	X, r24
    3c08:	77 c0       	rjmp	.+238    	; 0x3cf8 <DIO_voidSetPinDir+0x1fe>
			}
		}
		else if (PinDir == DIO_INPUT)
    3c0a:	8b 81       	ldd	r24, Y+3	; 0x03
    3c0c:	88 23       	and	r24, r24
    3c0e:	09 f0       	breq	.+2      	; 0x3c12 <DIO_voidSetPinDir+0x118>
    3c10:	73 c0       	rjmp	.+230    	; 0x3cf8 <DIO_voidSetPinDir+0x1fe>
		{
			switch(PortId)
    3c12:	89 81       	ldd	r24, Y+1	; 0x01
    3c14:	28 2f       	mov	r18, r24
    3c16:	30 e0       	ldi	r19, 0x00	; 0
    3c18:	3d 83       	std	Y+5, r19	; 0x05
    3c1a:	2c 83       	std	Y+4, r18	; 0x04
    3c1c:	8c 81       	ldd	r24, Y+4	; 0x04
    3c1e:	9d 81       	ldd	r25, Y+5	; 0x05
    3c20:	81 30       	cpi	r24, 0x01	; 1
    3c22:	91 05       	cpc	r25, r1
    3c24:	59 f1       	breq	.+86     	; 0x3c7c <DIO_voidSetPinDir+0x182>
    3c26:	2c 81       	ldd	r18, Y+4	; 0x04
    3c28:	3d 81       	ldd	r19, Y+5	; 0x05
    3c2a:	22 30       	cpi	r18, 0x02	; 2
    3c2c:	31 05       	cpc	r19, r1
    3c2e:	2c f4       	brge	.+10     	; 0x3c3a <DIO_voidSetPinDir+0x140>
    3c30:	8c 81       	ldd	r24, Y+4	; 0x04
    3c32:	9d 81       	ldd	r25, Y+5	; 0x05
    3c34:	00 97       	sbiw	r24, 0x00	; 0
    3c36:	69 f0       	breq	.+26     	; 0x3c52 <DIO_voidSetPinDir+0x158>
    3c38:	5f c0       	rjmp	.+190    	; 0x3cf8 <DIO_voidSetPinDir+0x1fe>
    3c3a:	2c 81       	ldd	r18, Y+4	; 0x04
    3c3c:	3d 81       	ldd	r19, Y+5	; 0x05
    3c3e:	22 30       	cpi	r18, 0x02	; 2
    3c40:	31 05       	cpc	r19, r1
    3c42:	89 f1       	breq	.+98     	; 0x3ca6 <DIO_voidSetPinDir+0x1ac>
    3c44:	8c 81       	ldd	r24, Y+4	; 0x04
    3c46:	9d 81       	ldd	r25, Y+5	; 0x05
    3c48:	83 30       	cpi	r24, 0x03	; 3
    3c4a:	91 05       	cpc	r25, r1
    3c4c:	09 f4       	brne	.+2      	; 0x3c50 <DIO_voidSetPinDir+0x156>
    3c4e:	40 c0       	rjmp	.+128    	; 0x3cd0 <DIO_voidSetPinDir+0x1d6>
    3c50:	53 c0       	rjmp	.+166    	; 0x3cf8 <DIO_voidSetPinDir+0x1fe>
			{
			case DIO_PORTA: CLR_BIT(DDRA_REG,PinId); break;
    3c52:	aa e3       	ldi	r26, 0x3A	; 58
    3c54:	b0 e0       	ldi	r27, 0x00	; 0
    3c56:	ea e3       	ldi	r30, 0x3A	; 58
    3c58:	f0 e0       	ldi	r31, 0x00	; 0
    3c5a:	80 81       	ld	r24, Z
    3c5c:	48 2f       	mov	r20, r24
    3c5e:	8a 81       	ldd	r24, Y+2	; 0x02
    3c60:	28 2f       	mov	r18, r24
    3c62:	30 e0       	ldi	r19, 0x00	; 0
    3c64:	81 e0       	ldi	r24, 0x01	; 1
    3c66:	90 e0       	ldi	r25, 0x00	; 0
    3c68:	02 2e       	mov	r0, r18
    3c6a:	02 c0       	rjmp	.+4      	; 0x3c70 <DIO_voidSetPinDir+0x176>
    3c6c:	88 0f       	add	r24, r24
    3c6e:	99 1f       	adc	r25, r25
    3c70:	0a 94       	dec	r0
    3c72:	e2 f7       	brpl	.-8      	; 0x3c6c <DIO_voidSetPinDir+0x172>
    3c74:	80 95       	com	r24
    3c76:	84 23       	and	r24, r20
    3c78:	8c 93       	st	X, r24
    3c7a:	3e c0       	rjmp	.+124    	; 0x3cf8 <DIO_voidSetPinDir+0x1fe>
			case DIO_PORTB: CLR_BIT(DDRB_REG,PinId); break;
    3c7c:	a7 e3       	ldi	r26, 0x37	; 55
    3c7e:	b0 e0       	ldi	r27, 0x00	; 0
    3c80:	e7 e3       	ldi	r30, 0x37	; 55
    3c82:	f0 e0       	ldi	r31, 0x00	; 0
    3c84:	80 81       	ld	r24, Z
    3c86:	48 2f       	mov	r20, r24
    3c88:	8a 81       	ldd	r24, Y+2	; 0x02
    3c8a:	28 2f       	mov	r18, r24
    3c8c:	30 e0       	ldi	r19, 0x00	; 0
    3c8e:	81 e0       	ldi	r24, 0x01	; 1
    3c90:	90 e0       	ldi	r25, 0x00	; 0
    3c92:	02 2e       	mov	r0, r18
    3c94:	02 c0       	rjmp	.+4      	; 0x3c9a <DIO_voidSetPinDir+0x1a0>
    3c96:	88 0f       	add	r24, r24
    3c98:	99 1f       	adc	r25, r25
    3c9a:	0a 94       	dec	r0
    3c9c:	e2 f7       	brpl	.-8      	; 0x3c96 <DIO_voidSetPinDir+0x19c>
    3c9e:	80 95       	com	r24
    3ca0:	84 23       	and	r24, r20
    3ca2:	8c 93       	st	X, r24
    3ca4:	29 c0       	rjmp	.+82     	; 0x3cf8 <DIO_voidSetPinDir+0x1fe>
			case DIO_PORTC: CLR_BIT(DDRC_REG,PinId); break;
    3ca6:	a4 e3       	ldi	r26, 0x34	; 52
    3ca8:	b0 e0       	ldi	r27, 0x00	; 0
    3caa:	e4 e3       	ldi	r30, 0x34	; 52
    3cac:	f0 e0       	ldi	r31, 0x00	; 0
    3cae:	80 81       	ld	r24, Z
    3cb0:	48 2f       	mov	r20, r24
    3cb2:	8a 81       	ldd	r24, Y+2	; 0x02
    3cb4:	28 2f       	mov	r18, r24
    3cb6:	30 e0       	ldi	r19, 0x00	; 0
    3cb8:	81 e0       	ldi	r24, 0x01	; 1
    3cba:	90 e0       	ldi	r25, 0x00	; 0
    3cbc:	02 2e       	mov	r0, r18
    3cbe:	02 c0       	rjmp	.+4      	; 0x3cc4 <DIO_voidSetPinDir+0x1ca>
    3cc0:	88 0f       	add	r24, r24
    3cc2:	99 1f       	adc	r25, r25
    3cc4:	0a 94       	dec	r0
    3cc6:	e2 f7       	brpl	.-8      	; 0x3cc0 <DIO_voidSetPinDir+0x1c6>
    3cc8:	80 95       	com	r24
    3cca:	84 23       	and	r24, r20
    3ccc:	8c 93       	st	X, r24
    3cce:	14 c0       	rjmp	.+40     	; 0x3cf8 <DIO_voidSetPinDir+0x1fe>
			case DIO_PORTD: CLR_BIT(DDRD_REG,PinId); break;
    3cd0:	a1 e3       	ldi	r26, 0x31	; 49
    3cd2:	b0 e0       	ldi	r27, 0x00	; 0
    3cd4:	e1 e3       	ldi	r30, 0x31	; 49
    3cd6:	f0 e0       	ldi	r31, 0x00	; 0
    3cd8:	80 81       	ld	r24, Z
    3cda:	48 2f       	mov	r20, r24
    3cdc:	8a 81       	ldd	r24, Y+2	; 0x02
    3cde:	28 2f       	mov	r18, r24
    3ce0:	30 e0       	ldi	r19, 0x00	; 0
    3ce2:	81 e0       	ldi	r24, 0x01	; 1
    3ce4:	90 e0       	ldi	r25, 0x00	; 0
    3ce6:	02 2e       	mov	r0, r18
    3ce8:	02 c0       	rjmp	.+4      	; 0x3cee <DIO_voidSetPinDir+0x1f4>
    3cea:	88 0f       	add	r24, r24
    3cec:	99 1f       	adc	r25, r25
    3cee:	0a 94       	dec	r0
    3cf0:	e2 f7       	brpl	.-8      	; 0x3cea <DIO_voidSetPinDir+0x1f0>
    3cf2:	80 95       	com	r24
    3cf4:	84 23       	and	r24, r20
    3cf6:	8c 93       	st	X, r24
	}
	else
	{
		//report error
	}
}
    3cf8:	27 96       	adiw	r28, 0x07	; 7
    3cfa:	0f b6       	in	r0, 0x3f	; 63
    3cfc:	f8 94       	cli
    3cfe:	de bf       	out	0x3e, r29	; 62
    3d00:	0f be       	out	0x3f, r0	; 63
    3d02:	cd bf       	out	0x3d, r28	; 61
    3d04:	cf 91       	pop	r28
    3d06:	df 91       	pop	r29
    3d08:	08 95       	ret

00003d0a <DIO_voidSetPinVal>:

void DIO_voidSetPinVal (u8 PortId , u8 PinId , u8 PinVal)
{
    3d0a:	df 93       	push	r29
    3d0c:	cf 93       	push	r28
    3d0e:	cd b7       	in	r28, 0x3d	; 61
    3d10:	de b7       	in	r29, 0x3e	; 62
    3d12:	27 97       	sbiw	r28, 0x07	; 7
    3d14:	0f b6       	in	r0, 0x3f	; 63
    3d16:	f8 94       	cli
    3d18:	de bf       	out	0x3e, r29	; 62
    3d1a:	0f be       	out	0x3f, r0	; 63
    3d1c:	cd bf       	out	0x3d, r28	; 61
    3d1e:	89 83       	std	Y+1, r24	; 0x01
    3d20:	6a 83       	std	Y+2, r22	; 0x02
    3d22:	4b 83       	std	Y+3, r20	; 0x03
	/*check from allowed values for PortId & PinId*/
	if ((PortId <= DIO_PORTD) && (PinId <= DIO_PIN7))
    3d24:	89 81       	ldd	r24, Y+1	; 0x01
    3d26:	84 30       	cpi	r24, 0x04	; 4
    3d28:	08 f0       	brcs	.+2      	; 0x3d2c <DIO_voidSetPinVal+0x22>
    3d2a:	ee c0       	rjmp	.+476    	; 0x3f08 <DIO_voidSetPinVal+0x1fe>
    3d2c:	8a 81       	ldd	r24, Y+2	; 0x02
    3d2e:	88 30       	cpi	r24, 0x08	; 8
    3d30:	08 f0       	brcs	.+2      	; 0x3d34 <DIO_voidSetPinVal+0x2a>
    3d32:	ea c0       	rjmp	.+468    	; 0x3f08 <DIO_voidSetPinVal+0x1fe>
	{
		/*check from PinDir value*/
		if(PinVal == DIO_HIGH)
    3d34:	8b 81       	ldd	r24, Y+3	; 0x03
    3d36:	81 30       	cpi	r24, 0x01	; 1
    3d38:	09 f0       	breq	.+2      	; 0x3d3c <DIO_voidSetPinVal+0x32>
    3d3a:	6f c0       	rjmp	.+222    	; 0x3e1a <DIO_voidSetPinVal+0x110>
		{
			switch(PortId)
    3d3c:	89 81       	ldd	r24, Y+1	; 0x01
    3d3e:	28 2f       	mov	r18, r24
    3d40:	30 e0       	ldi	r19, 0x00	; 0
    3d42:	3f 83       	std	Y+7, r19	; 0x07
    3d44:	2e 83       	std	Y+6, r18	; 0x06
    3d46:	8e 81       	ldd	r24, Y+6	; 0x06
    3d48:	9f 81       	ldd	r25, Y+7	; 0x07
    3d4a:	81 30       	cpi	r24, 0x01	; 1
    3d4c:	91 05       	cpc	r25, r1
    3d4e:	49 f1       	breq	.+82     	; 0x3da2 <DIO_voidSetPinVal+0x98>
    3d50:	2e 81       	ldd	r18, Y+6	; 0x06
    3d52:	3f 81       	ldd	r19, Y+7	; 0x07
    3d54:	22 30       	cpi	r18, 0x02	; 2
    3d56:	31 05       	cpc	r19, r1
    3d58:	2c f4       	brge	.+10     	; 0x3d64 <DIO_voidSetPinVal+0x5a>
    3d5a:	8e 81       	ldd	r24, Y+6	; 0x06
    3d5c:	9f 81       	ldd	r25, Y+7	; 0x07
    3d5e:	00 97       	sbiw	r24, 0x00	; 0
    3d60:	61 f0       	breq	.+24     	; 0x3d7a <DIO_voidSetPinVal+0x70>
    3d62:	d2 c0       	rjmp	.+420    	; 0x3f08 <DIO_voidSetPinVal+0x1fe>
    3d64:	2e 81       	ldd	r18, Y+6	; 0x06
    3d66:	3f 81       	ldd	r19, Y+7	; 0x07
    3d68:	22 30       	cpi	r18, 0x02	; 2
    3d6a:	31 05       	cpc	r19, r1
    3d6c:	71 f1       	breq	.+92     	; 0x3dca <DIO_voidSetPinVal+0xc0>
    3d6e:	8e 81       	ldd	r24, Y+6	; 0x06
    3d70:	9f 81       	ldd	r25, Y+7	; 0x07
    3d72:	83 30       	cpi	r24, 0x03	; 3
    3d74:	91 05       	cpc	r25, r1
    3d76:	e9 f1       	breq	.+122    	; 0x3df2 <DIO_voidSetPinVal+0xe8>
    3d78:	c7 c0       	rjmp	.+398    	; 0x3f08 <DIO_voidSetPinVal+0x1fe>
			{
			case DIO_PORTA: SET_BIT(PORTA_REG,PinId); break;
    3d7a:	ab e3       	ldi	r26, 0x3B	; 59
    3d7c:	b0 e0       	ldi	r27, 0x00	; 0
    3d7e:	eb e3       	ldi	r30, 0x3B	; 59
    3d80:	f0 e0       	ldi	r31, 0x00	; 0
    3d82:	80 81       	ld	r24, Z
    3d84:	48 2f       	mov	r20, r24
    3d86:	8a 81       	ldd	r24, Y+2	; 0x02
    3d88:	28 2f       	mov	r18, r24
    3d8a:	30 e0       	ldi	r19, 0x00	; 0
    3d8c:	81 e0       	ldi	r24, 0x01	; 1
    3d8e:	90 e0       	ldi	r25, 0x00	; 0
    3d90:	02 2e       	mov	r0, r18
    3d92:	02 c0       	rjmp	.+4      	; 0x3d98 <DIO_voidSetPinVal+0x8e>
    3d94:	88 0f       	add	r24, r24
    3d96:	99 1f       	adc	r25, r25
    3d98:	0a 94       	dec	r0
    3d9a:	e2 f7       	brpl	.-8      	; 0x3d94 <DIO_voidSetPinVal+0x8a>
    3d9c:	84 2b       	or	r24, r20
    3d9e:	8c 93       	st	X, r24
    3da0:	b3 c0       	rjmp	.+358    	; 0x3f08 <DIO_voidSetPinVal+0x1fe>
			case DIO_PORTB: SET_BIT(PORTB_REG,PinId); break;
    3da2:	a8 e3       	ldi	r26, 0x38	; 56
    3da4:	b0 e0       	ldi	r27, 0x00	; 0
    3da6:	e8 e3       	ldi	r30, 0x38	; 56
    3da8:	f0 e0       	ldi	r31, 0x00	; 0
    3daa:	80 81       	ld	r24, Z
    3dac:	48 2f       	mov	r20, r24
    3dae:	8a 81       	ldd	r24, Y+2	; 0x02
    3db0:	28 2f       	mov	r18, r24
    3db2:	30 e0       	ldi	r19, 0x00	; 0
    3db4:	81 e0       	ldi	r24, 0x01	; 1
    3db6:	90 e0       	ldi	r25, 0x00	; 0
    3db8:	02 2e       	mov	r0, r18
    3dba:	02 c0       	rjmp	.+4      	; 0x3dc0 <DIO_voidSetPinVal+0xb6>
    3dbc:	88 0f       	add	r24, r24
    3dbe:	99 1f       	adc	r25, r25
    3dc0:	0a 94       	dec	r0
    3dc2:	e2 f7       	brpl	.-8      	; 0x3dbc <DIO_voidSetPinVal+0xb2>
    3dc4:	84 2b       	or	r24, r20
    3dc6:	8c 93       	st	X, r24
    3dc8:	9f c0       	rjmp	.+318    	; 0x3f08 <DIO_voidSetPinVal+0x1fe>
			case DIO_PORTC: SET_BIT(PORTC_REG,PinId); break;
    3dca:	a5 e3       	ldi	r26, 0x35	; 53
    3dcc:	b0 e0       	ldi	r27, 0x00	; 0
    3dce:	e5 e3       	ldi	r30, 0x35	; 53
    3dd0:	f0 e0       	ldi	r31, 0x00	; 0
    3dd2:	80 81       	ld	r24, Z
    3dd4:	48 2f       	mov	r20, r24
    3dd6:	8a 81       	ldd	r24, Y+2	; 0x02
    3dd8:	28 2f       	mov	r18, r24
    3dda:	30 e0       	ldi	r19, 0x00	; 0
    3ddc:	81 e0       	ldi	r24, 0x01	; 1
    3dde:	90 e0       	ldi	r25, 0x00	; 0
    3de0:	02 2e       	mov	r0, r18
    3de2:	02 c0       	rjmp	.+4      	; 0x3de8 <DIO_voidSetPinVal+0xde>
    3de4:	88 0f       	add	r24, r24
    3de6:	99 1f       	adc	r25, r25
    3de8:	0a 94       	dec	r0
    3dea:	e2 f7       	brpl	.-8      	; 0x3de4 <DIO_voidSetPinVal+0xda>
    3dec:	84 2b       	or	r24, r20
    3dee:	8c 93       	st	X, r24
    3df0:	8b c0       	rjmp	.+278    	; 0x3f08 <DIO_voidSetPinVal+0x1fe>
			case DIO_PORTD: SET_BIT(PORTD_REG,PinId); break;
    3df2:	a2 e3       	ldi	r26, 0x32	; 50
    3df4:	b0 e0       	ldi	r27, 0x00	; 0
    3df6:	e2 e3       	ldi	r30, 0x32	; 50
    3df8:	f0 e0       	ldi	r31, 0x00	; 0
    3dfa:	80 81       	ld	r24, Z
    3dfc:	48 2f       	mov	r20, r24
    3dfe:	8a 81       	ldd	r24, Y+2	; 0x02
    3e00:	28 2f       	mov	r18, r24
    3e02:	30 e0       	ldi	r19, 0x00	; 0
    3e04:	81 e0       	ldi	r24, 0x01	; 1
    3e06:	90 e0       	ldi	r25, 0x00	; 0
    3e08:	02 2e       	mov	r0, r18
    3e0a:	02 c0       	rjmp	.+4      	; 0x3e10 <DIO_voidSetPinVal+0x106>
    3e0c:	88 0f       	add	r24, r24
    3e0e:	99 1f       	adc	r25, r25
    3e10:	0a 94       	dec	r0
    3e12:	e2 f7       	brpl	.-8      	; 0x3e0c <DIO_voidSetPinVal+0x102>
    3e14:	84 2b       	or	r24, r20
    3e16:	8c 93       	st	X, r24
    3e18:	77 c0       	rjmp	.+238    	; 0x3f08 <DIO_voidSetPinVal+0x1fe>
			}
		}
		else if (PinVal == DIO_LOW)
    3e1a:	8b 81       	ldd	r24, Y+3	; 0x03
    3e1c:	88 23       	and	r24, r24
    3e1e:	09 f0       	breq	.+2      	; 0x3e22 <DIO_voidSetPinVal+0x118>
    3e20:	73 c0       	rjmp	.+230    	; 0x3f08 <DIO_voidSetPinVal+0x1fe>
		{
			switch(PortId)
    3e22:	89 81       	ldd	r24, Y+1	; 0x01
    3e24:	28 2f       	mov	r18, r24
    3e26:	30 e0       	ldi	r19, 0x00	; 0
    3e28:	3d 83       	std	Y+5, r19	; 0x05
    3e2a:	2c 83       	std	Y+4, r18	; 0x04
    3e2c:	8c 81       	ldd	r24, Y+4	; 0x04
    3e2e:	9d 81       	ldd	r25, Y+5	; 0x05
    3e30:	81 30       	cpi	r24, 0x01	; 1
    3e32:	91 05       	cpc	r25, r1
    3e34:	59 f1       	breq	.+86     	; 0x3e8c <DIO_voidSetPinVal+0x182>
    3e36:	2c 81       	ldd	r18, Y+4	; 0x04
    3e38:	3d 81       	ldd	r19, Y+5	; 0x05
    3e3a:	22 30       	cpi	r18, 0x02	; 2
    3e3c:	31 05       	cpc	r19, r1
    3e3e:	2c f4       	brge	.+10     	; 0x3e4a <DIO_voidSetPinVal+0x140>
    3e40:	8c 81       	ldd	r24, Y+4	; 0x04
    3e42:	9d 81       	ldd	r25, Y+5	; 0x05
    3e44:	00 97       	sbiw	r24, 0x00	; 0
    3e46:	69 f0       	breq	.+26     	; 0x3e62 <DIO_voidSetPinVal+0x158>
    3e48:	5f c0       	rjmp	.+190    	; 0x3f08 <DIO_voidSetPinVal+0x1fe>
    3e4a:	2c 81       	ldd	r18, Y+4	; 0x04
    3e4c:	3d 81       	ldd	r19, Y+5	; 0x05
    3e4e:	22 30       	cpi	r18, 0x02	; 2
    3e50:	31 05       	cpc	r19, r1
    3e52:	89 f1       	breq	.+98     	; 0x3eb6 <DIO_voidSetPinVal+0x1ac>
    3e54:	8c 81       	ldd	r24, Y+4	; 0x04
    3e56:	9d 81       	ldd	r25, Y+5	; 0x05
    3e58:	83 30       	cpi	r24, 0x03	; 3
    3e5a:	91 05       	cpc	r25, r1
    3e5c:	09 f4       	brne	.+2      	; 0x3e60 <DIO_voidSetPinVal+0x156>
    3e5e:	40 c0       	rjmp	.+128    	; 0x3ee0 <DIO_voidSetPinVal+0x1d6>
    3e60:	53 c0       	rjmp	.+166    	; 0x3f08 <DIO_voidSetPinVal+0x1fe>
			{
			case DIO_PORTA: CLR_BIT(PORTA_REG,PinId); break;
    3e62:	ab e3       	ldi	r26, 0x3B	; 59
    3e64:	b0 e0       	ldi	r27, 0x00	; 0
    3e66:	eb e3       	ldi	r30, 0x3B	; 59
    3e68:	f0 e0       	ldi	r31, 0x00	; 0
    3e6a:	80 81       	ld	r24, Z
    3e6c:	48 2f       	mov	r20, r24
    3e6e:	8a 81       	ldd	r24, Y+2	; 0x02
    3e70:	28 2f       	mov	r18, r24
    3e72:	30 e0       	ldi	r19, 0x00	; 0
    3e74:	81 e0       	ldi	r24, 0x01	; 1
    3e76:	90 e0       	ldi	r25, 0x00	; 0
    3e78:	02 2e       	mov	r0, r18
    3e7a:	02 c0       	rjmp	.+4      	; 0x3e80 <DIO_voidSetPinVal+0x176>
    3e7c:	88 0f       	add	r24, r24
    3e7e:	99 1f       	adc	r25, r25
    3e80:	0a 94       	dec	r0
    3e82:	e2 f7       	brpl	.-8      	; 0x3e7c <DIO_voidSetPinVal+0x172>
    3e84:	80 95       	com	r24
    3e86:	84 23       	and	r24, r20
    3e88:	8c 93       	st	X, r24
    3e8a:	3e c0       	rjmp	.+124    	; 0x3f08 <DIO_voidSetPinVal+0x1fe>
			case DIO_PORTB: CLR_BIT(PORTB_REG,PinId); break;
    3e8c:	a8 e3       	ldi	r26, 0x38	; 56
    3e8e:	b0 e0       	ldi	r27, 0x00	; 0
    3e90:	e8 e3       	ldi	r30, 0x38	; 56
    3e92:	f0 e0       	ldi	r31, 0x00	; 0
    3e94:	80 81       	ld	r24, Z
    3e96:	48 2f       	mov	r20, r24
    3e98:	8a 81       	ldd	r24, Y+2	; 0x02
    3e9a:	28 2f       	mov	r18, r24
    3e9c:	30 e0       	ldi	r19, 0x00	; 0
    3e9e:	81 e0       	ldi	r24, 0x01	; 1
    3ea0:	90 e0       	ldi	r25, 0x00	; 0
    3ea2:	02 2e       	mov	r0, r18
    3ea4:	02 c0       	rjmp	.+4      	; 0x3eaa <DIO_voidSetPinVal+0x1a0>
    3ea6:	88 0f       	add	r24, r24
    3ea8:	99 1f       	adc	r25, r25
    3eaa:	0a 94       	dec	r0
    3eac:	e2 f7       	brpl	.-8      	; 0x3ea6 <DIO_voidSetPinVal+0x19c>
    3eae:	80 95       	com	r24
    3eb0:	84 23       	and	r24, r20
    3eb2:	8c 93       	st	X, r24
    3eb4:	29 c0       	rjmp	.+82     	; 0x3f08 <DIO_voidSetPinVal+0x1fe>
			case DIO_PORTC: CLR_BIT(PORTC_REG,PinId); break;
    3eb6:	a5 e3       	ldi	r26, 0x35	; 53
    3eb8:	b0 e0       	ldi	r27, 0x00	; 0
    3eba:	e5 e3       	ldi	r30, 0x35	; 53
    3ebc:	f0 e0       	ldi	r31, 0x00	; 0
    3ebe:	80 81       	ld	r24, Z
    3ec0:	48 2f       	mov	r20, r24
    3ec2:	8a 81       	ldd	r24, Y+2	; 0x02
    3ec4:	28 2f       	mov	r18, r24
    3ec6:	30 e0       	ldi	r19, 0x00	; 0
    3ec8:	81 e0       	ldi	r24, 0x01	; 1
    3eca:	90 e0       	ldi	r25, 0x00	; 0
    3ecc:	02 2e       	mov	r0, r18
    3ece:	02 c0       	rjmp	.+4      	; 0x3ed4 <DIO_voidSetPinVal+0x1ca>
    3ed0:	88 0f       	add	r24, r24
    3ed2:	99 1f       	adc	r25, r25
    3ed4:	0a 94       	dec	r0
    3ed6:	e2 f7       	brpl	.-8      	; 0x3ed0 <DIO_voidSetPinVal+0x1c6>
    3ed8:	80 95       	com	r24
    3eda:	84 23       	and	r24, r20
    3edc:	8c 93       	st	X, r24
    3ede:	14 c0       	rjmp	.+40     	; 0x3f08 <DIO_voidSetPinVal+0x1fe>
			case DIO_PORTD: CLR_BIT(PORTD_REG,PinId); break;
    3ee0:	a2 e3       	ldi	r26, 0x32	; 50
    3ee2:	b0 e0       	ldi	r27, 0x00	; 0
    3ee4:	e2 e3       	ldi	r30, 0x32	; 50
    3ee6:	f0 e0       	ldi	r31, 0x00	; 0
    3ee8:	80 81       	ld	r24, Z
    3eea:	48 2f       	mov	r20, r24
    3eec:	8a 81       	ldd	r24, Y+2	; 0x02
    3eee:	28 2f       	mov	r18, r24
    3ef0:	30 e0       	ldi	r19, 0x00	; 0
    3ef2:	81 e0       	ldi	r24, 0x01	; 1
    3ef4:	90 e0       	ldi	r25, 0x00	; 0
    3ef6:	02 2e       	mov	r0, r18
    3ef8:	02 c0       	rjmp	.+4      	; 0x3efe <DIO_voidSetPinVal+0x1f4>
    3efa:	88 0f       	add	r24, r24
    3efc:	99 1f       	adc	r25, r25
    3efe:	0a 94       	dec	r0
    3f00:	e2 f7       	brpl	.-8      	; 0x3efa <DIO_voidSetPinVal+0x1f0>
    3f02:	80 95       	com	r24
    3f04:	84 23       	and	r24, r20
    3f06:	8c 93       	st	X, r24
	}
	else
	{
		//report error
	}
}
    3f08:	27 96       	adiw	r28, 0x07	; 7
    3f0a:	0f b6       	in	r0, 0x3f	; 63
    3f0c:	f8 94       	cli
    3f0e:	de bf       	out	0x3e, r29	; 62
    3f10:	0f be       	out	0x3f, r0	; 63
    3f12:	cd bf       	out	0x3d, r28	; 61
    3f14:	cf 91       	pop	r28
    3f16:	df 91       	pop	r29
    3f18:	08 95       	ret

00003f1a <DIO_voidSetPortDir>:

void DIO_voidSetPortDir (u8 PortId , u8 PortDir)
{
    3f1a:	df 93       	push	r29
    3f1c:	cf 93       	push	r28
    3f1e:	00 d0       	rcall	.+0      	; 0x3f20 <DIO_voidSetPortDir+0x6>
    3f20:	00 d0       	rcall	.+0      	; 0x3f22 <DIO_voidSetPortDir+0x8>
    3f22:	cd b7       	in	r28, 0x3d	; 61
    3f24:	de b7       	in	r29, 0x3e	; 62
    3f26:	89 83       	std	Y+1, r24	; 0x01
    3f28:	6a 83       	std	Y+2, r22	; 0x02
	/*check from allowed value for PortId */
	if (PortId <= DIO_PORTD)
    3f2a:	89 81       	ldd	r24, Y+1	; 0x01
    3f2c:	84 30       	cpi	r24, 0x04	; 4
    3f2e:	90 f5       	brcc	.+100    	; 0x3f94 <DIO_voidSetPortDir+0x7a>
	{
		switch(PortId)
    3f30:	89 81       	ldd	r24, Y+1	; 0x01
    3f32:	28 2f       	mov	r18, r24
    3f34:	30 e0       	ldi	r19, 0x00	; 0
    3f36:	3c 83       	std	Y+4, r19	; 0x04
    3f38:	2b 83       	std	Y+3, r18	; 0x03
    3f3a:	8b 81       	ldd	r24, Y+3	; 0x03
    3f3c:	9c 81       	ldd	r25, Y+4	; 0x04
    3f3e:	81 30       	cpi	r24, 0x01	; 1
    3f40:	91 05       	cpc	r25, r1
    3f42:	d1 f0       	breq	.+52     	; 0x3f78 <DIO_voidSetPortDir+0x5e>
    3f44:	2b 81       	ldd	r18, Y+3	; 0x03
    3f46:	3c 81       	ldd	r19, Y+4	; 0x04
    3f48:	22 30       	cpi	r18, 0x02	; 2
    3f4a:	31 05       	cpc	r19, r1
    3f4c:	2c f4       	brge	.+10     	; 0x3f58 <DIO_voidSetPortDir+0x3e>
    3f4e:	8b 81       	ldd	r24, Y+3	; 0x03
    3f50:	9c 81       	ldd	r25, Y+4	; 0x04
    3f52:	00 97       	sbiw	r24, 0x00	; 0
    3f54:	61 f0       	breq	.+24     	; 0x3f6e <DIO_voidSetPortDir+0x54>
    3f56:	1e c0       	rjmp	.+60     	; 0x3f94 <DIO_voidSetPortDir+0x7a>
    3f58:	2b 81       	ldd	r18, Y+3	; 0x03
    3f5a:	3c 81       	ldd	r19, Y+4	; 0x04
    3f5c:	22 30       	cpi	r18, 0x02	; 2
    3f5e:	31 05       	cpc	r19, r1
    3f60:	81 f0       	breq	.+32     	; 0x3f82 <DIO_voidSetPortDir+0x68>
    3f62:	8b 81       	ldd	r24, Y+3	; 0x03
    3f64:	9c 81       	ldd	r25, Y+4	; 0x04
    3f66:	83 30       	cpi	r24, 0x03	; 3
    3f68:	91 05       	cpc	r25, r1
    3f6a:	81 f0       	breq	.+32     	; 0x3f8c <DIO_voidSetPortDir+0x72>
    3f6c:	13 c0       	rjmp	.+38     	; 0x3f94 <DIO_voidSetPortDir+0x7a>
		{
		case DIO_PORTA: DDRA_REG = PortDir; break;
    3f6e:	ea e3       	ldi	r30, 0x3A	; 58
    3f70:	f0 e0       	ldi	r31, 0x00	; 0
    3f72:	8a 81       	ldd	r24, Y+2	; 0x02
    3f74:	80 83       	st	Z, r24
    3f76:	0e c0       	rjmp	.+28     	; 0x3f94 <DIO_voidSetPortDir+0x7a>
		case DIO_PORTB: DDRB_REG = PortDir; break;
    3f78:	e7 e3       	ldi	r30, 0x37	; 55
    3f7a:	f0 e0       	ldi	r31, 0x00	; 0
    3f7c:	8a 81       	ldd	r24, Y+2	; 0x02
    3f7e:	80 83       	st	Z, r24
    3f80:	09 c0       	rjmp	.+18     	; 0x3f94 <DIO_voidSetPortDir+0x7a>
		case DIO_PORTC: DDRC_REG = PortDir; break;
    3f82:	e4 e3       	ldi	r30, 0x34	; 52
    3f84:	f0 e0       	ldi	r31, 0x00	; 0
    3f86:	8a 81       	ldd	r24, Y+2	; 0x02
    3f88:	80 83       	st	Z, r24
    3f8a:	04 c0       	rjmp	.+8      	; 0x3f94 <DIO_voidSetPortDir+0x7a>
		case DIO_PORTD: DDRD_REG = PortDir; break;
    3f8c:	e1 e3       	ldi	r30, 0x31	; 49
    3f8e:	f0 e0       	ldi	r31, 0x00	; 0
    3f90:	8a 81       	ldd	r24, Y+2	; 0x02
    3f92:	80 83       	st	Z, r24
	}
	else
	{
		//report error
	}
}
    3f94:	0f 90       	pop	r0
    3f96:	0f 90       	pop	r0
    3f98:	0f 90       	pop	r0
    3f9a:	0f 90       	pop	r0
    3f9c:	cf 91       	pop	r28
    3f9e:	df 91       	pop	r29
    3fa0:	08 95       	ret

00003fa2 <DIO_voidSetPortVal>:

void DIO_voidSetPortVal (u8 PortId , u8 PortVal)
{
    3fa2:	df 93       	push	r29
    3fa4:	cf 93       	push	r28
    3fa6:	00 d0       	rcall	.+0      	; 0x3fa8 <DIO_voidSetPortVal+0x6>
    3fa8:	00 d0       	rcall	.+0      	; 0x3faa <DIO_voidSetPortVal+0x8>
    3faa:	cd b7       	in	r28, 0x3d	; 61
    3fac:	de b7       	in	r29, 0x3e	; 62
    3fae:	89 83       	std	Y+1, r24	; 0x01
    3fb0:	6a 83       	std	Y+2, r22	; 0x02
	/*check from allowed value for PortId */
	if (PortId <= DIO_PORTD)
    3fb2:	89 81       	ldd	r24, Y+1	; 0x01
    3fb4:	84 30       	cpi	r24, 0x04	; 4
    3fb6:	90 f5       	brcc	.+100    	; 0x401c <DIO_voidSetPortVal+0x7a>
	{
		switch(PortId)
    3fb8:	89 81       	ldd	r24, Y+1	; 0x01
    3fba:	28 2f       	mov	r18, r24
    3fbc:	30 e0       	ldi	r19, 0x00	; 0
    3fbe:	3c 83       	std	Y+4, r19	; 0x04
    3fc0:	2b 83       	std	Y+3, r18	; 0x03
    3fc2:	8b 81       	ldd	r24, Y+3	; 0x03
    3fc4:	9c 81       	ldd	r25, Y+4	; 0x04
    3fc6:	81 30       	cpi	r24, 0x01	; 1
    3fc8:	91 05       	cpc	r25, r1
    3fca:	d1 f0       	breq	.+52     	; 0x4000 <DIO_voidSetPortVal+0x5e>
    3fcc:	2b 81       	ldd	r18, Y+3	; 0x03
    3fce:	3c 81       	ldd	r19, Y+4	; 0x04
    3fd0:	22 30       	cpi	r18, 0x02	; 2
    3fd2:	31 05       	cpc	r19, r1
    3fd4:	2c f4       	brge	.+10     	; 0x3fe0 <DIO_voidSetPortVal+0x3e>
    3fd6:	8b 81       	ldd	r24, Y+3	; 0x03
    3fd8:	9c 81       	ldd	r25, Y+4	; 0x04
    3fda:	00 97       	sbiw	r24, 0x00	; 0
    3fdc:	61 f0       	breq	.+24     	; 0x3ff6 <DIO_voidSetPortVal+0x54>
    3fde:	1e c0       	rjmp	.+60     	; 0x401c <DIO_voidSetPortVal+0x7a>
    3fe0:	2b 81       	ldd	r18, Y+3	; 0x03
    3fe2:	3c 81       	ldd	r19, Y+4	; 0x04
    3fe4:	22 30       	cpi	r18, 0x02	; 2
    3fe6:	31 05       	cpc	r19, r1
    3fe8:	81 f0       	breq	.+32     	; 0x400a <DIO_voidSetPortVal+0x68>
    3fea:	8b 81       	ldd	r24, Y+3	; 0x03
    3fec:	9c 81       	ldd	r25, Y+4	; 0x04
    3fee:	83 30       	cpi	r24, 0x03	; 3
    3ff0:	91 05       	cpc	r25, r1
    3ff2:	81 f0       	breq	.+32     	; 0x4014 <DIO_voidSetPortVal+0x72>
    3ff4:	13 c0       	rjmp	.+38     	; 0x401c <DIO_voidSetPortVal+0x7a>
		{
		case DIO_PORTA: PORTA_REG = PortVal; break;
    3ff6:	eb e3       	ldi	r30, 0x3B	; 59
    3ff8:	f0 e0       	ldi	r31, 0x00	; 0
    3ffa:	8a 81       	ldd	r24, Y+2	; 0x02
    3ffc:	80 83       	st	Z, r24
    3ffe:	0e c0       	rjmp	.+28     	; 0x401c <DIO_voidSetPortVal+0x7a>
		case DIO_PORTB: PORTB_REG = PortVal; break;
    4000:	e8 e3       	ldi	r30, 0x38	; 56
    4002:	f0 e0       	ldi	r31, 0x00	; 0
    4004:	8a 81       	ldd	r24, Y+2	; 0x02
    4006:	80 83       	st	Z, r24
    4008:	09 c0       	rjmp	.+18     	; 0x401c <DIO_voidSetPortVal+0x7a>
		case DIO_PORTC: PORTC_REG = PortVal; break;
    400a:	e5 e3       	ldi	r30, 0x35	; 53
    400c:	f0 e0       	ldi	r31, 0x00	; 0
    400e:	8a 81       	ldd	r24, Y+2	; 0x02
    4010:	80 83       	st	Z, r24
    4012:	04 c0       	rjmp	.+8      	; 0x401c <DIO_voidSetPortVal+0x7a>
		case DIO_PORTD: PORTD_REG = PortVal; break;
    4014:	e2 e3       	ldi	r30, 0x32	; 50
    4016:	f0 e0       	ldi	r31, 0x00	; 0
    4018:	8a 81       	ldd	r24, Y+2	; 0x02
    401a:	80 83       	st	Z, r24
	}
	else
	{
		//report error
	}
}
    401c:	0f 90       	pop	r0
    401e:	0f 90       	pop	r0
    4020:	0f 90       	pop	r0
    4022:	0f 90       	pop	r0
    4024:	cf 91       	pop	r28
    4026:	df 91       	pop	r29
    4028:	08 95       	ret

0000402a <DIO_u8GetPinVal>:

u8 DIO_u8GetPinVal (u8 PortId , u8 PinId)
{
    402a:	df 93       	push	r29
    402c:	cf 93       	push	r28
    402e:	00 d0       	rcall	.+0      	; 0x4030 <DIO_u8GetPinVal+0x6>
    4030:	00 d0       	rcall	.+0      	; 0x4032 <DIO_u8GetPinVal+0x8>
    4032:	0f 92       	push	r0
    4034:	cd b7       	in	r28, 0x3d	; 61
    4036:	de b7       	in	r29, 0x3e	; 62
    4038:	8a 83       	std	Y+2, r24	; 0x02
    403a:	6b 83       	std	Y+3, r22	; 0x03
	u8 Result;
	/*check from allowed values for PortId & PinId*/
	if ((PortId <= DIO_PORTD) && (PinId <= DIO_PIN7))
    403c:	8a 81       	ldd	r24, Y+2	; 0x02
    403e:	84 30       	cpi	r24, 0x04	; 4
    4040:	08 f0       	brcs	.+2      	; 0x4044 <DIO_u8GetPinVal+0x1a>
    4042:	6b c0       	rjmp	.+214    	; 0x411a <DIO_u8GetPinVal+0xf0>
    4044:	8b 81       	ldd	r24, Y+3	; 0x03
    4046:	88 30       	cpi	r24, 0x08	; 8
    4048:	08 f0       	brcs	.+2      	; 0x404c <DIO_u8GetPinVal+0x22>
    404a:	67 c0       	rjmp	.+206    	; 0x411a <DIO_u8GetPinVal+0xf0>
	{
		switch(PortId)
    404c:	8a 81       	ldd	r24, Y+2	; 0x02
    404e:	28 2f       	mov	r18, r24
    4050:	30 e0       	ldi	r19, 0x00	; 0
    4052:	3d 83       	std	Y+5, r19	; 0x05
    4054:	2c 83       	std	Y+4, r18	; 0x04
    4056:	4c 81       	ldd	r20, Y+4	; 0x04
    4058:	5d 81       	ldd	r21, Y+5	; 0x05
    405a:	41 30       	cpi	r20, 0x01	; 1
    405c:	51 05       	cpc	r21, r1
    405e:	41 f1       	breq	.+80     	; 0x40b0 <DIO_u8GetPinVal+0x86>
    4060:	8c 81       	ldd	r24, Y+4	; 0x04
    4062:	9d 81       	ldd	r25, Y+5	; 0x05
    4064:	82 30       	cpi	r24, 0x02	; 2
    4066:	91 05       	cpc	r25, r1
    4068:	34 f4       	brge	.+12     	; 0x4076 <DIO_u8GetPinVal+0x4c>
    406a:	2c 81       	ldd	r18, Y+4	; 0x04
    406c:	3d 81       	ldd	r19, Y+5	; 0x05
    406e:	21 15       	cp	r18, r1
    4070:	31 05       	cpc	r19, r1
    4072:	61 f0       	breq	.+24     	; 0x408c <DIO_u8GetPinVal+0x62>
    4074:	52 c0       	rjmp	.+164    	; 0x411a <DIO_u8GetPinVal+0xf0>
    4076:	4c 81       	ldd	r20, Y+4	; 0x04
    4078:	5d 81       	ldd	r21, Y+5	; 0x05
    407a:	42 30       	cpi	r20, 0x02	; 2
    407c:	51 05       	cpc	r21, r1
    407e:	51 f1       	breq	.+84     	; 0x40d4 <DIO_u8GetPinVal+0xaa>
    4080:	8c 81       	ldd	r24, Y+4	; 0x04
    4082:	9d 81       	ldd	r25, Y+5	; 0x05
    4084:	83 30       	cpi	r24, 0x03	; 3
    4086:	91 05       	cpc	r25, r1
    4088:	b9 f1       	breq	.+110    	; 0x40f8 <DIO_u8GetPinVal+0xce>
    408a:	47 c0       	rjmp	.+142    	; 0x411a <DIO_u8GetPinVal+0xf0>
		{
		case DIO_PORTA: Result = GET_BIT(PINA_REG,PinId); break;
    408c:	e9 e3       	ldi	r30, 0x39	; 57
    408e:	f0 e0       	ldi	r31, 0x00	; 0
    4090:	80 81       	ld	r24, Z
    4092:	28 2f       	mov	r18, r24
    4094:	30 e0       	ldi	r19, 0x00	; 0
    4096:	8b 81       	ldd	r24, Y+3	; 0x03
    4098:	88 2f       	mov	r24, r24
    409a:	90 e0       	ldi	r25, 0x00	; 0
    409c:	a9 01       	movw	r20, r18
    409e:	02 c0       	rjmp	.+4      	; 0x40a4 <DIO_u8GetPinVal+0x7a>
    40a0:	55 95       	asr	r21
    40a2:	47 95       	ror	r20
    40a4:	8a 95       	dec	r24
    40a6:	e2 f7       	brpl	.-8      	; 0x40a0 <DIO_u8GetPinVal+0x76>
    40a8:	ca 01       	movw	r24, r20
    40aa:	81 70       	andi	r24, 0x01	; 1
    40ac:	89 83       	std	Y+1, r24	; 0x01
    40ae:	35 c0       	rjmp	.+106    	; 0x411a <DIO_u8GetPinVal+0xf0>
		case DIO_PORTB: Result = GET_BIT(PINB_REG,PinId); break;
    40b0:	e6 e3       	ldi	r30, 0x36	; 54
    40b2:	f0 e0       	ldi	r31, 0x00	; 0
    40b4:	80 81       	ld	r24, Z
    40b6:	28 2f       	mov	r18, r24
    40b8:	30 e0       	ldi	r19, 0x00	; 0
    40ba:	8b 81       	ldd	r24, Y+3	; 0x03
    40bc:	88 2f       	mov	r24, r24
    40be:	90 e0       	ldi	r25, 0x00	; 0
    40c0:	a9 01       	movw	r20, r18
    40c2:	02 c0       	rjmp	.+4      	; 0x40c8 <DIO_u8GetPinVal+0x9e>
    40c4:	55 95       	asr	r21
    40c6:	47 95       	ror	r20
    40c8:	8a 95       	dec	r24
    40ca:	e2 f7       	brpl	.-8      	; 0x40c4 <DIO_u8GetPinVal+0x9a>
    40cc:	ca 01       	movw	r24, r20
    40ce:	81 70       	andi	r24, 0x01	; 1
    40d0:	89 83       	std	Y+1, r24	; 0x01
    40d2:	23 c0       	rjmp	.+70     	; 0x411a <DIO_u8GetPinVal+0xf0>
		case DIO_PORTC: Result = GET_BIT(PINC_REG,PinId); break;
    40d4:	e3 e3       	ldi	r30, 0x33	; 51
    40d6:	f0 e0       	ldi	r31, 0x00	; 0
    40d8:	80 81       	ld	r24, Z
    40da:	28 2f       	mov	r18, r24
    40dc:	30 e0       	ldi	r19, 0x00	; 0
    40de:	8b 81       	ldd	r24, Y+3	; 0x03
    40e0:	88 2f       	mov	r24, r24
    40e2:	90 e0       	ldi	r25, 0x00	; 0
    40e4:	a9 01       	movw	r20, r18
    40e6:	02 c0       	rjmp	.+4      	; 0x40ec <DIO_u8GetPinVal+0xc2>
    40e8:	55 95       	asr	r21
    40ea:	47 95       	ror	r20
    40ec:	8a 95       	dec	r24
    40ee:	e2 f7       	brpl	.-8      	; 0x40e8 <DIO_u8GetPinVal+0xbe>
    40f0:	ca 01       	movw	r24, r20
    40f2:	81 70       	andi	r24, 0x01	; 1
    40f4:	89 83       	std	Y+1, r24	; 0x01
    40f6:	11 c0       	rjmp	.+34     	; 0x411a <DIO_u8GetPinVal+0xf0>
		case DIO_PORTD: Result = GET_BIT(PIND_REG,PinId); break;
    40f8:	e0 e3       	ldi	r30, 0x30	; 48
    40fa:	f0 e0       	ldi	r31, 0x00	; 0
    40fc:	80 81       	ld	r24, Z
    40fe:	28 2f       	mov	r18, r24
    4100:	30 e0       	ldi	r19, 0x00	; 0
    4102:	8b 81       	ldd	r24, Y+3	; 0x03
    4104:	88 2f       	mov	r24, r24
    4106:	90 e0       	ldi	r25, 0x00	; 0
    4108:	a9 01       	movw	r20, r18
    410a:	02 c0       	rjmp	.+4      	; 0x4110 <DIO_u8GetPinVal+0xe6>
    410c:	55 95       	asr	r21
    410e:	47 95       	ror	r20
    4110:	8a 95       	dec	r24
    4112:	e2 f7       	brpl	.-8      	; 0x410c <DIO_u8GetPinVal+0xe2>
    4114:	ca 01       	movw	r24, r20
    4116:	81 70       	andi	r24, 0x01	; 1
    4118:	89 83       	std	Y+1, r24	; 0x01

	else
	{
		//report error
	}
	return Result;
    411a:	89 81       	ldd	r24, Y+1	; 0x01
}
    411c:	0f 90       	pop	r0
    411e:	0f 90       	pop	r0
    4120:	0f 90       	pop	r0
    4122:	0f 90       	pop	r0
    4124:	0f 90       	pop	r0
    4126:	cf 91       	pop	r28
    4128:	df 91       	pop	r29
    412a:	08 95       	ret

0000412c <DIO_voidTogglePinVal>:

void DIO_voidTogglePinVal (u8 PortId , u8 PinId )
{
    412c:	df 93       	push	r29
    412e:	cf 93       	push	r28
    4130:	00 d0       	rcall	.+0      	; 0x4132 <DIO_voidTogglePinVal+0x6>
    4132:	00 d0       	rcall	.+0      	; 0x4134 <DIO_voidTogglePinVal+0x8>
    4134:	cd b7       	in	r28, 0x3d	; 61
    4136:	de b7       	in	r29, 0x3e	; 62
    4138:	89 83       	std	Y+1, r24	; 0x01
    413a:	6a 83       	std	Y+2, r22	; 0x02
	/*check from allowed values for PortId & PinId*/
	if ((PortId <= DIO_PORTD) && (PinId <= DIO_PIN7))
    413c:	89 81       	ldd	r24, Y+1	; 0x01
    413e:	84 30       	cpi	r24, 0x04	; 4
    4140:	08 f0       	brcs	.+2      	; 0x4144 <DIO_voidTogglePinVal+0x18>
    4142:	72 c0       	rjmp	.+228    	; 0x4228 <DIO_voidTogglePinVal+0xfc>
    4144:	8a 81       	ldd	r24, Y+2	; 0x02
    4146:	88 30       	cpi	r24, 0x08	; 8
    4148:	08 f0       	brcs	.+2      	; 0x414c <DIO_voidTogglePinVal+0x20>
    414a:	6e c0       	rjmp	.+220    	; 0x4228 <DIO_voidTogglePinVal+0xfc>
	{
		switch(PortId)
    414c:	89 81       	ldd	r24, Y+1	; 0x01
    414e:	28 2f       	mov	r18, r24
    4150:	30 e0       	ldi	r19, 0x00	; 0
    4152:	3c 83       	std	Y+4, r19	; 0x04
    4154:	2b 83       	std	Y+3, r18	; 0x03
    4156:	8b 81       	ldd	r24, Y+3	; 0x03
    4158:	9c 81       	ldd	r25, Y+4	; 0x04
    415a:	81 30       	cpi	r24, 0x01	; 1
    415c:	91 05       	cpc	r25, r1
    415e:	49 f1       	breq	.+82     	; 0x41b2 <DIO_voidTogglePinVal+0x86>
    4160:	2b 81       	ldd	r18, Y+3	; 0x03
    4162:	3c 81       	ldd	r19, Y+4	; 0x04
    4164:	22 30       	cpi	r18, 0x02	; 2
    4166:	31 05       	cpc	r19, r1
    4168:	2c f4       	brge	.+10     	; 0x4174 <DIO_voidTogglePinVal+0x48>
    416a:	8b 81       	ldd	r24, Y+3	; 0x03
    416c:	9c 81       	ldd	r25, Y+4	; 0x04
    416e:	00 97       	sbiw	r24, 0x00	; 0
    4170:	61 f0       	breq	.+24     	; 0x418a <DIO_voidTogglePinVal+0x5e>
    4172:	5a c0       	rjmp	.+180    	; 0x4228 <DIO_voidTogglePinVal+0xfc>
    4174:	2b 81       	ldd	r18, Y+3	; 0x03
    4176:	3c 81       	ldd	r19, Y+4	; 0x04
    4178:	22 30       	cpi	r18, 0x02	; 2
    417a:	31 05       	cpc	r19, r1
    417c:	71 f1       	breq	.+92     	; 0x41da <DIO_voidTogglePinVal+0xae>
    417e:	8b 81       	ldd	r24, Y+3	; 0x03
    4180:	9c 81       	ldd	r25, Y+4	; 0x04
    4182:	83 30       	cpi	r24, 0x03	; 3
    4184:	91 05       	cpc	r25, r1
    4186:	e9 f1       	breq	.+122    	; 0x4202 <DIO_voidTogglePinVal+0xd6>
    4188:	4f c0       	rjmp	.+158    	; 0x4228 <DIO_voidTogglePinVal+0xfc>
		{
		case DIO_PORTA: TOGGLE_BIT(PORTA_REG,PinId); break;
    418a:	ab e3       	ldi	r26, 0x3B	; 59
    418c:	b0 e0       	ldi	r27, 0x00	; 0
    418e:	eb e3       	ldi	r30, 0x3B	; 59
    4190:	f0 e0       	ldi	r31, 0x00	; 0
    4192:	80 81       	ld	r24, Z
    4194:	48 2f       	mov	r20, r24
    4196:	8a 81       	ldd	r24, Y+2	; 0x02
    4198:	28 2f       	mov	r18, r24
    419a:	30 e0       	ldi	r19, 0x00	; 0
    419c:	81 e0       	ldi	r24, 0x01	; 1
    419e:	90 e0       	ldi	r25, 0x00	; 0
    41a0:	02 2e       	mov	r0, r18
    41a2:	02 c0       	rjmp	.+4      	; 0x41a8 <DIO_voidTogglePinVal+0x7c>
    41a4:	88 0f       	add	r24, r24
    41a6:	99 1f       	adc	r25, r25
    41a8:	0a 94       	dec	r0
    41aa:	e2 f7       	brpl	.-8      	; 0x41a4 <DIO_voidTogglePinVal+0x78>
    41ac:	84 27       	eor	r24, r20
    41ae:	8c 93       	st	X, r24
    41b0:	3b c0       	rjmp	.+118    	; 0x4228 <DIO_voidTogglePinVal+0xfc>
		case DIO_PORTB: TOGGLE_BIT(PORTB_REG,PinId); break;
    41b2:	a8 e3       	ldi	r26, 0x38	; 56
    41b4:	b0 e0       	ldi	r27, 0x00	; 0
    41b6:	e8 e3       	ldi	r30, 0x38	; 56
    41b8:	f0 e0       	ldi	r31, 0x00	; 0
    41ba:	80 81       	ld	r24, Z
    41bc:	48 2f       	mov	r20, r24
    41be:	8a 81       	ldd	r24, Y+2	; 0x02
    41c0:	28 2f       	mov	r18, r24
    41c2:	30 e0       	ldi	r19, 0x00	; 0
    41c4:	81 e0       	ldi	r24, 0x01	; 1
    41c6:	90 e0       	ldi	r25, 0x00	; 0
    41c8:	02 2e       	mov	r0, r18
    41ca:	02 c0       	rjmp	.+4      	; 0x41d0 <DIO_voidTogglePinVal+0xa4>
    41cc:	88 0f       	add	r24, r24
    41ce:	99 1f       	adc	r25, r25
    41d0:	0a 94       	dec	r0
    41d2:	e2 f7       	brpl	.-8      	; 0x41cc <DIO_voidTogglePinVal+0xa0>
    41d4:	84 27       	eor	r24, r20
    41d6:	8c 93       	st	X, r24
    41d8:	27 c0       	rjmp	.+78     	; 0x4228 <DIO_voidTogglePinVal+0xfc>
		case DIO_PORTC: TOGGLE_BIT(PORTC_REG,PinId); break;
    41da:	a5 e3       	ldi	r26, 0x35	; 53
    41dc:	b0 e0       	ldi	r27, 0x00	; 0
    41de:	e5 e3       	ldi	r30, 0x35	; 53
    41e0:	f0 e0       	ldi	r31, 0x00	; 0
    41e2:	80 81       	ld	r24, Z
    41e4:	48 2f       	mov	r20, r24
    41e6:	8a 81       	ldd	r24, Y+2	; 0x02
    41e8:	28 2f       	mov	r18, r24
    41ea:	30 e0       	ldi	r19, 0x00	; 0
    41ec:	81 e0       	ldi	r24, 0x01	; 1
    41ee:	90 e0       	ldi	r25, 0x00	; 0
    41f0:	02 2e       	mov	r0, r18
    41f2:	02 c0       	rjmp	.+4      	; 0x41f8 <DIO_voidTogglePinVal+0xcc>
    41f4:	88 0f       	add	r24, r24
    41f6:	99 1f       	adc	r25, r25
    41f8:	0a 94       	dec	r0
    41fa:	e2 f7       	brpl	.-8      	; 0x41f4 <DIO_voidTogglePinVal+0xc8>
    41fc:	84 27       	eor	r24, r20
    41fe:	8c 93       	st	X, r24
    4200:	13 c0       	rjmp	.+38     	; 0x4228 <DIO_voidTogglePinVal+0xfc>
		case DIO_PORTD: TOGGLE_BIT(PORTD_REG,PinId); break;
    4202:	a2 e3       	ldi	r26, 0x32	; 50
    4204:	b0 e0       	ldi	r27, 0x00	; 0
    4206:	e2 e3       	ldi	r30, 0x32	; 50
    4208:	f0 e0       	ldi	r31, 0x00	; 0
    420a:	80 81       	ld	r24, Z
    420c:	48 2f       	mov	r20, r24
    420e:	8a 81       	ldd	r24, Y+2	; 0x02
    4210:	28 2f       	mov	r18, r24
    4212:	30 e0       	ldi	r19, 0x00	; 0
    4214:	81 e0       	ldi	r24, 0x01	; 1
    4216:	90 e0       	ldi	r25, 0x00	; 0
    4218:	02 2e       	mov	r0, r18
    421a:	02 c0       	rjmp	.+4      	; 0x4220 <DIO_voidTogglePinVal+0xf4>
    421c:	88 0f       	add	r24, r24
    421e:	99 1f       	adc	r25, r25
    4220:	0a 94       	dec	r0
    4222:	e2 f7       	brpl	.-8      	; 0x421c <DIO_voidTogglePinVal+0xf0>
    4224:	84 27       	eor	r24, r20
    4226:	8c 93       	st	X, r24
	}
	else
	{
		//report error
	}
}
    4228:	0f 90       	pop	r0
    422a:	0f 90       	pop	r0
    422c:	0f 90       	pop	r0
    422e:	0f 90       	pop	r0
    4230:	cf 91       	pop	r28
    4232:	df 91       	pop	r29
    4234:	08 95       	ret

00004236 <GLOBINT_voidEnable>:
#include "GLOBINT_interface.h"



void GLOBINT_voidEnable(void)
{
    4236:	df 93       	push	r29
    4238:	cf 93       	push	r28
    423a:	cd b7       	in	r28, 0x3d	; 61
    423c:	de b7       	in	r29, 0x3e	; 62
	/* Enable Global Interrupt */
	SET_BIT(SREG_REG , GLOB_INT);
    423e:	af e5       	ldi	r26, 0x5F	; 95
    4240:	b0 e0       	ldi	r27, 0x00	; 0
    4242:	ef e5       	ldi	r30, 0x5F	; 95
    4244:	f0 e0       	ldi	r31, 0x00	; 0
    4246:	80 81       	ld	r24, Z
    4248:	80 68       	ori	r24, 0x80	; 128
    424a:	8c 93       	st	X, r24
}
    424c:	cf 91       	pop	r28
    424e:	df 91       	pop	r29
    4250:	08 95       	ret

00004252 <GLOBINT_voidDisable>:

void GLOBINT_voidDisable(void)
{
    4252:	df 93       	push	r29
    4254:	cf 93       	push	r28
    4256:	cd b7       	in	r28, 0x3d	; 61
    4258:	de b7       	in	r29, 0x3e	; 62
	/* Disable Global Interrupt */
	CLR_BIT(SREG_REG ,GLOB_INT );
    425a:	af e5       	ldi	r26, 0x5F	; 95
    425c:	b0 e0       	ldi	r27, 0x00	; 0
    425e:	ef e5       	ldi	r30, 0x5F	; 95
    4260:	f0 e0       	ldi	r31, 0x00	; 0
    4262:	80 81       	ld	r24, Z
    4264:	8f 77       	andi	r24, 0x7F	; 127
    4266:	8c 93       	st	X, r24
}
    4268:	cf 91       	pop	r28
    426a:	df 91       	pop	r29
    426c:	08 95       	ret

0000426e <KPD_u8GetKeyPressed>:
#include "KPD_interface.h"

static u8 au8KeyPressed[KPD_ROWS][KPD_COLUMNS] = KPD_MATRIX;

u8 KPD_u8GetKeyPressed(void)
{
    426e:	df 93       	push	r29
    4270:	cf 93       	push	r28
    4272:	cd b7       	in	r28, 0x3d	; 61
    4274:	de b7       	in	r29, 0x3e	; 62
    4276:	61 97       	sbiw	r28, 0x11	; 17
    4278:	0f b6       	in	r0, 0x3f	; 63
    427a:	f8 94       	cli
    427c:	de bf       	out	0x3e, r29	; 62
    427e:	0f be       	out	0x3f, r0	; 63
    4280:	cd bf       	out	0x3d, r28	; 61
	u8 u8ColIterator;
	u8 u8RowIterator;
	u8 u8KeyPressed = NULL;
    4282:	1f 86       	std	Y+15, r1	; 0x0f
	/* Loop over keypad columns to apply output"LOW" */
	for(u8ColIterator = KPD_COLUMN1 ; u8ColIterator < (KPD_COLUMNS + KPD_COLUMN1) ; u8ColIterator++)
    4284:	19 8a       	std	Y+17, r1	; 0x11
    4286:	ab c0       	rjmp	.+342    	; 0x43de <KPD_u8GetKeyPressed+0x170>
	{
		/* reset column pin */
		DIO_voidSetPinVal(KPD_COLUMNS_PORT , u8ColIterator ,DIO_LOW);
    4288:	81 e0       	ldi	r24, 0x01	; 1
    428a:	69 89       	ldd	r22, Y+17	; 0x11
    428c:	40 e0       	ldi	r20, 0x00	; 0
    428e:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <DIO_voidSetPinVal>
		for(u8RowIterator = KPD_ROW1 ; u8RowIterator < (KPD_ROWS + KPD_ROW1) ; u8RowIterator++)
    4292:	83 e0       	ldi	r24, 0x03	; 3
    4294:	88 8b       	std	Y+16, r24	; 0x10
    4296:	97 c0       	rjmp	.+302    	; 0x43c6 <KPD_u8GetKeyPressed+0x158>
		{
			/* get row pin status and check if it (HIGH OR LOW) to get key preesed */
			if(DIO_u8GetPinVal(KPD_ROWS_PORT,u8RowIterator) == DIO_LOW)
    4298:	81 e0       	ldi	r24, 0x01	; 1
    429a:	68 89       	ldd	r22, Y+16	; 0x10
    429c:	0e 94 15 20 	call	0x402a	; 0x402a <DIO_u8GetPinVal>
    42a0:	88 23       	and	r24, r24
    42a2:	09 f0       	breq	.+2      	; 0x42a6 <KPD_u8GetKeyPressed+0x38>
    42a4:	8d c0       	rjmp	.+282    	; 0x43c0 <KPD_u8GetKeyPressed+0x152>
			{
				/* get the key pressed value */
				u8KeyPressed = au8KeyPressed[u8RowIterator-KPD_ROW1][u8ColIterator-KPD_COLUMN1];
    42a6:	88 89       	ldd	r24, Y+16	; 0x10
    42a8:	88 2f       	mov	r24, r24
    42aa:	90 e0       	ldi	r25, 0x00	; 0
    42ac:	9c 01       	movw	r18, r24
    42ae:	23 50       	subi	r18, 0x03	; 3
    42b0:	30 40       	sbci	r19, 0x00	; 0
    42b2:	89 89       	ldd	r24, Y+17	; 0x11
    42b4:	48 2f       	mov	r20, r24
    42b6:	50 e0       	ldi	r21, 0x00	; 0
    42b8:	c9 01       	movw	r24, r18
    42ba:	88 0f       	add	r24, r24
    42bc:	99 1f       	adc	r25, r25
    42be:	82 0f       	add	r24, r18
    42c0:	93 1f       	adc	r25, r19
    42c2:	84 0f       	add	r24, r20
    42c4:	95 1f       	adc	r25, r21
    42c6:	fc 01       	movw	r30, r24
    42c8:	e0 58       	subi	r30, 0x80	; 128
    42ca:	fe 4f       	sbci	r31, 0xFE	; 254
    42cc:	80 81       	ld	r24, Z
    42ce:	8f 87       	std	Y+15, r24	; 0x0f
				/* stuck here until key not pressed */
				while(DIO_u8GetPinVal(KPD_ROWS_PORT,u8RowIterator) == DIO_LOW);
    42d0:	81 e0       	ldi	r24, 0x01	; 1
    42d2:	68 89       	ldd	r22, Y+16	; 0x10
    42d4:	0e 94 15 20 	call	0x402a	; 0x402a <DIO_u8GetPinVal>
    42d8:	88 23       	and	r24, r24
    42da:	d1 f3       	breq	.-12     	; 0x42d0 <KPD_u8GetKeyPressed+0x62>
    42dc:	80 e0       	ldi	r24, 0x00	; 0
    42de:	90 e0       	ldi	r25, 0x00	; 0
    42e0:	a0 e2       	ldi	r26, 0x20	; 32
    42e2:	b1 e4       	ldi	r27, 0x41	; 65
    42e4:	8b 87       	std	Y+11, r24	; 0x0b
    42e6:	9c 87       	std	Y+12, r25	; 0x0c
    42e8:	ad 87       	std	Y+13, r26	; 0x0d
    42ea:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    42ec:	6b 85       	ldd	r22, Y+11	; 0x0b
    42ee:	7c 85       	ldd	r23, Y+12	; 0x0c
    42f0:	8d 85       	ldd	r24, Y+13	; 0x0d
    42f2:	9e 85       	ldd	r25, Y+14	; 0x0e
    42f4:	20 e0       	ldi	r18, 0x00	; 0
    42f6:	30 e0       	ldi	r19, 0x00	; 0
    42f8:	4a ef       	ldi	r20, 0xFA	; 250
    42fa:	54 e4       	ldi	r21, 0x44	; 68
    42fc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4300:	dc 01       	movw	r26, r24
    4302:	cb 01       	movw	r24, r22
    4304:	8f 83       	std	Y+7, r24	; 0x07
    4306:	98 87       	std	Y+8, r25	; 0x08
    4308:	a9 87       	std	Y+9, r26	; 0x09
    430a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    430c:	6f 81       	ldd	r22, Y+7	; 0x07
    430e:	78 85       	ldd	r23, Y+8	; 0x08
    4310:	89 85       	ldd	r24, Y+9	; 0x09
    4312:	9a 85       	ldd	r25, Y+10	; 0x0a
    4314:	20 e0       	ldi	r18, 0x00	; 0
    4316:	30 e0       	ldi	r19, 0x00	; 0
    4318:	40 e8       	ldi	r20, 0x80	; 128
    431a:	5f e3       	ldi	r21, 0x3F	; 63
    431c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4320:	88 23       	and	r24, r24
    4322:	2c f4       	brge	.+10     	; 0x432e <KPD_u8GetKeyPressed+0xc0>
		__ticks = 1;
    4324:	81 e0       	ldi	r24, 0x01	; 1
    4326:	90 e0       	ldi	r25, 0x00	; 0
    4328:	9e 83       	std	Y+6, r25	; 0x06
    432a:	8d 83       	std	Y+5, r24	; 0x05
    432c:	3f c0       	rjmp	.+126    	; 0x43ac <KPD_u8GetKeyPressed+0x13e>
	else if (__tmp > 65535)
    432e:	6f 81       	ldd	r22, Y+7	; 0x07
    4330:	78 85       	ldd	r23, Y+8	; 0x08
    4332:	89 85       	ldd	r24, Y+9	; 0x09
    4334:	9a 85       	ldd	r25, Y+10	; 0x0a
    4336:	20 e0       	ldi	r18, 0x00	; 0
    4338:	3f ef       	ldi	r19, 0xFF	; 255
    433a:	4f e7       	ldi	r20, 0x7F	; 127
    433c:	57 e4       	ldi	r21, 0x47	; 71
    433e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4342:	18 16       	cp	r1, r24
    4344:	4c f5       	brge	.+82     	; 0x4398 <KPD_u8GetKeyPressed+0x12a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4346:	6b 85       	ldd	r22, Y+11	; 0x0b
    4348:	7c 85       	ldd	r23, Y+12	; 0x0c
    434a:	8d 85       	ldd	r24, Y+13	; 0x0d
    434c:	9e 85       	ldd	r25, Y+14	; 0x0e
    434e:	20 e0       	ldi	r18, 0x00	; 0
    4350:	30 e0       	ldi	r19, 0x00	; 0
    4352:	40 e2       	ldi	r20, 0x20	; 32
    4354:	51 e4       	ldi	r21, 0x41	; 65
    4356:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    435a:	dc 01       	movw	r26, r24
    435c:	cb 01       	movw	r24, r22
    435e:	bc 01       	movw	r22, r24
    4360:	cd 01       	movw	r24, r26
    4362:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4366:	dc 01       	movw	r26, r24
    4368:	cb 01       	movw	r24, r22
    436a:	9e 83       	std	Y+6, r25	; 0x06
    436c:	8d 83       	std	Y+5, r24	; 0x05
    436e:	0f c0       	rjmp	.+30     	; 0x438e <KPD_u8GetKeyPressed+0x120>
    4370:	88 ec       	ldi	r24, 0xC8	; 200
    4372:	90 e0       	ldi	r25, 0x00	; 0
    4374:	9c 83       	std	Y+4, r25	; 0x04
    4376:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    4378:	8b 81       	ldd	r24, Y+3	; 0x03
    437a:	9c 81       	ldd	r25, Y+4	; 0x04
    437c:	01 97       	sbiw	r24, 0x01	; 1
    437e:	f1 f7       	brne	.-4      	; 0x437c <KPD_u8GetKeyPressed+0x10e>
    4380:	9c 83       	std	Y+4, r25	; 0x04
    4382:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4384:	8d 81       	ldd	r24, Y+5	; 0x05
    4386:	9e 81       	ldd	r25, Y+6	; 0x06
    4388:	01 97       	sbiw	r24, 0x01	; 1
    438a:	9e 83       	std	Y+6, r25	; 0x06
    438c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    438e:	8d 81       	ldd	r24, Y+5	; 0x05
    4390:	9e 81       	ldd	r25, Y+6	; 0x06
    4392:	00 97       	sbiw	r24, 0x00	; 0
    4394:	69 f7       	brne	.-38     	; 0x4370 <KPD_u8GetKeyPressed+0x102>
    4396:	14 c0       	rjmp	.+40     	; 0x43c0 <KPD_u8GetKeyPressed+0x152>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4398:	6f 81       	ldd	r22, Y+7	; 0x07
    439a:	78 85       	ldd	r23, Y+8	; 0x08
    439c:	89 85       	ldd	r24, Y+9	; 0x09
    439e:	9a 85       	ldd	r25, Y+10	; 0x0a
    43a0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    43a4:	dc 01       	movw	r26, r24
    43a6:	cb 01       	movw	r24, r22
    43a8:	9e 83       	std	Y+6, r25	; 0x06
    43aa:	8d 83       	std	Y+5, r24	; 0x05
    43ac:	8d 81       	ldd	r24, Y+5	; 0x05
    43ae:	9e 81       	ldd	r25, Y+6	; 0x06
    43b0:	9a 83       	std	Y+2, r25	; 0x02
    43b2:	89 83       	std	Y+1, r24	; 0x01
    43b4:	89 81       	ldd	r24, Y+1	; 0x01
    43b6:	9a 81       	ldd	r25, Y+2	; 0x02
    43b8:	01 97       	sbiw	r24, 0x01	; 1
    43ba:	f1 f7       	brne	.-4      	; 0x43b8 <KPD_u8GetKeyPressed+0x14a>
    43bc:	9a 83       	std	Y+2, r25	; 0x02
    43be:	89 83       	std	Y+1, r24	; 0x01
	/* Loop over keypad columns to apply output"LOW" */
	for(u8ColIterator = KPD_COLUMN1 ; u8ColIterator < (KPD_COLUMNS + KPD_COLUMN1) ; u8ColIterator++)
	{
		/* reset column pin */
		DIO_voidSetPinVal(KPD_COLUMNS_PORT , u8ColIterator ,DIO_LOW);
		for(u8RowIterator = KPD_ROW1 ; u8RowIterator < (KPD_ROWS + KPD_ROW1) ; u8RowIterator++)
    43c0:	88 89       	ldd	r24, Y+16	; 0x10
    43c2:	8f 5f       	subi	r24, 0xFF	; 255
    43c4:	88 8b       	std	Y+16, r24	; 0x10
    43c6:	88 89       	ldd	r24, Y+16	; 0x10
    43c8:	85 30       	cpi	r24, 0x05	; 5
    43ca:	08 f4       	brcc	.+2      	; 0x43ce <KPD_u8GetKeyPressed+0x160>
    43cc:	65 cf       	rjmp	.-310    	; 0x4298 <KPD_u8GetKeyPressed+0x2a>
				while(DIO_u8GetPinVal(KPD_ROWS_PORT,u8RowIterator) == DIO_LOW);
				_delay_ms(10);
			}
		}
		/* set column pin */
		DIO_voidSetPinVal(KPD_COLUMNS_PORT , u8ColIterator ,DIO_HIGH);
    43ce:	81 e0       	ldi	r24, 0x01	; 1
    43d0:	69 89       	ldd	r22, Y+17	; 0x11
    43d2:	41 e0       	ldi	r20, 0x01	; 1
    43d4:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <DIO_voidSetPinVal>
{
	u8 u8ColIterator;
	u8 u8RowIterator;
	u8 u8KeyPressed = NULL;
	/* Loop over keypad columns to apply output"LOW" */
	for(u8ColIterator = KPD_COLUMN1 ; u8ColIterator < (KPD_COLUMNS + KPD_COLUMN1) ; u8ColIterator++)
    43d8:	89 89       	ldd	r24, Y+17	; 0x11
    43da:	8f 5f       	subi	r24, 0xFF	; 255
    43dc:	89 8b       	std	Y+17, r24	; 0x11
    43de:	89 89       	ldd	r24, Y+17	; 0x11
    43e0:	83 30       	cpi	r24, 0x03	; 3
    43e2:	08 f4       	brcc	.+2      	; 0x43e6 <KPD_u8GetKeyPressed+0x178>
    43e4:	51 cf       	rjmp	.-350    	; 0x4288 <KPD_u8GetKeyPressed+0x1a>
			}
		}
		/* set column pin */
		DIO_voidSetPinVal(KPD_COLUMNS_PORT , u8ColIterator ,DIO_HIGH);
	}
	return u8KeyPressed;
    43e6:	8f 85       	ldd	r24, Y+15	; 0x0f
}
    43e8:	61 96       	adiw	r28, 0x11	; 17
    43ea:	0f b6       	in	r0, 0x3f	; 63
    43ec:	f8 94       	cli
    43ee:	de bf       	out	0x3e, r29	; 62
    43f0:	0f be       	out	0x3f, r0	; 63
    43f2:	cd bf       	out	0x3d, r28	; 61
    43f4:	cf 91       	pop	r28
    43f6:	df 91       	pop	r29
    43f8:	08 95       	ret

000043fa <LCD_voidInit>:
#include "LCD_config.h"
#include "LCD_interface.h"
#define F_CBU 8000000UL

void LCD_voidInit(void)
{
    43fa:	0f 93       	push	r16
    43fc:	1f 93       	push	r17
    43fe:	df 93       	push	r29
    4400:	cf 93       	push	r28
    4402:	cd b7       	in	r28, 0x3d	; 61
    4404:	de b7       	in	r29, 0x3e	; 62
    4406:	c6 54       	subi	r28, 0x46	; 70
    4408:	d0 40       	sbci	r29, 0x00	; 0
    440a:	0f b6       	in	r0, 0x3f	; 63
    440c:	f8 94       	cli
    440e:	de bf       	out	0x3e, r29	; 62
    4410:	0f be       	out	0x3f, r0	; 63
    4412:	cd bf       	out	0x3d, r28	; 61
    4414:	fe 01       	movw	r30, r28
    4416:	ed 5b       	subi	r30, 0xBD	; 189
    4418:	ff 4f       	sbci	r31, 0xFF	; 255
    441a:	80 e0       	ldi	r24, 0x00	; 0
    441c:	90 e0       	ldi	r25, 0x00	; 0
    441e:	a8 e4       	ldi	r26, 0x48	; 72
    4420:	b2 e4       	ldi	r27, 0x42	; 66
    4422:	80 83       	st	Z, r24
    4424:	91 83       	std	Z+1, r25	; 0x01
    4426:	a2 83       	std	Z+2, r26	; 0x02
    4428:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    442a:	8e 01       	movw	r16, r28
    442c:	01 5c       	subi	r16, 0xC1	; 193
    442e:	1f 4f       	sbci	r17, 0xFF	; 255
    4430:	fe 01       	movw	r30, r28
    4432:	ed 5b       	subi	r30, 0xBD	; 189
    4434:	ff 4f       	sbci	r31, 0xFF	; 255
    4436:	60 81       	ld	r22, Z
    4438:	71 81       	ldd	r23, Z+1	; 0x01
    443a:	82 81       	ldd	r24, Z+2	; 0x02
    443c:	93 81       	ldd	r25, Z+3	; 0x03
    443e:	20 e0       	ldi	r18, 0x00	; 0
    4440:	30 e0       	ldi	r19, 0x00	; 0
    4442:	4a ef       	ldi	r20, 0xFA	; 250
    4444:	54 e4       	ldi	r21, 0x44	; 68
    4446:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    444a:	dc 01       	movw	r26, r24
    444c:	cb 01       	movw	r24, r22
    444e:	f8 01       	movw	r30, r16
    4450:	80 83       	st	Z, r24
    4452:	91 83       	std	Z+1, r25	; 0x01
    4454:	a2 83       	std	Z+2, r26	; 0x02
    4456:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4458:	fe 01       	movw	r30, r28
    445a:	ff 96       	adiw	r30, 0x3f	; 63
    445c:	60 81       	ld	r22, Z
    445e:	71 81       	ldd	r23, Z+1	; 0x01
    4460:	82 81       	ldd	r24, Z+2	; 0x02
    4462:	93 81       	ldd	r25, Z+3	; 0x03
    4464:	20 e0       	ldi	r18, 0x00	; 0
    4466:	30 e0       	ldi	r19, 0x00	; 0
    4468:	40 e8       	ldi	r20, 0x80	; 128
    446a:	5f e3       	ldi	r21, 0x3F	; 63
    446c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4470:	88 23       	and	r24, r24
    4472:	2c f4       	brge	.+10     	; 0x447e <LCD_voidInit+0x84>
		__ticks = 1;
    4474:	81 e0       	ldi	r24, 0x01	; 1
    4476:	90 e0       	ldi	r25, 0x00	; 0
    4478:	9e af       	std	Y+62, r25	; 0x3e
    447a:	8d af       	std	Y+61, r24	; 0x3d
    447c:	46 c0       	rjmp	.+140    	; 0x450a <LCD_voidInit+0x110>
	else if (__tmp > 65535)
    447e:	fe 01       	movw	r30, r28
    4480:	ff 96       	adiw	r30, 0x3f	; 63
    4482:	60 81       	ld	r22, Z
    4484:	71 81       	ldd	r23, Z+1	; 0x01
    4486:	82 81       	ldd	r24, Z+2	; 0x02
    4488:	93 81       	ldd	r25, Z+3	; 0x03
    448a:	20 e0       	ldi	r18, 0x00	; 0
    448c:	3f ef       	ldi	r19, 0xFF	; 255
    448e:	4f e7       	ldi	r20, 0x7F	; 127
    4490:	57 e4       	ldi	r21, 0x47	; 71
    4492:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4496:	18 16       	cp	r1, r24
    4498:	64 f5       	brge	.+88     	; 0x44f2 <LCD_voidInit+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    449a:	fe 01       	movw	r30, r28
    449c:	ed 5b       	subi	r30, 0xBD	; 189
    449e:	ff 4f       	sbci	r31, 0xFF	; 255
    44a0:	60 81       	ld	r22, Z
    44a2:	71 81       	ldd	r23, Z+1	; 0x01
    44a4:	82 81       	ldd	r24, Z+2	; 0x02
    44a6:	93 81       	ldd	r25, Z+3	; 0x03
    44a8:	20 e0       	ldi	r18, 0x00	; 0
    44aa:	30 e0       	ldi	r19, 0x00	; 0
    44ac:	40 e2       	ldi	r20, 0x20	; 32
    44ae:	51 e4       	ldi	r21, 0x41	; 65
    44b0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    44b4:	dc 01       	movw	r26, r24
    44b6:	cb 01       	movw	r24, r22
    44b8:	bc 01       	movw	r22, r24
    44ba:	cd 01       	movw	r24, r26
    44bc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    44c0:	dc 01       	movw	r26, r24
    44c2:	cb 01       	movw	r24, r22
    44c4:	9e af       	std	Y+62, r25	; 0x3e
    44c6:	8d af       	std	Y+61, r24	; 0x3d
    44c8:	0f c0       	rjmp	.+30     	; 0x44e8 <LCD_voidInit+0xee>
    44ca:	88 ec       	ldi	r24, 0xC8	; 200
    44cc:	90 e0       	ldi	r25, 0x00	; 0
    44ce:	9c af       	std	Y+60, r25	; 0x3c
    44d0:	8b af       	std	Y+59, r24	; 0x3b
    44d2:	8b ad       	ldd	r24, Y+59	; 0x3b
    44d4:	9c ad       	ldd	r25, Y+60	; 0x3c
    44d6:	01 97       	sbiw	r24, 0x01	; 1
    44d8:	f1 f7       	brne	.-4      	; 0x44d6 <LCD_voidInit+0xdc>
    44da:	9c af       	std	Y+60, r25	; 0x3c
    44dc:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    44de:	8d ad       	ldd	r24, Y+61	; 0x3d
    44e0:	9e ad       	ldd	r25, Y+62	; 0x3e
    44e2:	01 97       	sbiw	r24, 0x01	; 1
    44e4:	9e af       	std	Y+62, r25	; 0x3e
    44e6:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    44e8:	8d ad       	ldd	r24, Y+61	; 0x3d
    44ea:	9e ad       	ldd	r25, Y+62	; 0x3e
    44ec:	00 97       	sbiw	r24, 0x00	; 0
    44ee:	69 f7       	brne	.-38     	; 0x44ca <LCD_voidInit+0xd0>
    44f0:	16 c0       	rjmp	.+44     	; 0x451e <LCD_voidInit+0x124>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    44f2:	fe 01       	movw	r30, r28
    44f4:	ff 96       	adiw	r30, 0x3f	; 63
    44f6:	60 81       	ld	r22, Z
    44f8:	71 81       	ldd	r23, Z+1	; 0x01
    44fa:	82 81       	ldd	r24, Z+2	; 0x02
    44fc:	93 81       	ldd	r25, Z+3	; 0x03
    44fe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4502:	dc 01       	movw	r26, r24
    4504:	cb 01       	movw	r24, r22
    4506:	9e af       	std	Y+62, r25	; 0x3e
    4508:	8d af       	std	Y+61, r24	; 0x3d
    450a:	8d ad       	ldd	r24, Y+61	; 0x3d
    450c:	9e ad       	ldd	r25, Y+62	; 0x3e
    450e:	9a af       	std	Y+58, r25	; 0x3a
    4510:	89 af       	std	Y+57, r24	; 0x39
    4512:	89 ad       	ldd	r24, Y+57	; 0x39
    4514:	9a ad       	ldd	r25, Y+58	; 0x3a
    4516:	01 97       	sbiw	r24, 0x01	; 1
    4518:	f1 f7       	brne	.-4      	; 0x4516 <LCD_voidInit+0x11c>
    451a:	9a af       	std	Y+58, r25	; 0x3a
    451c:	89 af       	std	Y+57, r24	; 0x39
	/* wait for more than 30ms to ensure mc initialization */
	_delay_ms(50);

	/* Function Set Command*/
	LCD_voidSendCommand(LCD_FUNCTION_SET_8BIT);
    451e:	88 e3       	ldi	r24, 0x38	; 56
    4520:	0e 94 6f 24 	call	0x48de	; 0x48de <LCD_voidSendCommand>
    4524:	80 e0       	ldi	r24, 0x00	; 0
    4526:	90 e0       	ldi	r25, 0x00	; 0
    4528:	a0 e8       	ldi	r26, 0x80	; 128
    452a:	bf e3       	ldi	r27, 0x3F	; 63
    452c:	8d ab       	std	Y+53, r24	; 0x35
    452e:	9e ab       	std	Y+54, r25	; 0x36
    4530:	af ab       	std	Y+55, r26	; 0x37
    4532:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4534:	6d a9       	ldd	r22, Y+53	; 0x35
    4536:	7e a9       	ldd	r23, Y+54	; 0x36
    4538:	8f a9       	ldd	r24, Y+55	; 0x37
    453a:	98 ad       	ldd	r25, Y+56	; 0x38
    453c:	20 e0       	ldi	r18, 0x00	; 0
    453e:	30 e0       	ldi	r19, 0x00	; 0
    4540:	4a ef       	ldi	r20, 0xFA	; 250
    4542:	54 e4       	ldi	r21, 0x44	; 68
    4544:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4548:	dc 01       	movw	r26, r24
    454a:	cb 01       	movw	r24, r22
    454c:	89 ab       	std	Y+49, r24	; 0x31
    454e:	9a ab       	std	Y+50, r25	; 0x32
    4550:	ab ab       	std	Y+51, r26	; 0x33
    4552:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4554:	69 a9       	ldd	r22, Y+49	; 0x31
    4556:	7a a9       	ldd	r23, Y+50	; 0x32
    4558:	8b a9       	ldd	r24, Y+51	; 0x33
    455a:	9c a9       	ldd	r25, Y+52	; 0x34
    455c:	20 e0       	ldi	r18, 0x00	; 0
    455e:	30 e0       	ldi	r19, 0x00	; 0
    4560:	40 e8       	ldi	r20, 0x80	; 128
    4562:	5f e3       	ldi	r21, 0x3F	; 63
    4564:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4568:	88 23       	and	r24, r24
    456a:	2c f4       	brge	.+10     	; 0x4576 <LCD_voidInit+0x17c>
		__ticks = 1;
    456c:	81 e0       	ldi	r24, 0x01	; 1
    456e:	90 e0       	ldi	r25, 0x00	; 0
    4570:	98 ab       	std	Y+48, r25	; 0x30
    4572:	8f a7       	std	Y+47, r24	; 0x2f
    4574:	3f c0       	rjmp	.+126    	; 0x45f4 <LCD_voidInit+0x1fa>
	else if (__tmp > 65535)
    4576:	69 a9       	ldd	r22, Y+49	; 0x31
    4578:	7a a9       	ldd	r23, Y+50	; 0x32
    457a:	8b a9       	ldd	r24, Y+51	; 0x33
    457c:	9c a9       	ldd	r25, Y+52	; 0x34
    457e:	20 e0       	ldi	r18, 0x00	; 0
    4580:	3f ef       	ldi	r19, 0xFF	; 255
    4582:	4f e7       	ldi	r20, 0x7F	; 127
    4584:	57 e4       	ldi	r21, 0x47	; 71
    4586:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    458a:	18 16       	cp	r1, r24
    458c:	4c f5       	brge	.+82     	; 0x45e0 <LCD_voidInit+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    458e:	6d a9       	ldd	r22, Y+53	; 0x35
    4590:	7e a9       	ldd	r23, Y+54	; 0x36
    4592:	8f a9       	ldd	r24, Y+55	; 0x37
    4594:	98 ad       	ldd	r25, Y+56	; 0x38
    4596:	20 e0       	ldi	r18, 0x00	; 0
    4598:	30 e0       	ldi	r19, 0x00	; 0
    459a:	40 e2       	ldi	r20, 0x20	; 32
    459c:	51 e4       	ldi	r21, 0x41	; 65
    459e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    45a2:	dc 01       	movw	r26, r24
    45a4:	cb 01       	movw	r24, r22
    45a6:	bc 01       	movw	r22, r24
    45a8:	cd 01       	movw	r24, r26
    45aa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    45ae:	dc 01       	movw	r26, r24
    45b0:	cb 01       	movw	r24, r22
    45b2:	98 ab       	std	Y+48, r25	; 0x30
    45b4:	8f a7       	std	Y+47, r24	; 0x2f
    45b6:	0f c0       	rjmp	.+30     	; 0x45d6 <LCD_voidInit+0x1dc>
    45b8:	88 ec       	ldi	r24, 0xC8	; 200
    45ba:	90 e0       	ldi	r25, 0x00	; 0
    45bc:	9e a7       	std	Y+46, r25	; 0x2e
    45be:	8d a7       	std	Y+45, r24	; 0x2d
    45c0:	8d a5       	ldd	r24, Y+45	; 0x2d
    45c2:	9e a5       	ldd	r25, Y+46	; 0x2e
    45c4:	01 97       	sbiw	r24, 0x01	; 1
    45c6:	f1 f7       	brne	.-4      	; 0x45c4 <LCD_voidInit+0x1ca>
    45c8:	9e a7       	std	Y+46, r25	; 0x2e
    45ca:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    45cc:	8f a5       	ldd	r24, Y+47	; 0x2f
    45ce:	98 a9       	ldd	r25, Y+48	; 0x30
    45d0:	01 97       	sbiw	r24, 0x01	; 1
    45d2:	98 ab       	std	Y+48, r25	; 0x30
    45d4:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    45d6:	8f a5       	ldd	r24, Y+47	; 0x2f
    45d8:	98 a9       	ldd	r25, Y+48	; 0x30
    45da:	00 97       	sbiw	r24, 0x00	; 0
    45dc:	69 f7       	brne	.-38     	; 0x45b8 <LCD_voidInit+0x1be>
    45de:	14 c0       	rjmp	.+40     	; 0x4608 <LCD_voidInit+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    45e0:	69 a9       	ldd	r22, Y+49	; 0x31
    45e2:	7a a9       	ldd	r23, Y+50	; 0x32
    45e4:	8b a9       	ldd	r24, Y+51	; 0x33
    45e6:	9c a9       	ldd	r25, Y+52	; 0x34
    45e8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    45ec:	dc 01       	movw	r26, r24
    45ee:	cb 01       	movw	r24, r22
    45f0:	98 ab       	std	Y+48, r25	; 0x30
    45f2:	8f a7       	std	Y+47, r24	; 0x2f
    45f4:	8f a5       	ldd	r24, Y+47	; 0x2f
    45f6:	98 a9       	ldd	r25, Y+48	; 0x30
    45f8:	9c a7       	std	Y+44, r25	; 0x2c
    45fa:	8b a7       	std	Y+43, r24	; 0x2b
    45fc:	8b a5       	ldd	r24, Y+43	; 0x2b
    45fe:	9c a5       	ldd	r25, Y+44	; 0x2c
    4600:	01 97       	sbiw	r24, 0x01	; 1
    4602:	f1 f7       	brne	.-4      	; 0x4600 <LCD_voidInit+0x206>
    4604:	9c a7       	std	Y+44, r25	; 0x2c
    4606:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);

	/* Display ON/OFF */
	LCD_voidSendCommand(LCD_DISP_ON_CURSOR_ON);
    4608:	8e e0       	ldi	r24, 0x0E	; 14
    460a:	0e 94 6f 24 	call	0x48de	; 0x48de <LCD_voidSendCommand>
    460e:	80 e0       	ldi	r24, 0x00	; 0
    4610:	90 e0       	ldi	r25, 0x00	; 0
    4612:	a0 e7       	ldi	r26, 0x70	; 112
    4614:	b1 e4       	ldi	r27, 0x41	; 65
    4616:	8f a3       	std	Y+39, r24	; 0x27
    4618:	98 a7       	std	Y+40, r25	; 0x28
    461a:	a9 a7       	std	Y+41, r26	; 0x29
    461c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    461e:	6f a1       	ldd	r22, Y+39	; 0x27
    4620:	78 a5       	ldd	r23, Y+40	; 0x28
    4622:	89 a5       	ldd	r24, Y+41	; 0x29
    4624:	9a a5       	ldd	r25, Y+42	; 0x2a
    4626:	20 e0       	ldi	r18, 0x00	; 0
    4628:	30 e0       	ldi	r19, 0x00	; 0
    462a:	4a ef       	ldi	r20, 0xFA	; 250
    462c:	54 e4       	ldi	r21, 0x44	; 68
    462e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4632:	dc 01       	movw	r26, r24
    4634:	cb 01       	movw	r24, r22
    4636:	8b a3       	std	Y+35, r24	; 0x23
    4638:	9c a3       	std	Y+36, r25	; 0x24
    463a:	ad a3       	std	Y+37, r26	; 0x25
    463c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    463e:	6b a1       	ldd	r22, Y+35	; 0x23
    4640:	7c a1       	ldd	r23, Y+36	; 0x24
    4642:	8d a1       	ldd	r24, Y+37	; 0x25
    4644:	9e a1       	ldd	r25, Y+38	; 0x26
    4646:	20 e0       	ldi	r18, 0x00	; 0
    4648:	30 e0       	ldi	r19, 0x00	; 0
    464a:	40 e8       	ldi	r20, 0x80	; 128
    464c:	5f e3       	ldi	r21, 0x3F	; 63
    464e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4652:	88 23       	and	r24, r24
    4654:	2c f4       	brge	.+10     	; 0x4660 <LCD_voidInit+0x266>
		__ticks = 1;
    4656:	81 e0       	ldi	r24, 0x01	; 1
    4658:	90 e0       	ldi	r25, 0x00	; 0
    465a:	9a a3       	std	Y+34, r25	; 0x22
    465c:	89 a3       	std	Y+33, r24	; 0x21
    465e:	3f c0       	rjmp	.+126    	; 0x46de <LCD_voidInit+0x2e4>
	else if (__tmp > 65535)
    4660:	6b a1       	ldd	r22, Y+35	; 0x23
    4662:	7c a1       	ldd	r23, Y+36	; 0x24
    4664:	8d a1       	ldd	r24, Y+37	; 0x25
    4666:	9e a1       	ldd	r25, Y+38	; 0x26
    4668:	20 e0       	ldi	r18, 0x00	; 0
    466a:	3f ef       	ldi	r19, 0xFF	; 255
    466c:	4f e7       	ldi	r20, 0x7F	; 127
    466e:	57 e4       	ldi	r21, 0x47	; 71
    4670:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4674:	18 16       	cp	r1, r24
    4676:	4c f5       	brge	.+82     	; 0x46ca <LCD_voidInit+0x2d0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4678:	6f a1       	ldd	r22, Y+39	; 0x27
    467a:	78 a5       	ldd	r23, Y+40	; 0x28
    467c:	89 a5       	ldd	r24, Y+41	; 0x29
    467e:	9a a5       	ldd	r25, Y+42	; 0x2a
    4680:	20 e0       	ldi	r18, 0x00	; 0
    4682:	30 e0       	ldi	r19, 0x00	; 0
    4684:	40 e2       	ldi	r20, 0x20	; 32
    4686:	51 e4       	ldi	r21, 0x41	; 65
    4688:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    468c:	dc 01       	movw	r26, r24
    468e:	cb 01       	movw	r24, r22
    4690:	bc 01       	movw	r22, r24
    4692:	cd 01       	movw	r24, r26
    4694:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4698:	dc 01       	movw	r26, r24
    469a:	cb 01       	movw	r24, r22
    469c:	9a a3       	std	Y+34, r25	; 0x22
    469e:	89 a3       	std	Y+33, r24	; 0x21
    46a0:	0f c0       	rjmp	.+30     	; 0x46c0 <LCD_voidInit+0x2c6>
    46a2:	88 ec       	ldi	r24, 0xC8	; 200
    46a4:	90 e0       	ldi	r25, 0x00	; 0
    46a6:	98 a3       	std	Y+32, r25	; 0x20
    46a8:	8f 8f       	std	Y+31, r24	; 0x1f
    46aa:	8f 8d       	ldd	r24, Y+31	; 0x1f
    46ac:	98 a1       	ldd	r25, Y+32	; 0x20
    46ae:	01 97       	sbiw	r24, 0x01	; 1
    46b0:	f1 f7       	brne	.-4      	; 0x46ae <LCD_voidInit+0x2b4>
    46b2:	98 a3       	std	Y+32, r25	; 0x20
    46b4:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    46b6:	89 a1       	ldd	r24, Y+33	; 0x21
    46b8:	9a a1       	ldd	r25, Y+34	; 0x22
    46ba:	01 97       	sbiw	r24, 0x01	; 1
    46bc:	9a a3       	std	Y+34, r25	; 0x22
    46be:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    46c0:	89 a1       	ldd	r24, Y+33	; 0x21
    46c2:	9a a1       	ldd	r25, Y+34	; 0x22
    46c4:	00 97       	sbiw	r24, 0x00	; 0
    46c6:	69 f7       	brne	.-38     	; 0x46a2 <LCD_voidInit+0x2a8>
    46c8:	14 c0       	rjmp	.+40     	; 0x46f2 <LCD_voidInit+0x2f8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    46ca:	6b a1       	ldd	r22, Y+35	; 0x23
    46cc:	7c a1       	ldd	r23, Y+36	; 0x24
    46ce:	8d a1       	ldd	r24, Y+37	; 0x25
    46d0:	9e a1       	ldd	r25, Y+38	; 0x26
    46d2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    46d6:	dc 01       	movw	r26, r24
    46d8:	cb 01       	movw	r24, r22
    46da:	9a a3       	std	Y+34, r25	; 0x22
    46dc:	89 a3       	std	Y+33, r24	; 0x21
    46de:	89 a1       	ldd	r24, Y+33	; 0x21
    46e0:	9a a1       	ldd	r25, Y+34	; 0x22
    46e2:	9e 8f       	std	Y+30, r25	; 0x1e
    46e4:	8d 8f       	std	Y+29, r24	; 0x1d
    46e6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    46e8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    46ea:	01 97       	sbiw	r24, 0x01	; 1
    46ec:	f1 f7       	brne	.-4      	; 0x46ea <LCD_voidInit+0x2f0>
    46ee:	9e 8f       	std	Y+30, r25	; 0x1e
    46f0:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(15);

	 /* RETURN CURSOR TO FIRST POSITION FIRST LINE */
	LCD_voidSendCommand(LCD_RETURN_HOME );
    46f2:	82 e0       	ldi	r24, 0x02	; 2
    46f4:	0e 94 6f 24 	call	0x48de	; 0x48de <LCD_voidSendCommand>
    46f8:	80 e0       	ldi	r24, 0x00	; 0
    46fa:	90 e0       	ldi	r25, 0x00	; 0
    46fc:	a0 e7       	ldi	r26, 0x70	; 112
    46fe:	b1 e4       	ldi	r27, 0x41	; 65
    4700:	89 8f       	std	Y+25, r24	; 0x19
    4702:	9a 8f       	std	Y+26, r25	; 0x1a
    4704:	ab 8f       	std	Y+27, r26	; 0x1b
    4706:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4708:	69 8d       	ldd	r22, Y+25	; 0x19
    470a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    470c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    470e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4710:	20 e0       	ldi	r18, 0x00	; 0
    4712:	30 e0       	ldi	r19, 0x00	; 0
    4714:	4a ef       	ldi	r20, 0xFA	; 250
    4716:	54 e4       	ldi	r21, 0x44	; 68
    4718:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    471c:	dc 01       	movw	r26, r24
    471e:	cb 01       	movw	r24, r22
    4720:	8d 8b       	std	Y+21, r24	; 0x15
    4722:	9e 8b       	std	Y+22, r25	; 0x16
    4724:	af 8b       	std	Y+23, r26	; 0x17
    4726:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4728:	6d 89       	ldd	r22, Y+21	; 0x15
    472a:	7e 89       	ldd	r23, Y+22	; 0x16
    472c:	8f 89       	ldd	r24, Y+23	; 0x17
    472e:	98 8d       	ldd	r25, Y+24	; 0x18
    4730:	20 e0       	ldi	r18, 0x00	; 0
    4732:	30 e0       	ldi	r19, 0x00	; 0
    4734:	40 e8       	ldi	r20, 0x80	; 128
    4736:	5f e3       	ldi	r21, 0x3F	; 63
    4738:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    473c:	88 23       	and	r24, r24
    473e:	2c f4       	brge	.+10     	; 0x474a <LCD_voidInit+0x350>
		__ticks = 1;
    4740:	81 e0       	ldi	r24, 0x01	; 1
    4742:	90 e0       	ldi	r25, 0x00	; 0
    4744:	9c 8b       	std	Y+20, r25	; 0x14
    4746:	8b 8b       	std	Y+19, r24	; 0x13
    4748:	3f c0       	rjmp	.+126    	; 0x47c8 <LCD_voidInit+0x3ce>
	else if (__tmp > 65535)
    474a:	6d 89       	ldd	r22, Y+21	; 0x15
    474c:	7e 89       	ldd	r23, Y+22	; 0x16
    474e:	8f 89       	ldd	r24, Y+23	; 0x17
    4750:	98 8d       	ldd	r25, Y+24	; 0x18
    4752:	20 e0       	ldi	r18, 0x00	; 0
    4754:	3f ef       	ldi	r19, 0xFF	; 255
    4756:	4f e7       	ldi	r20, 0x7F	; 127
    4758:	57 e4       	ldi	r21, 0x47	; 71
    475a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    475e:	18 16       	cp	r1, r24
    4760:	4c f5       	brge	.+82     	; 0x47b4 <LCD_voidInit+0x3ba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4762:	69 8d       	ldd	r22, Y+25	; 0x19
    4764:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4766:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4768:	9c 8d       	ldd	r25, Y+28	; 0x1c
    476a:	20 e0       	ldi	r18, 0x00	; 0
    476c:	30 e0       	ldi	r19, 0x00	; 0
    476e:	40 e2       	ldi	r20, 0x20	; 32
    4770:	51 e4       	ldi	r21, 0x41	; 65
    4772:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4776:	dc 01       	movw	r26, r24
    4778:	cb 01       	movw	r24, r22
    477a:	bc 01       	movw	r22, r24
    477c:	cd 01       	movw	r24, r26
    477e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4782:	dc 01       	movw	r26, r24
    4784:	cb 01       	movw	r24, r22
    4786:	9c 8b       	std	Y+20, r25	; 0x14
    4788:	8b 8b       	std	Y+19, r24	; 0x13
    478a:	0f c0       	rjmp	.+30     	; 0x47aa <LCD_voidInit+0x3b0>
    478c:	88 ec       	ldi	r24, 0xC8	; 200
    478e:	90 e0       	ldi	r25, 0x00	; 0
    4790:	9a 8b       	std	Y+18, r25	; 0x12
    4792:	89 8b       	std	Y+17, r24	; 0x11
    4794:	89 89       	ldd	r24, Y+17	; 0x11
    4796:	9a 89       	ldd	r25, Y+18	; 0x12
    4798:	01 97       	sbiw	r24, 0x01	; 1
    479a:	f1 f7       	brne	.-4      	; 0x4798 <LCD_voidInit+0x39e>
    479c:	9a 8b       	std	Y+18, r25	; 0x12
    479e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    47a0:	8b 89       	ldd	r24, Y+19	; 0x13
    47a2:	9c 89       	ldd	r25, Y+20	; 0x14
    47a4:	01 97       	sbiw	r24, 0x01	; 1
    47a6:	9c 8b       	std	Y+20, r25	; 0x14
    47a8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    47aa:	8b 89       	ldd	r24, Y+19	; 0x13
    47ac:	9c 89       	ldd	r25, Y+20	; 0x14
    47ae:	00 97       	sbiw	r24, 0x00	; 0
    47b0:	69 f7       	brne	.-38     	; 0x478c <LCD_voidInit+0x392>
    47b2:	14 c0       	rjmp	.+40     	; 0x47dc <LCD_voidInit+0x3e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    47b4:	6d 89       	ldd	r22, Y+21	; 0x15
    47b6:	7e 89       	ldd	r23, Y+22	; 0x16
    47b8:	8f 89       	ldd	r24, Y+23	; 0x17
    47ba:	98 8d       	ldd	r25, Y+24	; 0x18
    47bc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    47c0:	dc 01       	movw	r26, r24
    47c2:	cb 01       	movw	r24, r22
    47c4:	9c 8b       	std	Y+20, r25	; 0x14
    47c6:	8b 8b       	std	Y+19, r24	; 0x13
    47c8:	8b 89       	ldd	r24, Y+19	; 0x13
    47ca:	9c 89       	ldd	r25, Y+20	; 0x14
    47cc:	98 8b       	std	Y+16, r25	; 0x10
    47ce:	8f 87       	std	Y+15, r24	; 0x0f
    47d0:	8f 85       	ldd	r24, Y+15	; 0x0f
    47d2:	98 89       	ldd	r25, Y+16	; 0x10
    47d4:	01 97       	sbiw	r24, 0x01	; 1
    47d6:	f1 f7       	brne	.-4      	; 0x47d4 <LCD_voidInit+0x3da>
    47d8:	98 8b       	std	Y+16, r25	; 0x10
    47da:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(15);

	/* Entry Mode Command */
	LCD_voidSendCommand(LCD_ENTERY_MODE);
    47dc:	86 e0       	ldi	r24, 0x06	; 6
    47de:	0e 94 6f 24 	call	0x48de	; 0x48de <LCD_voidSendCommand>
    47e2:	80 e0       	ldi	r24, 0x00	; 0
    47e4:	90 e0       	ldi	r25, 0x00	; 0
    47e6:	a0 e0       	ldi	r26, 0x00	; 0
    47e8:	b0 e4       	ldi	r27, 0x40	; 64
    47ea:	8b 87       	std	Y+11, r24	; 0x0b
    47ec:	9c 87       	std	Y+12, r25	; 0x0c
    47ee:	ad 87       	std	Y+13, r26	; 0x0d
    47f0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    47f2:	6b 85       	ldd	r22, Y+11	; 0x0b
    47f4:	7c 85       	ldd	r23, Y+12	; 0x0c
    47f6:	8d 85       	ldd	r24, Y+13	; 0x0d
    47f8:	9e 85       	ldd	r25, Y+14	; 0x0e
    47fa:	20 e0       	ldi	r18, 0x00	; 0
    47fc:	30 e0       	ldi	r19, 0x00	; 0
    47fe:	4a ef       	ldi	r20, 0xFA	; 250
    4800:	54 e4       	ldi	r21, 0x44	; 68
    4802:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4806:	dc 01       	movw	r26, r24
    4808:	cb 01       	movw	r24, r22
    480a:	8f 83       	std	Y+7, r24	; 0x07
    480c:	98 87       	std	Y+8, r25	; 0x08
    480e:	a9 87       	std	Y+9, r26	; 0x09
    4810:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4812:	6f 81       	ldd	r22, Y+7	; 0x07
    4814:	78 85       	ldd	r23, Y+8	; 0x08
    4816:	89 85       	ldd	r24, Y+9	; 0x09
    4818:	9a 85       	ldd	r25, Y+10	; 0x0a
    481a:	20 e0       	ldi	r18, 0x00	; 0
    481c:	30 e0       	ldi	r19, 0x00	; 0
    481e:	40 e8       	ldi	r20, 0x80	; 128
    4820:	5f e3       	ldi	r21, 0x3F	; 63
    4822:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4826:	88 23       	and	r24, r24
    4828:	2c f4       	brge	.+10     	; 0x4834 <LCD_voidInit+0x43a>
		__ticks = 1;
    482a:	81 e0       	ldi	r24, 0x01	; 1
    482c:	90 e0       	ldi	r25, 0x00	; 0
    482e:	9e 83       	std	Y+6, r25	; 0x06
    4830:	8d 83       	std	Y+5, r24	; 0x05
    4832:	3f c0       	rjmp	.+126    	; 0x48b2 <LCD_voidInit+0x4b8>
	else if (__tmp > 65535)
    4834:	6f 81       	ldd	r22, Y+7	; 0x07
    4836:	78 85       	ldd	r23, Y+8	; 0x08
    4838:	89 85       	ldd	r24, Y+9	; 0x09
    483a:	9a 85       	ldd	r25, Y+10	; 0x0a
    483c:	20 e0       	ldi	r18, 0x00	; 0
    483e:	3f ef       	ldi	r19, 0xFF	; 255
    4840:	4f e7       	ldi	r20, 0x7F	; 127
    4842:	57 e4       	ldi	r21, 0x47	; 71
    4844:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4848:	18 16       	cp	r1, r24
    484a:	4c f5       	brge	.+82     	; 0x489e <LCD_voidInit+0x4a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    484c:	6b 85       	ldd	r22, Y+11	; 0x0b
    484e:	7c 85       	ldd	r23, Y+12	; 0x0c
    4850:	8d 85       	ldd	r24, Y+13	; 0x0d
    4852:	9e 85       	ldd	r25, Y+14	; 0x0e
    4854:	20 e0       	ldi	r18, 0x00	; 0
    4856:	30 e0       	ldi	r19, 0x00	; 0
    4858:	40 e2       	ldi	r20, 0x20	; 32
    485a:	51 e4       	ldi	r21, 0x41	; 65
    485c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4860:	dc 01       	movw	r26, r24
    4862:	cb 01       	movw	r24, r22
    4864:	bc 01       	movw	r22, r24
    4866:	cd 01       	movw	r24, r26
    4868:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    486c:	dc 01       	movw	r26, r24
    486e:	cb 01       	movw	r24, r22
    4870:	9e 83       	std	Y+6, r25	; 0x06
    4872:	8d 83       	std	Y+5, r24	; 0x05
    4874:	0f c0       	rjmp	.+30     	; 0x4894 <LCD_voidInit+0x49a>
    4876:	88 ec       	ldi	r24, 0xC8	; 200
    4878:	90 e0       	ldi	r25, 0x00	; 0
    487a:	9c 83       	std	Y+4, r25	; 0x04
    487c:	8b 83       	std	Y+3, r24	; 0x03
    487e:	8b 81       	ldd	r24, Y+3	; 0x03
    4880:	9c 81       	ldd	r25, Y+4	; 0x04
    4882:	01 97       	sbiw	r24, 0x01	; 1
    4884:	f1 f7       	brne	.-4      	; 0x4882 <LCD_voidInit+0x488>
    4886:	9c 83       	std	Y+4, r25	; 0x04
    4888:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    488a:	8d 81       	ldd	r24, Y+5	; 0x05
    488c:	9e 81       	ldd	r25, Y+6	; 0x06
    488e:	01 97       	sbiw	r24, 0x01	; 1
    4890:	9e 83       	std	Y+6, r25	; 0x06
    4892:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4894:	8d 81       	ldd	r24, Y+5	; 0x05
    4896:	9e 81       	ldd	r25, Y+6	; 0x06
    4898:	00 97       	sbiw	r24, 0x00	; 0
    489a:	69 f7       	brne	.-38     	; 0x4876 <LCD_voidInit+0x47c>
    489c:	14 c0       	rjmp	.+40     	; 0x48c6 <LCD_voidInit+0x4cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    489e:	6f 81       	ldd	r22, Y+7	; 0x07
    48a0:	78 85       	ldd	r23, Y+8	; 0x08
    48a2:	89 85       	ldd	r24, Y+9	; 0x09
    48a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    48a6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    48aa:	dc 01       	movw	r26, r24
    48ac:	cb 01       	movw	r24, r22
    48ae:	9e 83       	std	Y+6, r25	; 0x06
    48b0:	8d 83       	std	Y+5, r24	; 0x05
    48b2:	8d 81       	ldd	r24, Y+5	; 0x05
    48b4:	9e 81       	ldd	r25, Y+6	; 0x06
    48b6:	9a 83       	std	Y+2, r25	; 0x02
    48b8:	89 83       	std	Y+1, r24	; 0x01
    48ba:	89 81       	ldd	r24, Y+1	; 0x01
    48bc:	9a 81       	ldd	r25, Y+2	; 0x02
    48be:	01 97       	sbiw	r24, 0x01	; 1
    48c0:	f1 f7       	brne	.-4      	; 0x48be <LCD_voidInit+0x4c4>
    48c2:	9a 83       	std	Y+2, r25	; 0x02
    48c4:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
}
    48c6:	ca 5b       	subi	r28, 0xBA	; 186
    48c8:	df 4f       	sbci	r29, 0xFF	; 255
    48ca:	0f b6       	in	r0, 0x3f	; 63
    48cc:	f8 94       	cli
    48ce:	de bf       	out	0x3e, r29	; 62
    48d0:	0f be       	out	0x3f, r0	; 63
    48d2:	cd bf       	out	0x3d, r28	; 61
    48d4:	cf 91       	pop	r28
    48d6:	df 91       	pop	r29
    48d8:	1f 91       	pop	r17
    48da:	0f 91       	pop	r16
    48dc:	08 95       	ret

000048de <LCD_voidSendCommand>:

void LCD_voidSendCommand(u8 u8cmd)
{
    48de:	df 93       	push	r29
    48e0:	cf 93       	push	r28
    48e2:	cd b7       	in	r28, 0x3d	; 61
    48e4:	de b7       	in	r29, 0x3e	; 62
    48e6:	6d 97       	sbiw	r28, 0x1d	; 29
    48e8:	0f b6       	in	r0, 0x3f	; 63
    48ea:	f8 94       	cli
    48ec:	de bf       	out	0x3e, r29	; 62
    48ee:	0f be       	out	0x3f, r0	; 63
    48f0:	cd bf       	out	0x3d, r28	; 61
    48f2:	8d 8f       	std	Y+29, r24	; 0x1d
	/* Clear RS Pin	 */
	DIO_voidSetPinVal(LCD_CONTROL_PORT , LCD_RS_PIN , DIO_LOW);
    48f4:	83 e0       	ldi	r24, 0x03	; 3
    48f6:	62 e0       	ldi	r22, 0x02	; 2
    48f8:	40 e0       	ldi	r20, 0x00	; 0
    48fa:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <DIO_voidSetPinVal>

	/* Clear RW Pin */
	DIO_voidSetPinVal(LCD_CONTROL_PORT , LCD_RW_PIN , DIO_LOW);
    48fe:	83 e0       	ldi	r24, 0x03	; 3
    4900:	61 e0       	ldi	r22, 0x01	; 1
    4902:	40 e0       	ldi	r20, 0x00	; 0
    4904:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <DIO_voidSetPinVal>

	/* Load Command to the Data Pins */
	DIO_voidSetPortVal(LCD_DATA_PORT , u8cmd);
    4908:	82 e0       	ldi	r24, 0x02	; 2
    490a:	6d 8d       	ldd	r22, Y+29	; 0x1d
    490c:	0e 94 d1 1f 	call	0x3fa2	; 0x3fa2 <DIO_voidSetPortVal>

	/* Set E Pin to High */
	DIO_voidSetPinVal(LCD_CONTROL_PORT , LCD_E_PIN , DIO_HIGH);
    4910:	83 e0       	ldi	r24, 0x03	; 3
    4912:	60 e0       	ldi	r22, 0x00	; 0
    4914:	41 e0       	ldi	r20, 0x01	; 1
    4916:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <DIO_voidSetPinVal>
    491a:	80 e0       	ldi	r24, 0x00	; 0
    491c:	90 e0       	ldi	r25, 0x00	; 0
    491e:	a0 ea       	ldi	r26, 0xA0	; 160
    4920:	b0 e4       	ldi	r27, 0x40	; 64
    4922:	89 8f       	std	Y+25, r24	; 0x19
    4924:	9a 8f       	std	Y+26, r25	; 0x1a
    4926:	ab 8f       	std	Y+27, r26	; 0x1b
    4928:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    492a:	69 8d       	ldd	r22, Y+25	; 0x19
    492c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    492e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4930:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4932:	20 e0       	ldi	r18, 0x00	; 0
    4934:	30 e0       	ldi	r19, 0x00	; 0
    4936:	4a ef       	ldi	r20, 0xFA	; 250
    4938:	54 e4       	ldi	r21, 0x44	; 68
    493a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    493e:	dc 01       	movw	r26, r24
    4940:	cb 01       	movw	r24, r22
    4942:	8d 8b       	std	Y+21, r24	; 0x15
    4944:	9e 8b       	std	Y+22, r25	; 0x16
    4946:	af 8b       	std	Y+23, r26	; 0x17
    4948:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    494a:	6d 89       	ldd	r22, Y+21	; 0x15
    494c:	7e 89       	ldd	r23, Y+22	; 0x16
    494e:	8f 89       	ldd	r24, Y+23	; 0x17
    4950:	98 8d       	ldd	r25, Y+24	; 0x18
    4952:	20 e0       	ldi	r18, 0x00	; 0
    4954:	30 e0       	ldi	r19, 0x00	; 0
    4956:	40 e8       	ldi	r20, 0x80	; 128
    4958:	5f e3       	ldi	r21, 0x3F	; 63
    495a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    495e:	88 23       	and	r24, r24
    4960:	2c f4       	brge	.+10     	; 0x496c <LCD_voidSendCommand+0x8e>
		__ticks = 1;
    4962:	81 e0       	ldi	r24, 0x01	; 1
    4964:	90 e0       	ldi	r25, 0x00	; 0
    4966:	9c 8b       	std	Y+20, r25	; 0x14
    4968:	8b 8b       	std	Y+19, r24	; 0x13
    496a:	3f c0       	rjmp	.+126    	; 0x49ea <LCD_voidSendCommand+0x10c>
	else if (__tmp > 65535)
    496c:	6d 89       	ldd	r22, Y+21	; 0x15
    496e:	7e 89       	ldd	r23, Y+22	; 0x16
    4970:	8f 89       	ldd	r24, Y+23	; 0x17
    4972:	98 8d       	ldd	r25, Y+24	; 0x18
    4974:	20 e0       	ldi	r18, 0x00	; 0
    4976:	3f ef       	ldi	r19, 0xFF	; 255
    4978:	4f e7       	ldi	r20, 0x7F	; 127
    497a:	57 e4       	ldi	r21, 0x47	; 71
    497c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4980:	18 16       	cp	r1, r24
    4982:	4c f5       	brge	.+82     	; 0x49d6 <LCD_voidSendCommand+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4984:	69 8d       	ldd	r22, Y+25	; 0x19
    4986:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4988:	8b 8d       	ldd	r24, Y+27	; 0x1b
    498a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    498c:	20 e0       	ldi	r18, 0x00	; 0
    498e:	30 e0       	ldi	r19, 0x00	; 0
    4990:	40 e2       	ldi	r20, 0x20	; 32
    4992:	51 e4       	ldi	r21, 0x41	; 65
    4994:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4998:	dc 01       	movw	r26, r24
    499a:	cb 01       	movw	r24, r22
    499c:	bc 01       	movw	r22, r24
    499e:	cd 01       	movw	r24, r26
    49a0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    49a4:	dc 01       	movw	r26, r24
    49a6:	cb 01       	movw	r24, r22
    49a8:	9c 8b       	std	Y+20, r25	; 0x14
    49aa:	8b 8b       	std	Y+19, r24	; 0x13
    49ac:	0f c0       	rjmp	.+30     	; 0x49cc <LCD_voidSendCommand+0xee>
    49ae:	88 ec       	ldi	r24, 0xC8	; 200
    49b0:	90 e0       	ldi	r25, 0x00	; 0
    49b2:	9a 8b       	std	Y+18, r25	; 0x12
    49b4:	89 8b       	std	Y+17, r24	; 0x11
    49b6:	89 89       	ldd	r24, Y+17	; 0x11
    49b8:	9a 89       	ldd	r25, Y+18	; 0x12
    49ba:	01 97       	sbiw	r24, 0x01	; 1
    49bc:	f1 f7       	brne	.-4      	; 0x49ba <LCD_voidSendCommand+0xdc>
    49be:	9a 8b       	std	Y+18, r25	; 0x12
    49c0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    49c2:	8b 89       	ldd	r24, Y+19	; 0x13
    49c4:	9c 89       	ldd	r25, Y+20	; 0x14
    49c6:	01 97       	sbiw	r24, 0x01	; 1
    49c8:	9c 8b       	std	Y+20, r25	; 0x14
    49ca:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    49cc:	8b 89       	ldd	r24, Y+19	; 0x13
    49ce:	9c 89       	ldd	r25, Y+20	; 0x14
    49d0:	00 97       	sbiw	r24, 0x00	; 0
    49d2:	69 f7       	brne	.-38     	; 0x49ae <LCD_voidSendCommand+0xd0>
    49d4:	14 c0       	rjmp	.+40     	; 0x49fe <LCD_voidSendCommand+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    49d6:	6d 89       	ldd	r22, Y+21	; 0x15
    49d8:	7e 89       	ldd	r23, Y+22	; 0x16
    49da:	8f 89       	ldd	r24, Y+23	; 0x17
    49dc:	98 8d       	ldd	r25, Y+24	; 0x18
    49de:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    49e2:	dc 01       	movw	r26, r24
    49e4:	cb 01       	movw	r24, r22
    49e6:	9c 8b       	std	Y+20, r25	; 0x14
    49e8:	8b 8b       	std	Y+19, r24	; 0x13
    49ea:	8b 89       	ldd	r24, Y+19	; 0x13
    49ec:	9c 89       	ldd	r25, Y+20	; 0x14
    49ee:	98 8b       	std	Y+16, r25	; 0x10
    49f0:	8f 87       	std	Y+15, r24	; 0x0f
    49f2:	8f 85       	ldd	r24, Y+15	; 0x0f
    49f4:	98 89       	ldd	r25, Y+16	; 0x10
    49f6:	01 97       	sbiw	r24, 0x01	; 1
    49f8:	f1 f7       	brne	.-4      	; 0x49f6 <LCD_voidSendCommand+0x118>
    49fa:	98 8b       	std	Y+16, r25	; 0x10
    49fc:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(5);

	/* Clear E Pin */
	DIO_voidSetPinVal(LCD_CONTROL_PORT , LCD_E_PIN , DIO_LOW);
    49fe:	83 e0       	ldi	r24, 0x03	; 3
    4a00:	60 e0       	ldi	r22, 0x00	; 0
    4a02:	40 e0       	ldi	r20, 0x00	; 0
    4a04:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <DIO_voidSetPinVal>
    4a08:	80 e0       	ldi	r24, 0x00	; 0
    4a0a:	90 e0       	ldi	r25, 0x00	; 0
    4a0c:	a0 ea       	ldi	r26, 0xA0	; 160
    4a0e:	b0 e4       	ldi	r27, 0x40	; 64
    4a10:	8b 87       	std	Y+11, r24	; 0x0b
    4a12:	9c 87       	std	Y+12, r25	; 0x0c
    4a14:	ad 87       	std	Y+13, r26	; 0x0d
    4a16:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4a18:	6b 85       	ldd	r22, Y+11	; 0x0b
    4a1a:	7c 85       	ldd	r23, Y+12	; 0x0c
    4a1c:	8d 85       	ldd	r24, Y+13	; 0x0d
    4a1e:	9e 85       	ldd	r25, Y+14	; 0x0e
    4a20:	20 e0       	ldi	r18, 0x00	; 0
    4a22:	30 e0       	ldi	r19, 0x00	; 0
    4a24:	4a ef       	ldi	r20, 0xFA	; 250
    4a26:	54 e4       	ldi	r21, 0x44	; 68
    4a28:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4a2c:	dc 01       	movw	r26, r24
    4a2e:	cb 01       	movw	r24, r22
    4a30:	8f 83       	std	Y+7, r24	; 0x07
    4a32:	98 87       	std	Y+8, r25	; 0x08
    4a34:	a9 87       	std	Y+9, r26	; 0x09
    4a36:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4a38:	6f 81       	ldd	r22, Y+7	; 0x07
    4a3a:	78 85       	ldd	r23, Y+8	; 0x08
    4a3c:	89 85       	ldd	r24, Y+9	; 0x09
    4a3e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a40:	20 e0       	ldi	r18, 0x00	; 0
    4a42:	30 e0       	ldi	r19, 0x00	; 0
    4a44:	40 e8       	ldi	r20, 0x80	; 128
    4a46:	5f e3       	ldi	r21, 0x3F	; 63
    4a48:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4a4c:	88 23       	and	r24, r24
    4a4e:	2c f4       	brge	.+10     	; 0x4a5a <LCD_voidSendCommand+0x17c>
		__ticks = 1;
    4a50:	81 e0       	ldi	r24, 0x01	; 1
    4a52:	90 e0       	ldi	r25, 0x00	; 0
    4a54:	9e 83       	std	Y+6, r25	; 0x06
    4a56:	8d 83       	std	Y+5, r24	; 0x05
    4a58:	3f c0       	rjmp	.+126    	; 0x4ad8 <LCD_voidSendCommand+0x1fa>
	else if (__tmp > 65535)
    4a5a:	6f 81       	ldd	r22, Y+7	; 0x07
    4a5c:	78 85       	ldd	r23, Y+8	; 0x08
    4a5e:	89 85       	ldd	r24, Y+9	; 0x09
    4a60:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a62:	20 e0       	ldi	r18, 0x00	; 0
    4a64:	3f ef       	ldi	r19, 0xFF	; 255
    4a66:	4f e7       	ldi	r20, 0x7F	; 127
    4a68:	57 e4       	ldi	r21, 0x47	; 71
    4a6a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4a6e:	18 16       	cp	r1, r24
    4a70:	4c f5       	brge	.+82     	; 0x4ac4 <LCD_voidSendCommand+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4a72:	6b 85       	ldd	r22, Y+11	; 0x0b
    4a74:	7c 85       	ldd	r23, Y+12	; 0x0c
    4a76:	8d 85       	ldd	r24, Y+13	; 0x0d
    4a78:	9e 85       	ldd	r25, Y+14	; 0x0e
    4a7a:	20 e0       	ldi	r18, 0x00	; 0
    4a7c:	30 e0       	ldi	r19, 0x00	; 0
    4a7e:	40 e2       	ldi	r20, 0x20	; 32
    4a80:	51 e4       	ldi	r21, 0x41	; 65
    4a82:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4a86:	dc 01       	movw	r26, r24
    4a88:	cb 01       	movw	r24, r22
    4a8a:	bc 01       	movw	r22, r24
    4a8c:	cd 01       	movw	r24, r26
    4a8e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4a92:	dc 01       	movw	r26, r24
    4a94:	cb 01       	movw	r24, r22
    4a96:	9e 83       	std	Y+6, r25	; 0x06
    4a98:	8d 83       	std	Y+5, r24	; 0x05
    4a9a:	0f c0       	rjmp	.+30     	; 0x4aba <LCD_voidSendCommand+0x1dc>
    4a9c:	88 ec       	ldi	r24, 0xC8	; 200
    4a9e:	90 e0       	ldi	r25, 0x00	; 0
    4aa0:	9c 83       	std	Y+4, r25	; 0x04
    4aa2:	8b 83       	std	Y+3, r24	; 0x03
    4aa4:	8b 81       	ldd	r24, Y+3	; 0x03
    4aa6:	9c 81       	ldd	r25, Y+4	; 0x04
    4aa8:	01 97       	sbiw	r24, 0x01	; 1
    4aaa:	f1 f7       	brne	.-4      	; 0x4aa8 <LCD_voidSendCommand+0x1ca>
    4aac:	9c 83       	std	Y+4, r25	; 0x04
    4aae:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4ab0:	8d 81       	ldd	r24, Y+5	; 0x05
    4ab2:	9e 81       	ldd	r25, Y+6	; 0x06
    4ab4:	01 97       	sbiw	r24, 0x01	; 1
    4ab6:	9e 83       	std	Y+6, r25	; 0x06
    4ab8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4aba:	8d 81       	ldd	r24, Y+5	; 0x05
    4abc:	9e 81       	ldd	r25, Y+6	; 0x06
    4abe:	00 97       	sbiw	r24, 0x00	; 0
    4ac0:	69 f7       	brne	.-38     	; 0x4a9c <LCD_voidSendCommand+0x1be>
    4ac2:	14 c0       	rjmp	.+40     	; 0x4aec <LCD_voidSendCommand+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ac4:	6f 81       	ldd	r22, Y+7	; 0x07
    4ac6:	78 85       	ldd	r23, Y+8	; 0x08
    4ac8:	89 85       	ldd	r24, Y+9	; 0x09
    4aca:	9a 85       	ldd	r25, Y+10	; 0x0a
    4acc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4ad0:	dc 01       	movw	r26, r24
    4ad2:	cb 01       	movw	r24, r22
    4ad4:	9e 83       	std	Y+6, r25	; 0x06
    4ad6:	8d 83       	std	Y+5, r24	; 0x05
    4ad8:	8d 81       	ldd	r24, Y+5	; 0x05
    4ada:	9e 81       	ldd	r25, Y+6	; 0x06
    4adc:	9a 83       	std	Y+2, r25	; 0x02
    4ade:	89 83       	std	Y+1, r24	; 0x01
    4ae0:	89 81       	ldd	r24, Y+1	; 0x01
    4ae2:	9a 81       	ldd	r25, Y+2	; 0x02
    4ae4:	01 97       	sbiw	r24, 0x01	; 1
    4ae6:	f1 f7       	brne	.-4      	; 0x4ae4 <LCD_voidSendCommand+0x206>
    4ae8:	9a 83       	std	Y+2, r25	; 0x02
    4aea:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(5);
}
    4aec:	6d 96       	adiw	r28, 0x1d	; 29
    4aee:	0f b6       	in	r0, 0x3f	; 63
    4af0:	f8 94       	cli
    4af2:	de bf       	out	0x3e, r29	; 62
    4af4:	0f be       	out	0x3f, r0	; 63
    4af6:	cd bf       	out	0x3d, r28	; 61
    4af8:	cf 91       	pop	r28
    4afa:	df 91       	pop	r29
    4afc:	08 95       	ret

00004afe <LCD_voidSendData>:

void LCD_voidSendData(u8 u8CharData)
{
    4afe:	df 93       	push	r29
    4b00:	cf 93       	push	r28
    4b02:	cd b7       	in	r28, 0x3d	; 61
    4b04:	de b7       	in	r29, 0x3e	; 62
    4b06:	6d 97       	sbiw	r28, 0x1d	; 29
    4b08:	0f b6       	in	r0, 0x3f	; 63
    4b0a:	f8 94       	cli
    4b0c:	de bf       	out	0x3e, r29	; 62
    4b0e:	0f be       	out	0x3f, r0	; 63
    4b10:	cd bf       	out	0x3d, r28	; 61
    4b12:	8d 8f       	std	Y+29, r24	; 0x1d
	/* Set RS Pin to High	 */
	DIO_voidSetPinVal(LCD_CONTROL_PORT , LCD_RS_PIN , DIO_HIGH);
    4b14:	83 e0       	ldi	r24, 0x03	; 3
    4b16:	62 e0       	ldi	r22, 0x02	; 2
    4b18:	41 e0       	ldi	r20, 0x01	; 1
    4b1a:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <DIO_voidSetPinVal>

	/* Clear RW Pin */
	DIO_voidSetPinVal(LCD_CONTROL_PORT , LCD_RW_PIN , DIO_LOW);
    4b1e:	83 e0       	ldi	r24, 0x03	; 3
    4b20:	61 e0       	ldi	r22, 0x01	; 1
    4b22:	40 e0       	ldi	r20, 0x00	; 0
    4b24:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <DIO_voidSetPinVal>

	/* Load Command to the Data Pins */
	DIO_voidSetPortVal(LCD_DATA_PORT , u8CharData);
    4b28:	82 e0       	ldi	r24, 0x02	; 2
    4b2a:	6d 8d       	ldd	r22, Y+29	; 0x1d
    4b2c:	0e 94 d1 1f 	call	0x3fa2	; 0x3fa2 <DIO_voidSetPortVal>

	/* Set E Pin to High */
	DIO_voidSetPinVal(LCD_CONTROL_PORT , LCD_E_PIN , DIO_HIGH);
    4b30:	83 e0       	ldi	r24, 0x03	; 3
    4b32:	60 e0       	ldi	r22, 0x00	; 0
    4b34:	41 e0       	ldi	r20, 0x01	; 1
    4b36:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <DIO_voidSetPinVal>
    4b3a:	80 e0       	ldi	r24, 0x00	; 0
    4b3c:	90 e0       	ldi	r25, 0x00	; 0
    4b3e:	a0 ea       	ldi	r26, 0xA0	; 160
    4b40:	b0 e4       	ldi	r27, 0x40	; 64
    4b42:	89 8f       	std	Y+25, r24	; 0x19
    4b44:	9a 8f       	std	Y+26, r25	; 0x1a
    4b46:	ab 8f       	std	Y+27, r26	; 0x1b
    4b48:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4b4a:	69 8d       	ldd	r22, Y+25	; 0x19
    4b4c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4b4e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4b50:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4b52:	20 e0       	ldi	r18, 0x00	; 0
    4b54:	30 e0       	ldi	r19, 0x00	; 0
    4b56:	4a ef       	ldi	r20, 0xFA	; 250
    4b58:	54 e4       	ldi	r21, 0x44	; 68
    4b5a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4b5e:	dc 01       	movw	r26, r24
    4b60:	cb 01       	movw	r24, r22
    4b62:	8d 8b       	std	Y+21, r24	; 0x15
    4b64:	9e 8b       	std	Y+22, r25	; 0x16
    4b66:	af 8b       	std	Y+23, r26	; 0x17
    4b68:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4b6a:	6d 89       	ldd	r22, Y+21	; 0x15
    4b6c:	7e 89       	ldd	r23, Y+22	; 0x16
    4b6e:	8f 89       	ldd	r24, Y+23	; 0x17
    4b70:	98 8d       	ldd	r25, Y+24	; 0x18
    4b72:	20 e0       	ldi	r18, 0x00	; 0
    4b74:	30 e0       	ldi	r19, 0x00	; 0
    4b76:	40 e8       	ldi	r20, 0x80	; 128
    4b78:	5f e3       	ldi	r21, 0x3F	; 63
    4b7a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4b7e:	88 23       	and	r24, r24
    4b80:	2c f4       	brge	.+10     	; 0x4b8c <LCD_voidSendData+0x8e>
		__ticks = 1;
    4b82:	81 e0       	ldi	r24, 0x01	; 1
    4b84:	90 e0       	ldi	r25, 0x00	; 0
    4b86:	9c 8b       	std	Y+20, r25	; 0x14
    4b88:	8b 8b       	std	Y+19, r24	; 0x13
    4b8a:	3f c0       	rjmp	.+126    	; 0x4c0a <LCD_voidSendData+0x10c>
	else if (__tmp > 65535)
    4b8c:	6d 89       	ldd	r22, Y+21	; 0x15
    4b8e:	7e 89       	ldd	r23, Y+22	; 0x16
    4b90:	8f 89       	ldd	r24, Y+23	; 0x17
    4b92:	98 8d       	ldd	r25, Y+24	; 0x18
    4b94:	20 e0       	ldi	r18, 0x00	; 0
    4b96:	3f ef       	ldi	r19, 0xFF	; 255
    4b98:	4f e7       	ldi	r20, 0x7F	; 127
    4b9a:	57 e4       	ldi	r21, 0x47	; 71
    4b9c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4ba0:	18 16       	cp	r1, r24
    4ba2:	4c f5       	brge	.+82     	; 0x4bf6 <LCD_voidSendData+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4ba4:	69 8d       	ldd	r22, Y+25	; 0x19
    4ba6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4ba8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4baa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4bac:	20 e0       	ldi	r18, 0x00	; 0
    4bae:	30 e0       	ldi	r19, 0x00	; 0
    4bb0:	40 e2       	ldi	r20, 0x20	; 32
    4bb2:	51 e4       	ldi	r21, 0x41	; 65
    4bb4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4bb8:	dc 01       	movw	r26, r24
    4bba:	cb 01       	movw	r24, r22
    4bbc:	bc 01       	movw	r22, r24
    4bbe:	cd 01       	movw	r24, r26
    4bc0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4bc4:	dc 01       	movw	r26, r24
    4bc6:	cb 01       	movw	r24, r22
    4bc8:	9c 8b       	std	Y+20, r25	; 0x14
    4bca:	8b 8b       	std	Y+19, r24	; 0x13
    4bcc:	0f c0       	rjmp	.+30     	; 0x4bec <LCD_voidSendData+0xee>
    4bce:	88 ec       	ldi	r24, 0xC8	; 200
    4bd0:	90 e0       	ldi	r25, 0x00	; 0
    4bd2:	9a 8b       	std	Y+18, r25	; 0x12
    4bd4:	89 8b       	std	Y+17, r24	; 0x11
    4bd6:	89 89       	ldd	r24, Y+17	; 0x11
    4bd8:	9a 89       	ldd	r25, Y+18	; 0x12
    4bda:	01 97       	sbiw	r24, 0x01	; 1
    4bdc:	f1 f7       	brne	.-4      	; 0x4bda <LCD_voidSendData+0xdc>
    4bde:	9a 8b       	std	Y+18, r25	; 0x12
    4be0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4be2:	8b 89       	ldd	r24, Y+19	; 0x13
    4be4:	9c 89       	ldd	r25, Y+20	; 0x14
    4be6:	01 97       	sbiw	r24, 0x01	; 1
    4be8:	9c 8b       	std	Y+20, r25	; 0x14
    4bea:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4bec:	8b 89       	ldd	r24, Y+19	; 0x13
    4bee:	9c 89       	ldd	r25, Y+20	; 0x14
    4bf0:	00 97       	sbiw	r24, 0x00	; 0
    4bf2:	69 f7       	brne	.-38     	; 0x4bce <LCD_voidSendData+0xd0>
    4bf4:	14 c0       	rjmp	.+40     	; 0x4c1e <LCD_voidSendData+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4bf6:	6d 89       	ldd	r22, Y+21	; 0x15
    4bf8:	7e 89       	ldd	r23, Y+22	; 0x16
    4bfa:	8f 89       	ldd	r24, Y+23	; 0x17
    4bfc:	98 8d       	ldd	r25, Y+24	; 0x18
    4bfe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4c02:	dc 01       	movw	r26, r24
    4c04:	cb 01       	movw	r24, r22
    4c06:	9c 8b       	std	Y+20, r25	; 0x14
    4c08:	8b 8b       	std	Y+19, r24	; 0x13
    4c0a:	8b 89       	ldd	r24, Y+19	; 0x13
    4c0c:	9c 89       	ldd	r25, Y+20	; 0x14
    4c0e:	98 8b       	std	Y+16, r25	; 0x10
    4c10:	8f 87       	std	Y+15, r24	; 0x0f
    4c12:	8f 85       	ldd	r24, Y+15	; 0x0f
    4c14:	98 89       	ldd	r25, Y+16	; 0x10
    4c16:	01 97       	sbiw	r24, 0x01	; 1
    4c18:	f1 f7       	brne	.-4      	; 0x4c16 <LCD_voidSendData+0x118>
    4c1a:	98 8b       	std	Y+16, r25	; 0x10
    4c1c:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(5);

	/* Clear E Pin */
	DIO_voidSetPinVal(LCD_CONTROL_PORT , LCD_E_PIN , DIO_LOW);
    4c1e:	83 e0       	ldi	r24, 0x03	; 3
    4c20:	60 e0       	ldi	r22, 0x00	; 0
    4c22:	40 e0       	ldi	r20, 0x00	; 0
    4c24:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <DIO_voidSetPinVal>
    4c28:	80 e0       	ldi	r24, 0x00	; 0
    4c2a:	90 e0       	ldi	r25, 0x00	; 0
    4c2c:	a0 ea       	ldi	r26, 0xA0	; 160
    4c2e:	b0 e4       	ldi	r27, 0x40	; 64
    4c30:	8b 87       	std	Y+11, r24	; 0x0b
    4c32:	9c 87       	std	Y+12, r25	; 0x0c
    4c34:	ad 87       	std	Y+13, r26	; 0x0d
    4c36:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4c38:	6b 85       	ldd	r22, Y+11	; 0x0b
    4c3a:	7c 85       	ldd	r23, Y+12	; 0x0c
    4c3c:	8d 85       	ldd	r24, Y+13	; 0x0d
    4c3e:	9e 85       	ldd	r25, Y+14	; 0x0e
    4c40:	20 e0       	ldi	r18, 0x00	; 0
    4c42:	30 e0       	ldi	r19, 0x00	; 0
    4c44:	4a ef       	ldi	r20, 0xFA	; 250
    4c46:	54 e4       	ldi	r21, 0x44	; 68
    4c48:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4c4c:	dc 01       	movw	r26, r24
    4c4e:	cb 01       	movw	r24, r22
    4c50:	8f 83       	std	Y+7, r24	; 0x07
    4c52:	98 87       	std	Y+8, r25	; 0x08
    4c54:	a9 87       	std	Y+9, r26	; 0x09
    4c56:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4c58:	6f 81       	ldd	r22, Y+7	; 0x07
    4c5a:	78 85       	ldd	r23, Y+8	; 0x08
    4c5c:	89 85       	ldd	r24, Y+9	; 0x09
    4c5e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c60:	20 e0       	ldi	r18, 0x00	; 0
    4c62:	30 e0       	ldi	r19, 0x00	; 0
    4c64:	40 e8       	ldi	r20, 0x80	; 128
    4c66:	5f e3       	ldi	r21, 0x3F	; 63
    4c68:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4c6c:	88 23       	and	r24, r24
    4c6e:	2c f4       	brge	.+10     	; 0x4c7a <LCD_voidSendData+0x17c>
		__ticks = 1;
    4c70:	81 e0       	ldi	r24, 0x01	; 1
    4c72:	90 e0       	ldi	r25, 0x00	; 0
    4c74:	9e 83       	std	Y+6, r25	; 0x06
    4c76:	8d 83       	std	Y+5, r24	; 0x05
    4c78:	3f c0       	rjmp	.+126    	; 0x4cf8 <LCD_voidSendData+0x1fa>
	else if (__tmp > 65535)
    4c7a:	6f 81       	ldd	r22, Y+7	; 0x07
    4c7c:	78 85       	ldd	r23, Y+8	; 0x08
    4c7e:	89 85       	ldd	r24, Y+9	; 0x09
    4c80:	9a 85       	ldd	r25, Y+10	; 0x0a
    4c82:	20 e0       	ldi	r18, 0x00	; 0
    4c84:	3f ef       	ldi	r19, 0xFF	; 255
    4c86:	4f e7       	ldi	r20, 0x7F	; 127
    4c88:	57 e4       	ldi	r21, 0x47	; 71
    4c8a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4c8e:	18 16       	cp	r1, r24
    4c90:	4c f5       	brge	.+82     	; 0x4ce4 <LCD_voidSendData+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4c92:	6b 85       	ldd	r22, Y+11	; 0x0b
    4c94:	7c 85       	ldd	r23, Y+12	; 0x0c
    4c96:	8d 85       	ldd	r24, Y+13	; 0x0d
    4c98:	9e 85       	ldd	r25, Y+14	; 0x0e
    4c9a:	20 e0       	ldi	r18, 0x00	; 0
    4c9c:	30 e0       	ldi	r19, 0x00	; 0
    4c9e:	40 e2       	ldi	r20, 0x20	; 32
    4ca0:	51 e4       	ldi	r21, 0x41	; 65
    4ca2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4ca6:	dc 01       	movw	r26, r24
    4ca8:	cb 01       	movw	r24, r22
    4caa:	bc 01       	movw	r22, r24
    4cac:	cd 01       	movw	r24, r26
    4cae:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4cb2:	dc 01       	movw	r26, r24
    4cb4:	cb 01       	movw	r24, r22
    4cb6:	9e 83       	std	Y+6, r25	; 0x06
    4cb8:	8d 83       	std	Y+5, r24	; 0x05
    4cba:	0f c0       	rjmp	.+30     	; 0x4cda <LCD_voidSendData+0x1dc>
    4cbc:	88 ec       	ldi	r24, 0xC8	; 200
    4cbe:	90 e0       	ldi	r25, 0x00	; 0
    4cc0:	9c 83       	std	Y+4, r25	; 0x04
    4cc2:	8b 83       	std	Y+3, r24	; 0x03
    4cc4:	8b 81       	ldd	r24, Y+3	; 0x03
    4cc6:	9c 81       	ldd	r25, Y+4	; 0x04
    4cc8:	01 97       	sbiw	r24, 0x01	; 1
    4cca:	f1 f7       	brne	.-4      	; 0x4cc8 <LCD_voidSendData+0x1ca>
    4ccc:	9c 83       	std	Y+4, r25	; 0x04
    4cce:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4cd0:	8d 81       	ldd	r24, Y+5	; 0x05
    4cd2:	9e 81       	ldd	r25, Y+6	; 0x06
    4cd4:	01 97       	sbiw	r24, 0x01	; 1
    4cd6:	9e 83       	std	Y+6, r25	; 0x06
    4cd8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4cda:	8d 81       	ldd	r24, Y+5	; 0x05
    4cdc:	9e 81       	ldd	r25, Y+6	; 0x06
    4cde:	00 97       	sbiw	r24, 0x00	; 0
    4ce0:	69 f7       	brne	.-38     	; 0x4cbc <LCD_voidSendData+0x1be>
    4ce2:	14 c0       	rjmp	.+40     	; 0x4d0c <LCD_voidSendData+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ce4:	6f 81       	ldd	r22, Y+7	; 0x07
    4ce6:	78 85       	ldd	r23, Y+8	; 0x08
    4ce8:	89 85       	ldd	r24, Y+9	; 0x09
    4cea:	9a 85       	ldd	r25, Y+10	; 0x0a
    4cec:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4cf0:	dc 01       	movw	r26, r24
    4cf2:	cb 01       	movw	r24, r22
    4cf4:	9e 83       	std	Y+6, r25	; 0x06
    4cf6:	8d 83       	std	Y+5, r24	; 0x05
    4cf8:	8d 81       	ldd	r24, Y+5	; 0x05
    4cfa:	9e 81       	ldd	r25, Y+6	; 0x06
    4cfc:	9a 83       	std	Y+2, r25	; 0x02
    4cfe:	89 83       	std	Y+1, r24	; 0x01
    4d00:	89 81       	ldd	r24, Y+1	; 0x01
    4d02:	9a 81       	ldd	r25, Y+2	; 0x02
    4d04:	01 97       	sbiw	r24, 0x01	; 1
    4d06:	f1 f7       	brne	.-4      	; 0x4d04 <LCD_voidSendData+0x206>
    4d08:	9a 83       	std	Y+2, r25	; 0x02
    4d0a:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(5);
}
    4d0c:	6d 96       	adiw	r28, 0x1d	; 29
    4d0e:	0f b6       	in	r0, 0x3f	; 63
    4d10:	f8 94       	cli
    4d12:	de bf       	out	0x3e, r29	; 62
    4d14:	0f be       	out	0x3f, r0	; 63
    4d16:	cd bf       	out	0x3d, r28	; 61
    4d18:	cf 91       	pop	r28
    4d1a:	df 91       	pop	r29
    4d1c:	08 95       	ret

00004d1e <LCD_voidSetPosition>:

void LCD_voidSetPosition(u8 u8Row , u8 u8Col)
{
    4d1e:	df 93       	push	r29
    4d20:	cf 93       	push	r28
    4d22:	00 d0       	rcall	.+0      	; 0x4d24 <LCD_voidSetPosition+0x6>
    4d24:	00 d0       	rcall	.+0      	; 0x4d26 <LCD_voidSetPosition+0x8>
    4d26:	cd b7       	in	r28, 0x3d	; 61
    4d28:	de b7       	in	r29, 0x3e	; 62
    4d2a:	89 83       	std	Y+1, r24	; 0x01
    4d2c:	6a 83       	std	Y+2, r22	; 0x02
	if((u8Row <= LCD_LINE2) && (u8Col <= LCD_COLUM16))
    4d2e:	89 81       	ldd	r24, Y+1	; 0x01
    4d30:	82 30       	cpi	r24, 0x02	; 2
    4d32:	d8 f4       	brcc	.+54     	; 0x4d6a <LCD_voidSetPosition+0x4c>
    4d34:	8a 81       	ldd	r24, Y+2	; 0x02
    4d36:	80 31       	cpi	r24, 0x10	; 16
    4d38:	c0 f4       	brcc	.+48     	; 0x4d6a <LCD_voidSetPosition+0x4c>
	{
		switch(u8Row)
    4d3a:	89 81       	ldd	r24, Y+1	; 0x01
    4d3c:	28 2f       	mov	r18, r24
    4d3e:	30 e0       	ldi	r19, 0x00	; 0
    4d40:	3c 83       	std	Y+4, r19	; 0x04
    4d42:	2b 83       	std	Y+3, r18	; 0x03
    4d44:	8b 81       	ldd	r24, Y+3	; 0x03
    4d46:	9c 81       	ldd	r25, Y+4	; 0x04
    4d48:	00 97       	sbiw	r24, 0x00	; 0
    4d4a:	31 f0       	breq	.+12     	; 0x4d58 <LCD_voidSetPosition+0x3a>
    4d4c:	2b 81       	ldd	r18, Y+3	; 0x03
    4d4e:	3c 81       	ldd	r19, Y+4	; 0x04
    4d50:	21 30       	cpi	r18, 0x01	; 1
    4d52:	31 05       	cpc	r19, r1
    4d54:	31 f0       	breq	.+12     	; 0x4d62 <LCD_voidSetPosition+0x44>
    4d56:	09 c0       	rjmp	.+18     	; 0x4d6a <LCD_voidSetPosition+0x4c>
		{
		case LCD_LINE1: LCD_voidSendCommand(LCD_CURSOR_SET + u8Col); break;
    4d58:	8a 81       	ldd	r24, Y+2	; 0x02
    4d5a:	80 58       	subi	r24, 0x80	; 128
    4d5c:	0e 94 6f 24 	call	0x48de	; 0x48de <LCD_voidSendCommand>
    4d60:	04 c0       	rjmp	.+8      	; 0x4d6a <LCD_voidSetPosition+0x4c>
		case LCD_LINE2: LCD_voidSendCommand(0xC0 + u8Col);           break;
    4d62:	8a 81       	ldd	r24, Y+2	; 0x02
    4d64:	80 54       	subi	r24, 0x40	; 64
    4d66:	0e 94 6f 24 	call	0x48de	; 0x48de <LCD_voidSendCommand>
		}
	}

}
    4d6a:	0f 90       	pop	r0
    4d6c:	0f 90       	pop	r0
    4d6e:	0f 90       	pop	r0
    4d70:	0f 90       	pop	r0
    4d72:	cf 91       	pop	r28
    4d74:	df 91       	pop	r29
    4d76:	08 95       	ret

00004d78 <LCD_voidSendString>:

void LCD_voidSendString(u8* pu8Str)
{
    4d78:	df 93       	push	r29
    4d7a:	cf 93       	push	r28
    4d7c:	00 d0       	rcall	.+0      	; 0x4d7e <LCD_voidSendString+0x6>
    4d7e:	0f 92       	push	r0
    4d80:	cd b7       	in	r28, 0x3d	; 61
    4d82:	de b7       	in	r29, 0x3e	; 62
    4d84:	9b 83       	std	Y+3, r25	; 0x03
    4d86:	8a 83       	std	Y+2, r24	; 0x02
	u8 u8Iterator = 0;
    4d88:	19 82       	std	Y+1, r1	; 0x01
    4d8a:	0e c0       	rjmp	.+28     	; 0x4da8 <LCD_voidSendString+0x30>
	while(pu8Str[u8Iterator] != '\0')
	{
		LCD_voidSendData(pu8Str[u8Iterator]);
    4d8c:	89 81       	ldd	r24, Y+1	; 0x01
    4d8e:	28 2f       	mov	r18, r24
    4d90:	30 e0       	ldi	r19, 0x00	; 0
    4d92:	8a 81       	ldd	r24, Y+2	; 0x02
    4d94:	9b 81       	ldd	r25, Y+3	; 0x03
    4d96:	fc 01       	movw	r30, r24
    4d98:	e2 0f       	add	r30, r18
    4d9a:	f3 1f       	adc	r31, r19
    4d9c:	80 81       	ld	r24, Z
    4d9e:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
		u8Iterator++;
    4da2:	89 81       	ldd	r24, Y+1	; 0x01
    4da4:	8f 5f       	subi	r24, 0xFF	; 255
    4da6:	89 83       	std	Y+1, r24	; 0x01
}

void LCD_voidSendString(u8* pu8Str)
{
	u8 u8Iterator = 0;
	while(pu8Str[u8Iterator] != '\0')
    4da8:	89 81       	ldd	r24, Y+1	; 0x01
    4daa:	28 2f       	mov	r18, r24
    4dac:	30 e0       	ldi	r19, 0x00	; 0
    4dae:	8a 81       	ldd	r24, Y+2	; 0x02
    4db0:	9b 81       	ldd	r25, Y+3	; 0x03
    4db2:	fc 01       	movw	r30, r24
    4db4:	e2 0f       	add	r30, r18
    4db6:	f3 1f       	adc	r31, r19
    4db8:	80 81       	ld	r24, Z
    4dba:	88 23       	and	r24, r24
    4dbc:	39 f7       	brne	.-50     	; 0x4d8c <LCD_voidSendString+0x14>
	{
		LCD_voidSendData(pu8Str[u8Iterator]);
		u8Iterator++;
	}
}
    4dbe:	0f 90       	pop	r0
    4dc0:	0f 90       	pop	r0
    4dc2:	0f 90       	pop	r0
    4dc4:	cf 91       	pop	r28
    4dc6:	df 91       	pop	r29
    4dc8:	08 95       	ret

00004dca <LCD_voidClearDisplay>:

void LCD_voidClearDisplay(void)
{
    4dca:	df 93       	push	r29
    4dcc:	cf 93       	push	r28
    4dce:	cd b7       	in	r28, 0x3d	; 61
    4dd0:	de b7       	in	r29, 0x3e	; 62
    4dd2:	2e 97       	sbiw	r28, 0x0e	; 14
    4dd4:	0f b6       	in	r0, 0x3f	; 63
    4dd6:	f8 94       	cli
    4dd8:	de bf       	out	0x3e, r29	; 62
    4dda:	0f be       	out	0x3f, r0	; 63
    4ddc:	cd bf       	out	0x3d, r28	; 61
	LCD_voidSendCommand(LCD_CLEAR);
    4dde:	81 e0       	ldi	r24, 0x01	; 1
    4de0:	0e 94 6f 24 	call	0x48de	; 0x48de <LCD_voidSendCommand>
    4de4:	80 e0       	ldi	r24, 0x00	; 0
    4de6:	90 e0       	ldi	r25, 0x00	; 0
    4de8:	a0 ea       	ldi	r26, 0xA0	; 160
    4dea:	b0 e4       	ldi	r27, 0x40	; 64
    4dec:	8b 87       	std	Y+11, r24	; 0x0b
    4dee:	9c 87       	std	Y+12, r25	; 0x0c
    4df0:	ad 87       	std	Y+13, r26	; 0x0d
    4df2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4df4:	6b 85       	ldd	r22, Y+11	; 0x0b
    4df6:	7c 85       	ldd	r23, Y+12	; 0x0c
    4df8:	8d 85       	ldd	r24, Y+13	; 0x0d
    4dfa:	9e 85       	ldd	r25, Y+14	; 0x0e
    4dfc:	20 e0       	ldi	r18, 0x00	; 0
    4dfe:	30 e0       	ldi	r19, 0x00	; 0
    4e00:	4a ef       	ldi	r20, 0xFA	; 250
    4e02:	54 e4       	ldi	r21, 0x44	; 68
    4e04:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4e08:	dc 01       	movw	r26, r24
    4e0a:	cb 01       	movw	r24, r22
    4e0c:	8f 83       	std	Y+7, r24	; 0x07
    4e0e:	98 87       	std	Y+8, r25	; 0x08
    4e10:	a9 87       	std	Y+9, r26	; 0x09
    4e12:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4e14:	6f 81       	ldd	r22, Y+7	; 0x07
    4e16:	78 85       	ldd	r23, Y+8	; 0x08
    4e18:	89 85       	ldd	r24, Y+9	; 0x09
    4e1a:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e1c:	20 e0       	ldi	r18, 0x00	; 0
    4e1e:	30 e0       	ldi	r19, 0x00	; 0
    4e20:	40 e8       	ldi	r20, 0x80	; 128
    4e22:	5f e3       	ldi	r21, 0x3F	; 63
    4e24:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4e28:	88 23       	and	r24, r24
    4e2a:	2c f4       	brge	.+10     	; 0x4e36 <LCD_voidClearDisplay+0x6c>
		__ticks = 1;
    4e2c:	81 e0       	ldi	r24, 0x01	; 1
    4e2e:	90 e0       	ldi	r25, 0x00	; 0
    4e30:	9e 83       	std	Y+6, r25	; 0x06
    4e32:	8d 83       	std	Y+5, r24	; 0x05
    4e34:	3f c0       	rjmp	.+126    	; 0x4eb4 <LCD_voidClearDisplay+0xea>
	else if (__tmp > 65535)
    4e36:	6f 81       	ldd	r22, Y+7	; 0x07
    4e38:	78 85       	ldd	r23, Y+8	; 0x08
    4e3a:	89 85       	ldd	r24, Y+9	; 0x09
    4e3c:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e3e:	20 e0       	ldi	r18, 0x00	; 0
    4e40:	3f ef       	ldi	r19, 0xFF	; 255
    4e42:	4f e7       	ldi	r20, 0x7F	; 127
    4e44:	57 e4       	ldi	r21, 0x47	; 71
    4e46:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4e4a:	18 16       	cp	r1, r24
    4e4c:	4c f5       	brge	.+82     	; 0x4ea0 <LCD_voidClearDisplay+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4e4e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4e50:	7c 85       	ldd	r23, Y+12	; 0x0c
    4e52:	8d 85       	ldd	r24, Y+13	; 0x0d
    4e54:	9e 85       	ldd	r25, Y+14	; 0x0e
    4e56:	20 e0       	ldi	r18, 0x00	; 0
    4e58:	30 e0       	ldi	r19, 0x00	; 0
    4e5a:	40 e2       	ldi	r20, 0x20	; 32
    4e5c:	51 e4       	ldi	r21, 0x41	; 65
    4e5e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4e62:	dc 01       	movw	r26, r24
    4e64:	cb 01       	movw	r24, r22
    4e66:	bc 01       	movw	r22, r24
    4e68:	cd 01       	movw	r24, r26
    4e6a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4e6e:	dc 01       	movw	r26, r24
    4e70:	cb 01       	movw	r24, r22
    4e72:	9e 83       	std	Y+6, r25	; 0x06
    4e74:	8d 83       	std	Y+5, r24	; 0x05
    4e76:	0f c0       	rjmp	.+30     	; 0x4e96 <LCD_voidClearDisplay+0xcc>
    4e78:	88 ec       	ldi	r24, 0xC8	; 200
    4e7a:	90 e0       	ldi	r25, 0x00	; 0
    4e7c:	9c 83       	std	Y+4, r25	; 0x04
    4e7e:	8b 83       	std	Y+3, r24	; 0x03
    4e80:	8b 81       	ldd	r24, Y+3	; 0x03
    4e82:	9c 81       	ldd	r25, Y+4	; 0x04
    4e84:	01 97       	sbiw	r24, 0x01	; 1
    4e86:	f1 f7       	brne	.-4      	; 0x4e84 <LCD_voidClearDisplay+0xba>
    4e88:	9c 83       	std	Y+4, r25	; 0x04
    4e8a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4e8c:	8d 81       	ldd	r24, Y+5	; 0x05
    4e8e:	9e 81       	ldd	r25, Y+6	; 0x06
    4e90:	01 97       	sbiw	r24, 0x01	; 1
    4e92:	9e 83       	std	Y+6, r25	; 0x06
    4e94:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4e96:	8d 81       	ldd	r24, Y+5	; 0x05
    4e98:	9e 81       	ldd	r25, Y+6	; 0x06
    4e9a:	00 97       	sbiw	r24, 0x00	; 0
    4e9c:	69 f7       	brne	.-38     	; 0x4e78 <LCD_voidClearDisplay+0xae>
    4e9e:	14 c0       	rjmp	.+40     	; 0x4ec8 <LCD_voidClearDisplay+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ea0:	6f 81       	ldd	r22, Y+7	; 0x07
    4ea2:	78 85       	ldd	r23, Y+8	; 0x08
    4ea4:	89 85       	ldd	r24, Y+9	; 0x09
    4ea6:	9a 85       	ldd	r25, Y+10	; 0x0a
    4ea8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4eac:	dc 01       	movw	r26, r24
    4eae:	cb 01       	movw	r24, r22
    4eb0:	9e 83       	std	Y+6, r25	; 0x06
    4eb2:	8d 83       	std	Y+5, r24	; 0x05
    4eb4:	8d 81       	ldd	r24, Y+5	; 0x05
    4eb6:	9e 81       	ldd	r25, Y+6	; 0x06
    4eb8:	9a 83       	std	Y+2, r25	; 0x02
    4eba:	89 83       	std	Y+1, r24	; 0x01
    4ebc:	89 81       	ldd	r24, Y+1	; 0x01
    4ebe:	9a 81       	ldd	r25, Y+2	; 0x02
    4ec0:	01 97       	sbiw	r24, 0x01	; 1
    4ec2:	f1 f7       	brne	.-4      	; 0x4ec0 <LCD_voidClearDisplay+0xf6>
    4ec4:	9a 83       	std	Y+2, r25	; 0x02
    4ec6:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(5);
}
    4ec8:	2e 96       	adiw	r28, 0x0e	; 14
    4eca:	0f b6       	in	r0, 0x3f	; 63
    4ecc:	f8 94       	cli
    4ece:	de bf       	out	0x3e, r29	; 62
    4ed0:	0f be       	out	0x3f, r0	; 63
    4ed2:	cd bf       	out	0x3d, r28	; 61
    4ed4:	cf 91       	pop	r28
    4ed6:	df 91       	pop	r29
    4ed8:	08 95       	ret

00004eda <LCD_voidClearLine>:

void LCD_voidClearLine(u8 u8LineNum)
{
    4eda:	df 93       	push	r29
    4edc:	cf 93       	push	r28
    4ede:	00 d0       	rcall	.+0      	; 0x4ee0 <LCD_voidClearLine+0x6>
    4ee0:	0f 92       	push	r0
    4ee2:	cd b7       	in	r28, 0x3d	; 61
    4ee4:	de b7       	in	r29, 0x3e	; 62
    4ee6:	89 83       	std	Y+1, r24	; 0x01

	if(u8LineNum <= LCD_LINE2)
    4ee8:	89 81       	ldd	r24, Y+1	; 0x01
    4eea:	82 30       	cpi	r24, 0x02	; 2
    4eec:	e0 f4       	brcc	.+56     	; 0x4f26 <LCD_voidClearLine+0x4c>
	{
		LCD_voidSetPosition(u8LineNum , LCD_COLUM1); // set cursor position on LineNum first column
    4eee:	89 81       	ldd	r24, Y+1	; 0x01
    4ef0:	60 e0       	ldi	r22, 0x00	; 0
    4ef2:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <LCD_voidSetPosition>
		switch(u8LineNum)
    4ef6:	89 81       	ldd	r24, Y+1	; 0x01
    4ef8:	28 2f       	mov	r18, r24
    4efa:	30 e0       	ldi	r19, 0x00	; 0
    4efc:	3b 83       	std	Y+3, r19	; 0x03
    4efe:	2a 83       	std	Y+2, r18	; 0x02
    4f00:	8a 81       	ldd	r24, Y+2	; 0x02
    4f02:	9b 81       	ldd	r25, Y+3	; 0x03
    4f04:	00 97       	sbiw	r24, 0x00	; 0
    4f06:	31 f0       	breq	.+12     	; 0x4f14 <LCD_voidClearLine+0x3a>
    4f08:	2a 81       	ldd	r18, Y+2	; 0x02
    4f0a:	3b 81       	ldd	r19, Y+3	; 0x03
    4f0c:	21 30       	cpi	r18, 0x01	; 1
    4f0e:	31 05       	cpc	r19, r1
    4f10:	31 f0       	breq	.+12     	; 0x4f1e <LCD_voidClearLine+0x44>
    4f12:	09 c0       	rjmp	.+18     	; 0x4f26 <LCD_voidClearLine+0x4c>
		{
		case LCD_LINE1: LCD_voidSendString("                "); break;
    4f14:	81 e1       	ldi	r24, 0x11	; 17
    4f16:	91 e0       	ldi	r25, 0x01	; 1
    4f18:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    4f1c:	04 c0       	rjmp	.+8      	; 0x4f26 <LCD_voidClearLine+0x4c>
		case LCD_LINE2: LCD_voidSendString("                "); break;
    4f1e:	81 e1       	ldi	r24, 0x11	; 17
    4f20:	91 e0       	ldi	r25, 0x01	; 1
    4f22:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
		}
	}
}
    4f26:	0f 90       	pop	r0
    4f28:	0f 90       	pop	r0
    4f2a:	0f 90       	pop	r0
    4f2c:	cf 91       	pop	r28
    4f2e:	df 91       	pop	r29
    4f30:	08 95       	ret

00004f32 <LCD_voidCreateChar>:

void LCD_voidCreateChar(u8* pu8CustomChar , u8 u8CharLocation)
{
    4f32:	df 93       	push	r29
    4f34:	cf 93       	push	r28
    4f36:	00 d0       	rcall	.+0      	; 0x4f38 <LCD_voidCreateChar+0x6>
    4f38:	00 d0       	rcall	.+0      	; 0x4f3a <LCD_voidCreateChar+0x8>
    4f3a:	cd b7       	in	r28, 0x3d	; 61
    4f3c:	de b7       	in	r29, 0x3e	; 62
    4f3e:	9b 83       	std	Y+3, r25	; 0x03
    4f40:	8a 83       	std	Y+2, r24	; 0x02
    4f42:	6c 83       	std	Y+4, r22	; 0x04
	u8 u8Iterator;
	if(u8CharLocation <= LCD_CUSTOM_CHAR8)
    4f44:	8c 81       	ldd	r24, Y+4	; 0x04
    4f46:	88 30       	cpi	r24, 0x08	; 8
    4f48:	f8 f4       	brcc	.+62     	; 0x4f88 <LCD_voidCreateChar+0x56>
	{
		LCD_voidSendCommand((u8CharLocation * 8) + LCD_FIRST_CUSTOM_CHAR);   // 0x40 is the first location in CGRAM every location 8bit
    4f4a:	8c 81       	ldd	r24, Y+4	; 0x04
    4f4c:	88 2f       	mov	r24, r24
    4f4e:	90 e0       	ldi	r25, 0x00	; 0
    4f50:	08 96       	adiw	r24, 0x08	; 8
    4f52:	88 0f       	add	r24, r24
    4f54:	99 1f       	adc	r25, r25
    4f56:	88 0f       	add	r24, r24
    4f58:	99 1f       	adc	r25, r25
    4f5a:	88 0f       	add	r24, r24
    4f5c:	99 1f       	adc	r25, r25
    4f5e:	0e 94 6f 24 	call	0x48de	; 0x48de <LCD_voidSendCommand>
		for(u8Iterator = 0 ; u8Iterator < 8 ; u8Iterator++)
    4f62:	19 82       	std	Y+1, r1	; 0x01
    4f64:	0e c0       	rjmp	.+28     	; 0x4f82 <LCD_voidCreateChar+0x50>
		{
			LCD_voidSendData(pu8CustomChar[u8Iterator]);
    4f66:	89 81       	ldd	r24, Y+1	; 0x01
    4f68:	28 2f       	mov	r18, r24
    4f6a:	30 e0       	ldi	r19, 0x00	; 0
    4f6c:	8a 81       	ldd	r24, Y+2	; 0x02
    4f6e:	9b 81       	ldd	r25, Y+3	; 0x03
    4f70:	fc 01       	movw	r30, r24
    4f72:	e2 0f       	add	r30, r18
    4f74:	f3 1f       	adc	r31, r19
    4f76:	80 81       	ld	r24, Z
    4f78:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
{
	u8 u8Iterator;
	if(u8CharLocation <= LCD_CUSTOM_CHAR8)
	{
		LCD_voidSendCommand((u8CharLocation * 8) + LCD_FIRST_CUSTOM_CHAR);   // 0x40 is the first location in CGRAM every location 8bit
		for(u8Iterator = 0 ; u8Iterator < 8 ; u8Iterator++)
    4f7c:	89 81       	ldd	r24, Y+1	; 0x01
    4f7e:	8f 5f       	subi	r24, 0xFF	; 255
    4f80:	89 83       	std	Y+1, r24	; 0x01
    4f82:	89 81       	ldd	r24, Y+1	; 0x01
    4f84:	88 30       	cpi	r24, 0x08	; 8
    4f86:	78 f3       	brcs	.-34     	; 0x4f66 <LCD_voidCreateChar+0x34>
		{
			LCD_voidSendData(pu8CustomChar[u8Iterator]);
		}
	}

}
    4f88:	0f 90       	pop	r0
    4f8a:	0f 90       	pop	r0
    4f8c:	0f 90       	pop	r0
    4f8e:	0f 90       	pop	r0
    4f90:	cf 91       	pop	r28
    4f92:	df 91       	pop	r29
    4f94:	08 95       	ret

00004f96 <LCD_voidSendInteger>:

void LCD_voidSendInteger(u32 u32IntData)
{
    4f96:	df 93       	push	r29
    4f98:	cf 93       	push	r28
    4f9a:	cd b7       	in	r28, 0x3d	; 61
    4f9c:	de b7       	in	r29, 0x3e	; 62
    4f9e:	6d 97       	sbiw	r28, 0x1d	; 29
    4fa0:	0f b6       	in	r0, 0x3f	; 63
    4fa2:	f8 94       	cli
    4fa4:	de bf       	out	0x3e, r29	; 62
    4fa6:	0f be       	out	0x3f, r0	; 63
    4fa8:	cd bf       	out	0x3d, r28	; 61
    4faa:	6a 8f       	std	Y+26, r22	; 0x1a
    4fac:	7b 8f       	std	Y+27, r23	; 0x1b
    4fae:	8c 8f       	std	Y+28, r24	; 0x1c
    4fb0:	9d 8f       	std	Y+29, r25	; 0x1d
	u8 au8IntToCharConvert[NUMBER_OF_DIGITS] = {};
    4fb2:	89 e0       	ldi	r24, 0x09	; 9
    4fb4:	fe 01       	movw	r30, r28
    4fb6:	71 96       	adiw	r30, 0x11	; 17
    4fb8:	df 01       	movw	r26, r30
    4fba:	98 2f       	mov	r25, r24
    4fbc:	1d 92       	st	X+, r1
    4fbe:	9a 95       	dec	r25
    4fc0:	e9 f7       	brne	.-6      	; 0x4fbc <LCD_voidSendInteger+0x26>
	u8 u8Iterator;
	u8 u8Quotient;
	u8 u8LastIndex;    //Number of  Digits for Entry number
	u8 u8Flag = 1;    //For Get u8LastIndex
    4fc2:	81 e0       	ldi	r24, 0x01	; 1
    4fc4:	8d 87       	std	Y+13, r24	; 0x0d
	u32 u32Remainder;
	u32 u32Divisor;

	for(u8Iterator = NUMBER_OF_DIGITS ; u8Iterator >= 1 ; u8Iterator--)
    4fc6:	89 e0       	ldi	r24, 0x09	; 9
    4fc8:	88 8b       	std	Y+16, r24	; 0x10
    4fca:	2d c1       	rjmp	.+602    	; 0x5226 <LCD_voidSendInteger+0x290>
	{
		u32Divisor = u32Power(BASE,u8Iterator);
    4fcc:	8a e0       	ldi	r24, 0x0A	; 10
    4fce:	68 89       	ldd	r22, Y+16	; 0x10
    4fd0:	0e 94 37 2a 	call	0x546e	; 0x546e <u32Power>
    4fd4:	dc 01       	movw	r26, r24
    4fd6:	cb 01       	movw	r24, r22
    4fd8:	8d 83       	std	Y+5, r24	; 0x05
    4fda:	9e 83       	std	Y+6, r25	; 0x06
    4fdc:	af 83       	std	Y+7, r26	; 0x07
    4fde:	b8 87       	std	Y+8, r27	; 0x08
		/********Get Number of Digits For Entry Number******/
		if(u32IntData < u32Divisor)
    4fe0:	2a 8d       	ldd	r18, Y+26	; 0x1a
    4fe2:	3b 8d       	ldd	r19, Y+27	; 0x1b
    4fe4:	4c 8d       	ldd	r20, Y+28	; 0x1c
    4fe6:	5d 8d       	ldd	r21, Y+29	; 0x1d
    4fe8:	8d 81       	ldd	r24, Y+5	; 0x05
    4fea:	9e 81       	ldd	r25, Y+6	; 0x06
    4fec:	af 81       	ldd	r26, Y+7	; 0x07
    4fee:	b8 85       	ldd	r27, Y+8	; 0x08
    4ff0:	28 17       	cp	r18, r24
    4ff2:	39 07       	cpc	r19, r25
    4ff4:	4a 07       	cpc	r20, r26
    4ff6:	5b 07       	cpc	r21, r27
    4ff8:	08 f4       	brcc	.+2      	; 0x4ffc <LCD_voidSendInteger+0x66>
    4ffa:	12 c1       	rjmp	.+548    	; 0x5220 <LCD_voidSendInteger+0x28a>
		{
			continue;
		}
		else
		{
			if(u8Flag == 1)
    4ffc:	8d 85       	ldd	r24, Y+13	; 0x0d
    4ffe:	81 30       	cpi	r24, 0x01	; 1
    5000:	11 f4       	brne	.+4      	; 0x5006 <LCD_voidSendInteger+0x70>
			{
				u8LastIndex = u8Iterator;
    5002:	88 89       	ldd	r24, Y+16	; 0x10
    5004:	8e 87       	std	Y+14, r24	; 0x0e
			}
			u8Flag = 0;
    5006:	1d 86       	std	Y+13, r1	; 0x0d
			u8Quotient  = u32IntData / u32Divisor;
    5008:	8a 8d       	ldd	r24, Y+26	; 0x1a
    500a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    500c:	ac 8d       	ldd	r26, Y+28	; 0x1c
    500e:	bd 8d       	ldd	r27, Y+29	; 0x1d
    5010:	2d 81       	ldd	r18, Y+5	; 0x05
    5012:	3e 81       	ldd	r19, Y+6	; 0x06
    5014:	4f 81       	ldd	r20, Y+7	; 0x07
    5016:	58 85       	ldd	r21, Y+8	; 0x08
    5018:	bc 01       	movw	r22, r24
    501a:	cd 01       	movw	r24, r26
    501c:	0e 94 5c 32 	call	0x64b8	; 0x64b8 <__udivmodsi4>
    5020:	da 01       	movw	r26, r20
    5022:	c9 01       	movw	r24, r18
    5024:	8f 87       	std	Y+15, r24	; 0x0f
			u32 u32Remainder = u32IntData % u32Divisor;
    5026:	8a 8d       	ldd	r24, Y+26	; 0x1a
    5028:	9b 8d       	ldd	r25, Y+27	; 0x1b
    502a:	ac 8d       	ldd	r26, Y+28	; 0x1c
    502c:	bd 8d       	ldd	r27, Y+29	; 0x1d
    502e:	2d 81       	ldd	r18, Y+5	; 0x05
    5030:	3e 81       	ldd	r19, Y+6	; 0x06
    5032:	4f 81       	ldd	r20, Y+7	; 0x07
    5034:	58 85       	ldd	r21, Y+8	; 0x08
    5036:	bc 01       	movw	r22, r24
    5038:	cd 01       	movw	r24, r26
    503a:	0e 94 5c 32 	call	0x64b8	; 0x64b8 <__udivmodsi4>
    503e:	dc 01       	movw	r26, r24
    5040:	cb 01       	movw	r24, r22
    5042:	89 83       	std	Y+1, r24	; 0x01
    5044:	9a 83       	std	Y+2, r25	; 0x02
    5046:	ab 83       	std	Y+3, r26	; 0x03
    5048:	bc 83       	std	Y+4, r27	; 0x04
			/*************Print Multiples of 10*************/
			if((u32Remainder == 0) && (u8Iterator >= 1))
    504a:	89 81       	ldd	r24, Y+1	; 0x01
    504c:	9a 81       	ldd	r25, Y+2	; 0x02
    504e:	ab 81       	ldd	r26, Y+3	; 0x03
    5050:	bc 81       	ldd	r27, Y+4	; 0x04
    5052:	00 97       	sbiw	r24, 0x00	; 0
    5054:	a1 05       	cpc	r26, r1
    5056:	b1 05       	cpc	r27, r1
    5058:	79 f5       	brne	.+94     	; 0x50b8 <LCD_voidSendInteger+0x122>
    505a:	88 89       	ldd	r24, Y+16	; 0x10
    505c:	88 23       	and	r24, r24
    505e:	61 f1       	breq	.+88     	; 0x50b8 <LCD_voidSendInteger+0x122>
			{
				au8IntToCharConvert[u8LastIndex - u8Iterator] = u8Quotient +'0';
    5060:	8e 85       	ldd	r24, Y+14	; 0x0e
    5062:	28 2f       	mov	r18, r24
    5064:	30 e0       	ldi	r19, 0x00	; 0
    5066:	88 89       	ldd	r24, Y+16	; 0x10
    5068:	88 2f       	mov	r24, r24
    506a:	90 e0       	ldi	r25, 0x00	; 0
    506c:	28 1b       	sub	r18, r24
    506e:	39 0b       	sbc	r19, r25
    5070:	8f 85       	ldd	r24, Y+15	; 0x0f
    5072:	48 2f       	mov	r20, r24
    5074:	40 5d       	subi	r20, 0xD0	; 208
    5076:	ce 01       	movw	r24, r28
    5078:	41 96       	adiw	r24, 0x11	; 17
    507a:	fc 01       	movw	r30, r24
    507c:	e2 0f       	add	r30, r18
    507e:	f3 1f       	adc	r31, r19
    5080:	40 83       	st	Z, r20
    5082:	12 c0       	rjmp	.+36     	; 0x50a8 <LCD_voidSendInteger+0x112>
				while(u8Iterator != 0)
				{
					u8Iterator --;
    5084:	88 89       	ldd	r24, Y+16	; 0x10
    5086:	81 50       	subi	r24, 0x01	; 1
    5088:	88 8b       	std	Y+16, r24	; 0x10
					au8IntToCharConvert[u8LastIndex - u8Iterator] = '0';
    508a:	8e 85       	ldd	r24, Y+14	; 0x0e
    508c:	28 2f       	mov	r18, r24
    508e:	30 e0       	ldi	r19, 0x00	; 0
    5090:	88 89       	ldd	r24, Y+16	; 0x10
    5092:	88 2f       	mov	r24, r24
    5094:	90 e0       	ldi	r25, 0x00	; 0
    5096:	28 1b       	sub	r18, r24
    5098:	39 0b       	sbc	r19, r25
    509a:	ce 01       	movw	r24, r28
    509c:	41 96       	adiw	r24, 0x11	; 17
    509e:	fc 01       	movw	r30, r24
    50a0:	e2 0f       	add	r30, r18
    50a2:	f3 1f       	adc	r31, r19
    50a4:	80 e3       	ldi	r24, 0x30	; 48
    50a6:	80 83       	st	Z, r24
			u32 u32Remainder = u32IntData % u32Divisor;
			/*************Print Multiples of 10*************/
			if((u32Remainder == 0) && (u8Iterator >= 1))
			{
				au8IntToCharConvert[u8LastIndex - u8Iterator] = u8Quotient +'0';
				while(u8Iterator != 0)
    50a8:	88 89       	ldd	r24, Y+16	; 0x10
    50aa:	88 23       	and	r24, r24
    50ac:	59 f7       	brne	.-42     	; 0x5084 <LCD_voidSendInteger+0xee>
				{
					u8Iterator --;
					au8IntToCharConvert[u8LastIndex - u8Iterator] = '0';
				}
				LCD_voidSendString(au8IntToCharConvert);
    50ae:	ce 01       	movw	r24, r28
    50b0:	41 96       	adiw	r24, 0x11	; 17
    50b2:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    50b6:	bb c0       	rjmp	.+374    	; 0x522e <LCD_voidSendInteger+0x298>
				break;
			}
			/************Print 0 in Middle of Number**********/
			if(u32Remainder < (u32Divisor /BASE))
    50b8:	8d 81       	ldd	r24, Y+5	; 0x05
    50ba:	9e 81       	ldd	r25, Y+6	; 0x06
    50bc:	af 81       	ldd	r26, Y+7	; 0x07
    50be:	b8 85       	ldd	r27, Y+8	; 0x08
    50c0:	2a e0       	ldi	r18, 0x0A	; 10
    50c2:	30 e0       	ldi	r19, 0x00	; 0
    50c4:	40 e0       	ldi	r20, 0x00	; 0
    50c6:	50 e0       	ldi	r21, 0x00	; 0
    50c8:	bc 01       	movw	r22, r24
    50ca:	cd 01       	movw	r24, r26
    50cc:	0e 94 5c 32 	call	0x64b8	; 0x64b8 <__udivmodsi4>
    50d0:	da 01       	movw	r26, r20
    50d2:	c9 01       	movw	r24, r18
    50d4:	9c 01       	movw	r18, r24
    50d6:	ad 01       	movw	r20, r26
    50d8:	89 81       	ldd	r24, Y+1	; 0x01
    50da:	9a 81       	ldd	r25, Y+2	; 0x02
    50dc:	ab 81       	ldd	r26, Y+3	; 0x03
    50de:	bc 81       	ldd	r27, Y+4	; 0x04
    50e0:	82 17       	cp	r24, r18
    50e2:	93 07       	cpc	r25, r19
    50e4:	a4 07       	cpc	r26, r20
    50e6:	b5 07       	cpc	r27, r21
    50e8:	08 f0       	brcs	.+2      	; 0x50ec <LCD_voidSendInteger+0x156>
    50ea:	6c c0       	rjmp	.+216    	; 0x51c4 <LCD_voidSendInteger+0x22e>
			{
				au8IntToCharConvert[u8LastIndex - u8Iterator] = u8Quotient +'0';
    50ec:	8e 85       	ldd	r24, Y+14	; 0x0e
    50ee:	28 2f       	mov	r18, r24
    50f0:	30 e0       	ldi	r19, 0x00	; 0
    50f2:	88 89       	ldd	r24, Y+16	; 0x10
    50f4:	88 2f       	mov	r24, r24
    50f6:	90 e0       	ldi	r25, 0x00	; 0
    50f8:	28 1b       	sub	r18, r24
    50fa:	39 0b       	sbc	r19, r25
    50fc:	8f 85       	ldd	r24, Y+15	; 0x0f
    50fe:	48 2f       	mov	r20, r24
    5100:	40 5d       	subi	r20, 0xD0	; 208
    5102:	ce 01       	movw	r24, r28
    5104:	41 96       	adiw	r24, 0x11	; 17
    5106:	fc 01       	movw	r30, r24
    5108:	e2 0f       	add	r30, r18
    510a:	f3 1f       	adc	r31, r19
    510c:	40 83       	st	Z, r20
    510e:	24 c0       	rjmp	.+72     	; 0x5158 <LCD_voidSendInteger+0x1c2>
				while(u32Remainder < (u32Divisor /BASE))
				{
					u8Iterator--;
    5110:	88 89       	ldd	r24, Y+16	; 0x10
    5112:	81 50       	subi	r24, 0x01	; 1
    5114:	88 8b       	std	Y+16, r24	; 0x10
					u32Divisor /= BASE;
    5116:	8d 81       	ldd	r24, Y+5	; 0x05
    5118:	9e 81       	ldd	r25, Y+6	; 0x06
    511a:	af 81       	ldd	r26, Y+7	; 0x07
    511c:	b8 85       	ldd	r27, Y+8	; 0x08
    511e:	2a e0       	ldi	r18, 0x0A	; 10
    5120:	30 e0       	ldi	r19, 0x00	; 0
    5122:	40 e0       	ldi	r20, 0x00	; 0
    5124:	50 e0       	ldi	r21, 0x00	; 0
    5126:	bc 01       	movw	r22, r24
    5128:	cd 01       	movw	r24, r26
    512a:	0e 94 5c 32 	call	0x64b8	; 0x64b8 <__udivmodsi4>
    512e:	da 01       	movw	r26, r20
    5130:	c9 01       	movw	r24, r18
    5132:	8d 83       	std	Y+5, r24	; 0x05
    5134:	9e 83       	std	Y+6, r25	; 0x06
    5136:	af 83       	std	Y+7, r26	; 0x07
    5138:	b8 87       	std	Y+8, r27	; 0x08
					au8IntToCharConvert[u8LastIndex - u8Iterator] = '0';
    513a:	8e 85       	ldd	r24, Y+14	; 0x0e
    513c:	28 2f       	mov	r18, r24
    513e:	30 e0       	ldi	r19, 0x00	; 0
    5140:	88 89       	ldd	r24, Y+16	; 0x10
    5142:	88 2f       	mov	r24, r24
    5144:	90 e0       	ldi	r25, 0x00	; 0
    5146:	28 1b       	sub	r18, r24
    5148:	39 0b       	sbc	r19, r25
    514a:	ce 01       	movw	r24, r28
    514c:	41 96       	adiw	r24, 0x11	; 17
    514e:	fc 01       	movw	r30, r24
    5150:	e2 0f       	add	r30, r18
    5152:	f3 1f       	adc	r31, r19
    5154:	80 e3       	ldi	r24, 0x30	; 48
    5156:	80 83       	st	Z, r24
			}
			/************Print 0 in Middle of Number**********/
			if(u32Remainder < (u32Divisor /BASE))
			{
				au8IntToCharConvert[u8LastIndex - u8Iterator] = u8Quotient +'0';
				while(u32Remainder < (u32Divisor /BASE))
    5158:	8d 81       	ldd	r24, Y+5	; 0x05
    515a:	9e 81       	ldd	r25, Y+6	; 0x06
    515c:	af 81       	ldd	r26, Y+7	; 0x07
    515e:	b8 85       	ldd	r27, Y+8	; 0x08
    5160:	2a e0       	ldi	r18, 0x0A	; 10
    5162:	30 e0       	ldi	r19, 0x00	; 0
    5164:	40 e0       	ldi	r20, 0x00	; 0
    5166:	50 e0       	ldi	r21, 0x00	; 0
    5168:	bc 01       	movw	r22, r24
    516a:	cd 01       	movw	r24, r26
    516c:	0e 94 5c 32 	call	0x64b8	; 0x64b8 <__udivmodsi4>
    5170:	da 01       	movw	r26, r20
    5172:	c9 01       	movw	r24, r18
    5174:	9c 01       	movw	r18, r24
    5176:	ad 01       	movw	r20, r26
    5178:	89 81       	ldd	r24, Y+1	; 0x01
    517a:	9a 81       	ldd	r25, Y+2	; 0x02
    517c:	ab 81       	ldd	r26, Y+3	; 0x03
    517e:	bc 81       	ldd	r27, Y+4	; 0x04
    5180:	82 17       	cp	r24, r18
    5182:	93 07       	cpc	r25, r19
    5184:	a4 07       	cpc	r26, r20
    5186:	b5 07       	cpc	r27, r21
    5188:	18 f2       	brcs	.-122    	; 0x5110 <LCD_voidSendInteger+0x17a>
				{
					u8Iterator--;
					u32Divisor /= BASE;
					au8IntToCharConvert[u8LastIndex - u8Iterator] = '0';
				}
				if(u8Iterator > 1)
    518a:	88 89       	ldd	r24, Y+16	; 0x10
    518c:	82 30       	cpi	r24, 0x02	; 2
    518e:	48 f0       	brcs	.+18     	; 0x51a2 <LCD_voidSendInteger+0x20c>
				{
					u32IntData = u32Remainder;
    5190:	89 81       	ldd	r24, Y+1	; 0x01
    5192:	9a 81       	ldd	r25, Y+2	; 0x02
    5194:	ab 81       	ldd	r26, Y+3	; 0x03
    5196:	bc 81       	ldd	r27, Y+4	; 0x04
    5198:	8a 8f       	std	Y+26, r24	; 0x1a
    519a:	9b 8f       	std	Y+27, r25	; 0x1b
    519c:	ac 8f       	std	Y+28, r26	; 0x1c
    519e:	bd 8f       	std	Y+29, r27	; 0x1d
    51a0:	3f c0       	rjmp	.+126    	; 0x5220 <LCD_voidSendInteger+0x28a>
					continue;
				}
				else
				{
					au8IntToCharConvert[u8LastIndex] = u32Remainder + '0';
    51a2:	8e 85       	ldd	r24, Y+14	; 0x0e
    51a4:	28 2f       	mov	r18, r24
    51a6:	30 e0       	ldi	r19, 0x00	; 0
    51a8:	89 81       	ldd	r24, Y+1	; 0x01
    51aa:	48 2f       	mov	r20, r24
    51ac:	40 5d       	subi	r20, 0xD0	; 208
    51ae:	ce 01       	movw	r24, r28
    51b0:	41 96       	adiw	r24, 0x11	; 17
    51b2:	fc 01       	movw	r30, r24
    51b4:	e2 0f       	add	r30, r18
    51b6:	f3 1f       	adc	r31, r19
    51b8:	40 83       	st	Z, r20
					LCD_voidSendString(au8IntToCharConvert);
    51ba:	ce 01       	movw	r24, r28
    51bc:	41 96       	adiw	r24, 0x11	; 17
    51be:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    51c2:	35 c0       	rjmp	.+106    	; 0x522e <LCD_voidSendInteger+0x298>
					break;
				}

			}
			/* print Normal Number without zeros in it*/
			au8IntToCharConvert[u8LastIndex - u8Iterator] = u8Quotient +'0';
    51c4:	8e 85       	ldd	r24, Y+14	; 0x0e
    51c6:	28 2f       	mov	r18, r24
    51c8:	30 e0       	ldi	r19, 0x00	; 0
    51ca:	88 89       	ldd	r24, Y+16	; 0x10
    51cc:	88 2f       	mov	r24, r24
    51ce:	90 e0       	ldi	r25, 0x00	; 0
    51d0:	28 1b       	sub	r18, r24
    51d2:	39 0b       	sbc	r19, r25
    51d4:	8f 85       	ldd	r24, Y+15	; 0x0f
    51d6:	48 2f       	mov	r20, r24
    51d8:	40 5d       	subi	r20, 0xD0	; 208
    51da:	ce 01       	movw	r24, r28
    51dc:	41 96       	adiw	r24, 0x11	; 17
    51de:	fc 01       	movw	r30, r24
    51e0:	e2 0f       	add	r30, r18
    51e2:	f3 1f       	adc	r31, r19
    51e4:	40 83       	st	Z, r20
			if(u8Iterator > 1)
    51e6:	88 89       	ldd	r24, Y+16	; 0x10
    51e8:	82 30       	cpi	r24, 0x02	; 2
    51ea:	48 f0       	brcs	.+18     	; 0x51fe <LCD_voidSendInteger+0x268>
			{
				u32IntData = u32Remainder;
    51ec:	89 81       	ldd	r24, Y+1	; 0x01
    51ee:	9a 81       	ldd	r25, Y+2	; 0x02
    51f0:	ab 81       	ldd	r26, Y+3	; 0x03
    51f2:	bc 81       	ldd	r27, Y+4	; 0x04
    51f4:	8a 8f       	std	Y+26, r24	; 0x1a
    51f6:	9b 8f       	std	Y+27, r25	; 0x1b
    51f8:	ac 8f       	std	Y+28, r26	; 0x1c
    51fa:	bd 8f       	std	Y+29, r27	; 0x1d
    51fc:	11 c0       	rjmp	.+34     	; 0x5220 <LCD_voidSendInteger+0x28a>
				continue;
			}
			else
			{
				au8IntToCharConvert[u8LastIndex] = u32Remainder + '0';
    51fe:	8e 85       	ldd	r24, Y+14	; 0x0e
    5200:	28 2f       	mov	r18, r24
    5202:	30 e0       	ldi	r19, 0x00	; 0
    5204:	89 81       	ldd	r24, Y+1	; 0x01
    5206:	48 2f       	mov	r20, r24
    5208:	40 5d       	subi	r20, 0xD0	; 208
    520a:	ce 01       	movw	r24, r28
    520c:	41 96       	adiw	r24, 0x11	; 17
    520e:	fc 01       	movw	r30, r24
    5210:	e2 0f       	add	r30, r18
    5212:	f3 1f       	adc	r31, r19
    5214:	40 83       	st	Z, r20
				LCD_voidSendString(au8IntToCharConvert);
    5216:	ce 01       	movw	r24, r28
    5218:	41 96       	adiw	r24, 0x11	; 17
    521a:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <LCD_voidSendString>
    521e:	07 c0       	rjmp	.+14     	; 0x522e <LCD_voidSendInteger+0x298>
	u8 u8LastIndex;    //Number of  Digits for Entry number
	u8 u8Flag = 1;    //For Get u8LastIndex
	u32 u32Remainder;
	u32 u32Divisor;

	for(u8Iterator = NUMBER_OF_DIGITS ; u8Iterator >= 1 ; u8Iterator--)
    5220:	88 89       	ldd	r24, Y+16	; 0x10
    5222:	81 50       	subi	r24, 0x01	; 1
    5224:	88 8b       	std	Y+16, r24	; 0x10
    5226:	88 89       	ldd	r24, Y+16	; 0x10
    5228:	88 23       	and	r24, r24
    522a:	09 f0       	breq	.+2      	; 0x522e <LCD_voidSendInteger+0x298>
    522c:	cf ce       	rjmp	.-610    	; 0x4fcc <LCD_voidSendInteger+0x36>
				break;
			}
		}
	}
	/* print Integer Number if it One Digit */
	if(u8Flag == 1)
    522e:	8d 85       	ldd	r24, Y+13	; 0x0d
    5230:	81 30       	cpi	r24, 0x01	; 1
    5232:	21 f4       	brne	.+8      	; 0x523c <LCD_voidSendInteger+0x2a6>
	{
		LCD_voidSendData((u32IntData + '0'));
    5234:	8a 8d       	ldd	r24, Y+26	; 0x1a
    5236:	80 5d       	subi	r24, 0xD0	; 208
    5238:	0e 94 7f 25 	call	0x4afe	; 0x4afe <LCD_voidSendData>
	}
}
    523c:	6d 96       	adiw	r28, 0x1d	; 29
    523e:	0f b6       	in	r0, 0x3f	; 63
    5240:	f8 94       	cli
    5242:	de bf       	out	0x3e, r29	; 62
    5244:	0f be       	out	0x3f, r0	; 63
    5246:	cd bf       	out	0x3d, r28	; 61
    5248:	cf 91       	pop	r28
    524a:	df 91       	pop	r29
    524c:	08 95       	ret

0000524e <LCD_voidDisableCursor>:


void LCD_voidDisableCursor()
{
    524e:	df 93       	push	r29
    5250:	cf 93       	push	r28
    5252:	cd b7       	in	r28, 0x3d	; 61
    5254:	de b7       	in	r29, 0x3e	; 62
    5256:	2e 97       	sbiw	r28, 0x0e	; 14
    5258:	0f b6       	in	r0, 0x3f	; 63
    525a:	f8 94       	cli
    525c:	de bf       	out	0x3e, r29	; 62
    525e:	0f be       	out	0x3f, r0	; 63
    5260:	cd bf       	out	0x3d, r28	; 61
	/* Disable Cursor */
	LCD_voidSendCommand(LCD_DISP_ON_CURSOR_OFF);
    5262:	8c e0       	ldi	r24, 0x0C	; 12
    5264:	0e 94 6f 24 	call	0x48de	; 0x48de <LCD_voidSendCommand>
    5268:	80 e0       	ldi	r24, 0x00	; 0
    526a:	90 e0       	ldi	r25, 0x00	; 0
    526c:	a0 e7       	ldi	r26, 0x70	; 112
    526e:	b1 e4       	ldi	r27, 0x41	; 65
    5270:	8b 87       	std	Y+11, r24	; 0x0b
    5272:	9c 87       	std	Y+12, r25	; 0x0c
    5274:	ad 87       	std	Y+13, r26	; 0x0d
    5276:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5278:	6b 85       	ldd	r22, Y+11	; 0x0b
    527a:	7c 85       	ldd	r23, Y+12	; 0x0c
    527c:	8d 85       	ldd	r24, Y+13	; 0x0d
    527e:	9e 85       	ldd	r25, Y+14	; 0x0e
    5280:	20 e0       	ldi	r18, 0x00	; 0
    5282:	30 e0       	ldi	r19, 0x00	; 0
    5284:	4a ef       	ldi	r20, 0xFA	; 250
    5286:	54 e4       	ldi	r21, 0x44	; 68
    5288:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    528c:	dc 01       	movw	r26, r24
    528e:	cb 01       	movw	r24, r22
    5290:	8f 83       	std	Y+7, r24	; 0x07
    5292:	98 87       	std	Y+8, r25	; 0x08
    5294:	a9 87       	std	Y+9, r26	; 0x09
    5296:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    5298:	6f 81       	ldd	r22, Y+7	; 0x07
    529a:	78 85       	ldd	r23, Y+8	; 0x08
    529c:	89 85       	ldd	r24, Y+9	; 0x09
    529e:	9a 85       	ldd	r25, Y+10	; 0x0a
    52a0:	20 e0       	ldi	r18, 0x00	; 0
    52a2:	30 e0       	ldi	r19, 0x00	; 0
    52a4:	40 e8       	ldi	r20, 0x80	; 128
    52a6:	5f e3       	ldi	r21, 0x3F	; 63
    52a8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    52ac:	88 23       	and	r24, r24
    52ae:	2c f4       	brge	.+10     	; 0x52ba <LCD_voidDisableCursor+0x6c>
		__ticks = 1;
    52b0:	81 e0       	ldi	r24, 0x01	; 1
    52b2:	90 e0       	ldi	r25, 0x00	; 0
    52b4:	9e 83       	std	Y+6, r25	; 0x06
    52b6:	8d 83       	std	Y+5, r24	; 0x05
    52b8:	3f c0       	rjmp	.+126    	; 0x5338 <LCD_voidDisableCursor+0xea>
	else if (__tmp > 65535)
    52ba:	6f 81       	ldd	r22, Y+7	; 0x07
    52bc:	78 85       	ldd	r23, Y+8	; 0x08
    52be:	89 85       	ldd	r24, Y+9	; 0x09
    52c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    52c2:	20 e0       	ldi	r18, 0x00	; 0
    52c4:	3f ef       	ldi	r19, 0xFF	; 255
    52c6:	4f e7       	ldi	r20, 0x7F	; 127
    52c8:	57 e4       	ldi	r21, 0x47	; 71
    52ca:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    52ce:	18 16       	cp	r1, r24
    52d0:	4c f5       	brge	.+82     	; 0x5324 <LCD_voidDisableCursor+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    52d2:	6b 85       	ldd	r22, Y+11	; 0x0b
    52d4:	7c 85       	ldd	r23, Y+12	; 0x0c
    52d6:	8d 85       	ldd	r24, Y+13	; 0x0d
    52d8:	9e 85       	ldd	r25, Y+14	; 0x0e
    52da:	20 e0       	ldi	r18, 0x00	; 0
    52dc:	30 e0       	ldi	r19, 0x00	; 0
    52de:	40 e2       	ldi	r20, 0x20	; 32
    52e0:	51 e4       	ldi	r21, 0x41	; 65
    52e2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    52e6:	dc 01       	movw	r26, r24
    52e8:	cb 01       	movw	r24, r22
    52ea:	bc 01       	movw	r22, r24
    52ec:	cd 01       	movw	r24, r26
    52ee:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    52f2:	dc 01       	movw	r26, r24
    52f4:	cb 01       	movw	r24, r22
    52f6:	9e 83       	std	Y+6, r25	; 0x06
    52f8:	8d 83       	std	Y+5, r24	; 0x05
    52fa:	0f c0       	rjmp	.+30     	; 0x531a <LCD_voidDisableCursor+0xcc>
    52fc:	88 ec       	ldi	r24, 0xC8	; 200
    52fe:	90 e0       	ldi	r25, 0x00	; 0
    5300:	9c 83       	std	Y+4, r25	; 0x04
    5302:	8b 83       	std	Y+3, r24	; 0x03
    5304:	8b 81       	ldd	r24, Y+3	; 0x03
    5306:	9c 81       	ldd	r25, Y+4	; 0x04
    5308:	01 97       	sbiw	r24, 0x01	; 1
    530a:	f1 f7       	brne	.-4      	; 0x5308 <LCD_voidDisableCursor+0xba>
    530c:	9c 83       	std	Y+4, r25	; 0x04
    530e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5310:	8d 81       	ldd	r24, Y+5	; 0x05
    5312:	9e 81       	ldd	r25, Y+6	; 0x06
    5314:	01 97       	sbiw	r24, 0x01	; 1
    5316:	9e 83       	std	Y+6, r25	; 0x06
    5318:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    531a:	8d 81       	ldd	r24, Y+5	; 0x05
    531c:	9e 81       	ldd	r25, Y+6	; 0x06
    531e:	00 97       	sbiw	r24, 0x00	; 0
    5320:	69 f7       	brne	.-38     	; 0x52fc <LCD_voidDisableCursor+0xae>
    5322:	14 c0       	rjmp	.+40     	; 0x534c <LCD_voidDisableCursor+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5324:	6f 81       	ldd	r22, Y+7	; 0x07
    5326:	78 85       	ldd	r23, Y+8	; 0x08
    5328:	89 85       	ldd	r24, Y+9	; 0x09
    532a:	9a 85       	ldd	r25, Y+10	; 0x0a
    532c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5330:	dc 01       	movw	r26, r24
    5332:	cb 01       	movw	r24, r22
    5334:	9e 83       	std	Y+6, r25	; 0x06
    5336:	8d 83       	std	Y+5, r24	; 0x05
    5338:	8d 81       	ldd	r24, Y+5	; 0x05
    533a:	9e 81       	ldd	r25, Y+6	; 0x06
    533c:	9a 83       	std	Y+2, r25	; 0x02
    533e:	89 83       	std	Y+1, r24	; 0x01
    5340:	89 81       	ldd	r24, Y+1	; 0x01
    5342:	9a 81       	ldd	r25, Y+2	; 0x02
    5344:	01 97       	sbiw	r24, 0x01	; 1
    5346:	f1 f7       	brne	.-4      	; 0x5344 <LCD_voidDisableCursor+0xf6>
    5348:	9a 83       	std	Y+2, r25	; 0x02
    534a:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(15);
}
    534c:	2e 96       	adiw	r28, 0x0e	; 14
    534e:	0f b6       	in	r0, 0x3f	; 63
    5350:	f8 94       	cli
    5352:	de bf       	out	0x3e, r29	; 62
    5354:	0f be       	out	0x3f, r0	; 63
    5356:	cd bf       	out	0x3d, r28	; 61
    5358:	cf 91       	pop	r28
    535a:	df 91       	pop	r29
    535c:	08 95       	ret

0000535e <LCD_voidEnableCursor>:


void LCD_voidEnableCursor()
{
    535e:	df 93       	push	r29
    5360:	cf 93       	push	r28
    5362:	cd b7       	in	r28, 0x3d	; 61
    5364:	de b7       	in	r29, 0x3e	; 62
    5366:	2e 97       	sbiw	r28, 0x0e	; 14
    5368:	0f b6       	in	r0, 0x3f	; 63
    536a:	f8 94       	cli
    536c:	de bf       	out	0x3e, r29	; 62
    536e:	0f be       	out	0x3f, r0	; 63
    5370:	cd bf       	out	0x3d, r28	; 61
	/* Enable Cursor */
	LCD_voidSendCommand(LCD_DISP_ON_CURSOR_ON);
    5372:	8e e0       	ldi	r24, 0x0E	; 14
    5374:	0e 94 6f 24 	call	0x48de	; 0x48de <LCD_voidSendCommand>
    5378:	80 e0       	ldi	r24, 0x00	; 0
    537a:	90 e0       	ldi	r25, 0x00	; 0
    537c:	a0 e7       	ldi	r26, 0x70	; 112
    537e:	b1 e4       	ldi	r27, 0x41	; 65
    5380:	8b 87       	std	Y+11, r24	; 0x0b
    5382:	9c 87       	std	Y+12, r25	; 0x0c
    5384:	ad 87       	std	Y+13, r26	; 0x0d
    5386:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5388:	6b 85       	ldd	r22, Y+11	; 0x0b
    538a:	7c 85       	ldd	r23, Y+12	; 0x0c
    538c:	8d 85       	ldd	r24, Y+13	; 0x0d
    538e:	9e 85       	ldd	r25, Y+14	; 0x0e
    5390:	20 e0       	ldi	r18, 0x00	; 0
    5392:	30 e0       	ldi	r19, 0x00	; 0
    5394:	4a ef       	ldi	r20, 0xFA	; 250
    5396:	54 e4       	ldi	r21, 0x44	; 68
    5398:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    539c:	dc 01       	movw	r26, r24
    539e:	cb 01       	movw	r24, r22
    53a0:	8f 83       	std	Y+7, r24	; 0x07
    53a2:	98 87       	std	Y+8, r25	; 0x08
    53a4:	a9 87       	std	Y+9, r26	; 0x09
    53a6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    53a8:	6f 81       	ldd	r22, Y+7	; 0x07
    53aa:	78 85       	ldd	r23, Y+8	; 0x08
    53ac:	89 85       	ldd	r24, Y+9	; 0x09
    53ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    53b0:	20 e0       	ldi	r18, 0x00	; 0
    53b2:	30 e0       	ldi	r19, 0x00	; 0
    53b4:	40 e8       	ldi	r20, 0x80	; 128
    53b6:	5f e3       	ldi	r21, 0x3F	; 63
    53b8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    53bc:	88 23       	and	r24, r24
    53be:	2c f4       	brge	.+10     	; 0x53ca <LCD_voidEnableCursor+0x6c>
		__ticks = 1;
    53c0:	81 e0       	ldi	r24, 0x01	; 1
    53c2:	90 e0       	ldi	r25, 0x00	; 0
    53c4:	9e 83       	std	Y+6, r25	; 0x06
    53c6:	8d 83       	std	Y+5, r24	; 0x05
    53c8:	3f c0       	rjmp	.+126    	; 0x5448 <LCD_voidEnableCursor+0xea>
	else if (__tmp > 65535)
    53ca:	6f 81       	ldd	r22, Y+7	; 0x07
    53cc:	78 85       	ldd	r23, Y+8	; 0x08
    53ce:	89 85       	ldd	r24, Y+9	; 0x09
    53d0:	9a 85       	ldd	r25, Y+10	; 0x0a
    53d2:	20 e0       	ldi	r18, 0x00	; 0
    53d4:	3f ef       	ldi	r19, 0xFF	; 255
    53d6:	4f e7       	ldi	r20, 0x7F	; 127
    53d8:	57 e4       	ldi	r21, 0x47	; 71
    53da:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    53de:	18 16       	cp	r1, r24
    53e0:	4c f5       	brge	.+82     	; 0x5434 <LCD_voidEnableCursor+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    53e2:	6b 85       	ldd	r22, Y+11	; 0x0b
    53e4:	7c 85       	ldd	r23, Y+12	; 0x0c
    53e6:	8d 85       	ldd	r24, Y+13	; 0x0d
    53e8:	9e 85       	ldd	r25, Y+14	; 0x0e
    53ea:	20 e0       	ldi	r18, 0x00	; 0
    53ec:	30 e0       	ldi	r19, 0x00	; 0
    53ee:	40 e2       	ldi	r20, 0x20	; 32
    53f0:	51 e4       	ldi	r21, 0x41	; 65
    53f2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    53f6:	dc 01       	movw	r26, r24
    53f8:	cb 01       	movw	r24, r22
    53fa:	bc 01       	movw	r22, r24
    53fc:	cd 01       	movw	r24, r26
    53fe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5402:	dc 01       	movw	r26, r24
    5404:	cb 01       	movw	r24, r22
    5406:	9e 83       	std	Y+6, r25	; 0x06
    5408:	8d 83       	std	Y+5, r24	; 0x05
    540a:	0f c0       	rjmp	.+30     	; 0x542a <LCD_voidEnableCursor+0xcc>
    540c:	88 ec       	ldi	r24, 0xC8	; 200
    540e:	90 e0       	ldi	r25, 0x00	; 0
    5410:	9c 83       	std	Y+4, r25	; 0x04
    5412:	8b 83       	std	Y+3, r24	; 0x03
    5414:	8b 81       	ldd	r24, Y+3	; 0x03
    5416:	9c 81       	ldd	r25, Y+4	; 0x04
    5418:	01 97       	sbiw	r24, 0x01	; 1
    541a:	f1 f7       	brne	.-4      	; 0x5418 <LCD_voidEnableCursor+0xba>
    541c:	9c 83       	std	Y+4, r25	; 0x04
    541e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5420:	8d 81       	ldd	r24, Y+5	; 0x05
    5422:	9e 81       	ldd	r25, Y+6	; 0x06
    5424:	01 97       	sbiw	r24, 0x01	; 1
    5426:	9e 83       	std	Y+6, r25	; 0x06
    5428:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    542a:	8d 81       	ldd	r24, Y+5	; 0x05
    542c:	9e 81       	ldd	r25, Y+6	; 0x06
    542e:	00 97       	sbiw	r24, 0x00	; 0
    5430:	69 f7       	brne	.-38     	; 0x540c <LCD_voidEnableCursor+0xae>
    5432:	14 c0       	rjmp	.+40     	; 0x545c <LCD_voidEnableCursor+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5434:	6f 81       	ldd	r22, Y+7	; 0x07
    5436:	78 85       	ldd	r23, Y+8	; 0x08
    5438:	89 85       	ldd	r24, Y+9	; 0x09
    543a:	9a 85       	ldd	r25, Y+10	; 0x0a
    543c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5440:	dc 01       	movw	r26, r24
    5442:	cb 01       	movw	r24, r22
    5444:	9e 83       	std	Y+6, r25	; 0x06
    5446:	8d 83       	std	Y+5, r24	; 0x05
    5448:	8d 81       	ldd	r24, Y+5	; 0x05
    544a:	9e 81       	ldd	r25, Y+6	; 0x06
    544c:	9a 83       	std	Y+2, r25	; 0x02
    544e:	89 83       	std	Y+1, r24	; 0x01
    5450:	89 81       	ldd	r24, Y+1	; 0x01
    5452:	9a 81       	ldd	r25, Y+2	; 0x02
    5454:	01 97       	sbiw	r24, 0x01	; 1
    5456:	f1 f7       	brne	.-4      	; 0x5454 <LCD_voidEnableCursor+0xf6>
    5458:	9a 83       	std	Y+2, r25	; 0x02
    545a:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(15);
}
    545c:	2e 96       	adiw	r28, 0x0e	; 14
    545e:	0f b6       	in	r0, 0x3f	; 63
    5460:	f8 94       	cli
    5462:	de bf       	out	0x3e, r29	; 62
    5464:	0f be       	out	0x3f, r0	; 63
    5466:	cd bf       	out	0x3d, r28	; 61
    5468:	cf 91       	pop	r28
    546a:	df 91       	pop	r29
    546c:	08 95       	ret

0000546e <u32Power>:


u32 u32Power(u8 u8Base , u8 u8Exp)
{
    546e:	df 93       	push	r29
    5470:	cf 93       	push	r28
    5472:	00 d0       	rcall	.+0      	; 0x5474 <u32Power+0x6>
    5474:	00 d0       	rcall	.+0      	; 0x5476 <u32Power+0x8>
    5476:	00 d0       	rcall	.+0      	; 0x5478 <u32Power+0xa>
    5478:	cd b7       	in	r28, 0x3d	; 61
    547a:	de b7       	in	r29, 0x3e	; 62
    547c:	8d 83       	std	Y+5, r24	; 0x05
    547e:	6e 83       	std	Y+6, r22	; 0x06
	u32 u32Result = 1;
    5480:	81 e0       	ldi	r24, 0x01	; 1
    5482:	90 e0       	ldi	r25, 0x00	; 0
    5484:	a0 e0       	ldi	r26, 0x00	; 0
    5486:	b0 e0       	ldi	r27, 0x00	; 0
    5488:	89 83       	std	Y+1, r24	; 0x01
    548a:	9a 83       	std	Y+2, r25	; 0x02
    548c:	ab 83       	std	Y+3, r26	; 0x03
    548e:	bc 83       	std	Y+4, r27	; 0x04
    5490:	16 c0       	rjmp	.+44     	; 0x54be <u32Power+0x50>
	while (u8Exp != 0)
	{
		u32Result *= u8Base;
    5492:	8d 81       	ldd	r24, Y+5	; 0x05
    5494:	28 2f       	mov	r18, r24
    5496:	30 e0       	ldi	r19, 0x00	; 0
    5498:	40 e0       	ldi	r20, 0x00	; 0
    549a:	50 e0       	ldi	r21, 0x00	; 0
    549c:	89 81       	ldd	r24, Y+1	; 0x01
    549e:	9a 81       	ldd	r25, Y+2	; 0x02
    54a0:	ab 81       	ldd	r26, Y+3	; 0x03
    54a2:	bc 81       	ldd	r27, Y+4	; 0x04
    54a4:	bc 01       	movw	r22, r24
    54a6:	cd 01       	movw	r24, r26
    54a8:	0e 94 29 32 	call	0x6452	; 0x6452 <__mulsi3>
    54ac:	dc 01       	movw	r26, r24
    54ae:	cb 01       	movw	r24, r22
    54b0:	89 83       	std	Y+1, r24	; 0x01
    54b2:	9a 83       	std	Y+2, r25	; 0x02
    54b4:	ab 83       	std	Y+3, r26	; 0x03
    54b6:	bc 83       	std	Y+4, r27	; 0x04
		u8Exp--;
    54b8:	8e 81       	ldd	r24, Y+6	; 0x06
    54ba:	81 50       	subi	r24, 0x01	; 1
    54bc:	8e 83       	std	Y+6, r24	; 0x06


u32 u32Power(u8 u8Base , u8 u8Exp)
{
	u32 u32Result = 1;
	while (u8Exp != 0)
    54be:	8e 81       	ldd	r24, Y+6	; 0x06
    54c0:	88 23       	and	r24, r24
    54c2:	39 f7       	brne	.-50     	; 0x5492 <u32Power+0x24>
	{
		u32Result *= u8Base;
		u8Exp--;
	}
	return u32Result;
    54c4:	89 81       	ldd	r24, Y+1	; 0x01
    54c6:	9a 81       	ldd	r25, Y+2	; 0x02
    54c8:	ab 81       	ldd	r26, Y+3	; 0x03
    54ca:	bc 81       	ldd	r27, Y+4	; 0x04
}
    54cc:	bc 01       	movw	r22, r24
    54ce:	cd 01       	movw	r24, r26
    54d0:	26 96       	adiw	r28, 0x06	; 6
    54d2:	0f b6       	in	r0, 0x3f	; 63
    54d4:	f8 94       	cli
    54d6:	de bf       	out	0x3e, r29	; 62
    54d8:	0f be       	out	0x3f, r0	; 63
    54da:	cd bf       	out	0x3d, r28	; 61
    54dc:	cf 91       	pop	r28
    54de:	df 91       	pop	r29
    54e0:	08 95       	ret

000054e2 <TIMER0_voidInit>:
/*************************************************************************************************************************/
/********************************************TIMER0 FUNCTIONS IMPLEMENTATION**********************************************/
/*************************************************************************************************************************/

void TIMER0_voidInit()
{
    54e2:	df 93       	push	r29
    54e4:	cf 93       	push	r28
    54e6:	cd b7       	in	r28, 0x3d	; 61
    54e8:	de b7       	in	r29, 0x3e	; 62
		/* Set the required CTC value */
		OCR0_REG = TIMER0_CTC_PHASE_CORRECT_PWM_VALUE;

	#elif TIMER0_MODE == TIMER_CTC_MODE
		/* Initialize TIMER0 as pwm phase correct mode */
		CLR_BIT(TCCR0_REG , WGM00);
    54ea:	a3 e5       	ldi	r26, 0x53	; 83
    54ec:	b0 e0       	ldi	r27, 0x00	; 0
    54ee:	e3 e5       	ldi	r30, 0x53	; 83
    54f0:	f0 e0       	ldi	r31, 0x00	; 0
    54f2:	80 81       	ld	r24, Z
    54f4:	8f 7b       	andi	r24, 0xBF	; 191
    54f6:	8c 93       	st	X, r24
		SET_BIT(TCCR0_REG , WGM01);
    54f8:	a3 e5       	ldi	r26, 0x53	; 83
    54fa:	b0 e0       	ldi	r27, 0x00	; 0
    54fc:	e3 e5       	ldi	r30, 0x53	; 83
    54fe:	f0 e0       	ldi	r31, 0x00	; 0
    5500:	80 81       	ld	r24, Z
    5502:	88 60       	ori	r24, 0x08	; 8
    5504:	8c 93       	st	X, r24

		/* Set CTC NO PWM Mode (config OC0 PIN)*/
		#if TIMER0_CTC_NO_PWM_MODE == TIMER_OC_DISCONNECTED
			CLR_BIT(TCCR0_REG , COM00);
    5506:	a3 e5       	ldi	r26, 0x53	; 83
    5508:	b0 e0       	ldi	r27, 0x00	; 0
    550a:	e3 e5       	ldi	r30, 0x53	; 83
    550c:	f0 e0       	ldi	r31, 0x00	; 0
    550e:	80 81       	ld	r24, Z
    5510:	8f 7e       	andi	r24, 0xEF	; 239
    5512:	8c 93       	st	X, r24
			CLR_BIT(TCCR0_REG , COM01);
    5514:	a3 e5       	ldi	r26, 0x53	; 83
    5516:	b0 e0       	ldi	r27, 0x00	; 0
    5518:	e3 e5       	ldi	r30, 0x53	; 83
    551a:	f0 e0       	ldi	r31, 0x00	; 0
    551c:	80 81       	ld	r24, Z
    551e:	8f 7d       	andi	r24, 0xDF	; 223
    5520:	8c 93       	st	X, r24
		#else
			#error "Wrong TIMER0_CTC_NO_PWM Config"
		#endif

		/* Set the required CTC value */
		OCR0_REG = TIMER0_CTC_NO_PWM_VALUE;
    5522:	ec e5       	ldi	r30, 0x5C	; 92
    5524:	f0 e0       	ldi	r31, 0x00	; 0
    5526:	8c e7       	ldi	r24, 0x7C	; 124
    5528:	80 83       	st	Z, r24

		/* TIMER0 CTC INTRRUPT ENABLE */
		#if TIMER0_CTC_INTRRUPT == ENABLE
			SET_BIT(TIMSK_REG , OCIE0);
    552a:	a9 e5       	ldi	r26, 0x59	; 89
    552c:	b0 e0       	ldi	r27, 0x00	; 0
    552e:	e9 e5       	ldi	r30, 0x59	; 89
    5530:	f0 e0       	ldi	r31, 0x00	; 0
    5532:	80 81       	ld	r24, Z
    5534:	82 60       	ori	r24, 0x02	; 2
    5536:	8c 93       	st	X, r24
		#error"Wrong TIMER0_MODE Config"
	#endif

	/* SET THE REQUIRED TIMER0 CLOCK PRESCALER */
	/* MAKE SURE THE FIRST 3 BIT IN TCCR0 REG IS CLEARED */
	TCCR0_REG &= TIMER_PRESCALER_MASK;
    5538:	a3 e5       	ldi	r26, 0x53	; 83
    553a:	b0 e0       	ldi	r27, 0x00	; 0
    553c:	e3 e5       	ldi	r30, 0x53	; 83
    553e:	f0 e0       	ldi	r31, 0x00	; 0
    5540:	80 81       	ld	r24, Z
    5542:	88 7f       	andi	r24, 0xF8	; 248
    5544:	8c 93       	st	X, r24
	TCCR0_REG |= TIMER0_PRESCALER;
    5546:	a3 e5       	ldi	r26, 0x53	; 83
    5548:	b0 e0       	ldi	r27, 0x00	; 0
    554a:	e3 e5       	ldi	r30, 0x53	; 83
    554c:	f0 e0       	ldi	r31, 0x00	; 0
    554e:	80 81       	ld	r24, Z
    5550:	83 60       	ori	r24, 0x03	; 3
    5552:	8c 93       	st	X, r24

}
    5554:	cf 91       	pop	r28
    5556:	df 91       	pop	r29
    5558:	08 95       	ret

0000555a <TIMER0_voidSetMode>:


void TIMER0_voidSetMode(u8 u8Mode)
{
    555a:	df 93       	push	r29
    555c:	cf 93       	push	r28
    555e:	00 d0       	rcall	.+0      	; 0x5560 <TIMER0_voidSetMode+0x6>
    5560:	0f 92       	push	r0
    5562:	cd b7       	in	r28, 0x3d	; 61
    5564:	de b7       	in	r29, 0x3e	; 62
    5566:	89 83       	std	Y+1, r24	; 0x01
	/* check From u8Mode value */
	if( u8Mode <= TIMER_FAST_PWM_MODE)
    5568:	89 81       	ldd	r24, Y+1	; 0x01
    556a:	84 30       	cpi	r24, 0x04	; 4
    556c:	08 f0       	brcs	.+2      	; 0x5570 <TIMER0_voidSetMode+0x16>
    556e:	5a c0       	rjmp	.+180    	; 0x5624 <TIMER0_voidSetMode+0xca>
	{
		/* Set timer mode */
		switch(u8Mode)
    5570:	89 81       	ldd	r24, Y+1	; 0x01
    5572:	28 2f       	mov	r18, r24
    5574:	30 e0       	ldi	r19, 0x00	; 0
    5576:	3b 83       	std	Y+3, r19	; 0x03
    5578:	2a 83       	std	Y+2, r18	; 0x02
    557a:	8a 81       	ldd	r24, Y+2	; 0x02
    557c:	9b 81       	ldd	r25, Y+3	; 0x03
    557e:	81 30       	cpi	r24, 0x01	; 1
    5580:	91 05       	cpc	r25, r1
    5582:	21 f1       	breq	.+72     	; 0x55cc <TIMER0_voidSetMode+0x72>
    5584:	2a 81       	ldd	r18, Y+2	; 0x02
    5586:	3b 81       	ldd	r19, Y+3	; 0x03
    5588:	22 30       	cpi	r18, 0x02	; 2
    558a:	31 05       	cpc	r19, r1
    558c:	2c f4       	brge	.+10     	; 0x5598 <TIMER0_voidSetMode+0x3e>
    558e:	8a 81       	ldd	r24, Y+2	; 0x02
    5590:	9b 81       	ldd	r25, Y+3	; 0x03
    5592:	00 97       	sbiw	r24, 0x00	; 0
    5594:	61 f0       	breq	.+24     	; 0x55ae <TIMER0_voidSetMode+0x54>
    5596:	46 c0       	rjmp	.+140    	; 0x5624 <TIMER0_voidSetMode+0xca>
    5598:	2a 81       	ldd	r18, Y+2	; 0x02
    559a:	3b 81       	ldd	r19, Y+3	; 0x03
    559c:	22 30       	cpi	r18, 0x02	; 2
    559e:	31 05       	cpc	r19, r1
    55a0:	21 f1       	breq	.+72     	; 0x55ea <TIMER0_voidSetMode+0x90>
    55a2:	8a 81       	ldd	r24, Y+2	; 0x02
    55a4:	9b 81       	ldd	r25, Y+3	; 0x03
    55a6:	83 30       	cpi	r24, 0x03	; 3
    55a8:	91 05       	cpc	r25, r1
    55aa:	71 f1       	breq	.+92     	; 0x5608 <TIMER0_voidSetMode+0xae>
    55ac:	3b c0       	rjmp	.+118    	; 0x5624 <TIMER0_voidSetMode+0xca>
		{
		case TIMER_NORMAL_MODE            : CLR_BIT(TCCR0_REG , WGM00); CLR_BIT(TCCR0_REG , WGM01); break;
    55ae:	a3 e5       	ldi	r26, 0x53	; 83
    55b0:	b0 e0       	ldi	r27, 0x00	; 0
    55b2:	e3 e5       	ldi	r30, 0x53	; 83
    55b4:	f0 e0       	ldi	r31, 0x00	; 0
    55b6:	80 81       	ld	r24, Z
    55b8:	8f 7b       	andi	r24, 0xBF	; 191
    55ba:	8c 93       	st	X, r24
    55bc:	a3 e5       	ldi	r26, 0x53	; 83
    55be:	b0 e0       	ldi	r27, 0x00	; 0
    55c0:	e3 e5       	ldi	r30, 0x53	; 83
    55c2:	f0 e0       	ldi	r31, 0x00	; 0
    55c4:	80 81       	ld	r24, Z
    55c6:	87 7f       	andi	r24, 0xF7	; 247
    55c8:	8c 93       	st	X, r24
    55ca:	2c c0       	rjmp	.+88     	; 0x5624 <TIMER0_voidSetMode+0xca>
		case TIMER_PWM_PHASE_CORRECT_MODE : SET_BIT(TCCR0_REG , WGM00); CLR_BIT(TCCR0_REG , WGM01);	break;
    55cc:	a3 e5       	ldi	r26, 0x53	; 83
    55ce:	b0 e0       	ldi	r27, 0x00	; 0
    55d0:	e3 e5       	ldi	r30, 0x53	; 83
    55d2:	f0 e0       	ldi	r31, 0x00	; 0
    55d4:	80 81       	ld	r24, Z
    55d6:	80 64       	ori	r24, 0x40	; 64
    55d8:	8c 93       	st	X, r24
    55da:	a3 e5       	ldi	r26, 0x53	; 83
    55dc:	b0 e0       	ldi	r27, 0x00	; 0
    55de:	e3 e5       	ldi	r30, 0x53	; 83
    55e0:	f0 e0       	ldi	r31, 0x00	; 0
    55e2:	80 81       	ld	r24, Z
    55e4:	87 7f       	andi	r24, 0xF7	; 247
    55e6:	8c 93       	st	X, r24
    55e8:	1d c0       	rjmp	.+58     	; 0x5624 <TIMER0_voidSetMode+0xca>
		case TIMER_CTC_MODE               : CLR_BIT(TCCR0_REG , WGM00); SET_BIT(TCCR0_REG , WGM01); break;
    55ea:	a3 e5       	ldi	r26, 0x53	; 83
    55ec:	b0 e0       	ldi	r27, 0x00	; 0
    55ee:	e3 e5       	ldi	r30, 0x53	; 83
    55f0:	f0 e0       	ldi	r31, 0x00	; 0
    55f2:	80 81       	ld	r24, Z
    55f4:	8f 7b       	andi	r24, 0xBF	; 191
    55f6:	8c 93       	st	X, r24
    55f8:	a3 e5       	ldi	r26, 0x53	; 83
    55fa:	b0 e0       	ldi	r27, 0x00	; 0
    55fc:	e3 e5       	ldi	r30, 0x53	; 83
    55fe:	f0 e0       	ldi	r31, 0x00	; 0
    5600:	80 81       	ld	r24, Z
    5602:	88 60       	ori	r24, 0x08	; 8
    5604:	8c 93       	st	X, r24
    5606:	0e c0       	rjmp	.+28     	; 0x5624 <TIMER0_voidSetMode+0xca>
		case TIMER_FAST_PWM_MODE          : SET_BIT(TCCR0_REG , WGM00); SET_BIT(TCCR0_REG , WGM01); break;
    5608:	a3 e5       	ldi	r26, 0x53	; 83
    560a:	b0 e0       	ldi	r27, 0x00	; 0
    560c:	e3 e5       	ldi	r30, 0x53	; 83
    560e:	f0 e0       	ldi	r31, 0x00	; 0
    5610:	80 81       	ld	r24, Z
    5612:	80 64       	ori	r24, 0x40	; 64
    5614:	8c 93       	st	X, r24
    5616:	a3 e5       	ldi	r26, 0x53	; 83
    5618:	b0 e0       	ldi	r27, 0x00	; 0
    561a:	e3 e5       	ldi	r30, 0x53	; 83
    561c:	f0 e0       	ldi	r31, 0x00	; 0
    561e:	80 81       	ld	r24, Z
    5620:	88 60       	ori	r24, 0x08	; 8
    5622:	8c 93       	st	X, r24
	}
	else
	{
		//report error
	}
}
    5624:	0f 90       	pop	r0
    5626:	0f 90       	pop	r0
    5628:	0f 90       	pop	r0
    562a:	cf 91       	pop	r28
    562c:	df 91       	pop	r29
    562e:	08 95       	ret

00005630 <TIMER0_voidSetPreLoad>:


void TIMER0_voidSetPreLoad(u8 u8PreLoad)
{
    5630:	df 93       	push	r29
    5632:	cf 93       	push	r28
    5634:	0f 92       	push	r0
    5636:	cd b7       	in	r28, 0x3d	; 61
    5638:	de b7       	in	r29, 0x3e	; 62
    563a:	89 83       	std	Y+1, r24	; 0x01
	/* check from u8PreLoad value */
	if (u8PreLoad <= TIMER0_MAX_PRELOAD)
	{
		/* Put u8PreLoad value into TCNT0 Register */
		TCNT0_REG = u8PreLoad ;
    563c:	e2 e5       	ldi	r30, 0x52	; 82
    563e:	f0 e0       	ldi	r31, 0x00	; 0
    5640:	89 81       	ldd	r24, Y+1	; 0x01
    5642:	80 83       	st	Z, r24
	}
	else
	{
		//report error
	}
}
    5644:	0f 90       	pop	r0
    5646:	cf 91       	pop	r28
    5648:	df 91       	pop	r29
    564a:	08 95       	ret

0000564c <TIMER0_voidSetCTC>:


void TIMER0_voidSetCTC(u8 u8CompareMatch)
{
    564c:	df 93       	push	r29
    564e:	cf 93       	push	r28
    5650:	0f 92       	push	r0
    5652:	cd b7       	in	r28, 0x3d	; 61
    5654:	de b7       	in	r29, 0x3e	; 62
    5656:	89 83       	std	Y+1, r24	; 0x01
	/* Check from u8CompareMatch value */
	if (u8CompareMatch <= TIMER0_MAX_PRELOAD)
	{
		/* Put u8CompareMatch value into OCR0 Register */
		OCR0_REG = u8CompareMatch ;
    5658:	ec e5       	ldi	r30, 0x5C	; 92
    565a:	f0 e0       	ldi	r31, 0x00	; 0
    565c:	89 81       	ldd	r24, Y+1	; 0x01
    565e:	80 83       	st	Z, r24
	}
	else
	{
		//report error
	}
}
    5660:	0f 90       	pop	r0
    5662:	cf 91       	pop	r28
    5664:	df 91       	pop	r29
    5666:	08 95       	ret

00005668 <TIMER0_voidEnable>:


void TIMER0_voidEnable(u8 u8PreScaler)
{
    5668:	df 93       	push	r29
    566a:	cf 93       	push	r28
    566c:	0f 92       	push	r0
    566e:	cd b7       	in	r28, 0x3d	; 61
    5670:	de b7       	in	r29, 0x3e	; 62
    5672:	89 83       	std	Y+1, r24	; 0x01
	/* Check from u8PreScaler value */
	if (u8PreScaler <= TIMER_EXTERNAL_CLOCK_SOURCE_ON_T0_RISING )
    5674:	89 81       	ldd	r24, Y+1	; 0x01
    5676:	88 30       	cpi	r24, 0x08	; 8
    5678:	78 f4       	brcc	.+30     	; 0x5698 <TIMER0_voidEnable+0x30>
	{
		/* Set TIMER0 clock prescaler */
		TCCR0_REG &= TIMER_PRESCALER_MASK;
    567a:	a3 e5       	ldi	r26, 0x53	; 83
    567c:	b0 e0       	ldi	r27, 0x00	; 0
    567e:	e3 e5       	ldi	r30, 0x53	; 83
    5680:	f0 e0       	ldi	r31, 0x00	; 0
    5682:	80 81       	ld	r24, Z
    5684:	88 7f       	andi	r24, 0xF8	; 248
    5686:	8c 93       	st	X, r24
		TCCR0_REG |= u8PreScaler;
    5688:	a3 e5       	ldi	r26, 0x53	; 83
    568a:	b0 e0       	ldi	r27, 0x00	; 0
    568c:	e3 e5       	ldi	r30, 0x53	; 83
    568e:	f0 e0       	ldi	r31, 0x00	; 0
    5690:	90 81       	ld	r25, Z
    5692:	89 81       	ldd	r24, Y+1	; 0x01
    5694:	89 2b       	or	r24, r25
    5696:	8c 93       	st	X, r24
	}
}
    5698:	0f 90       	pop	r0
    569a:	cf 91       	pop	r28
    569c:	df 91       	pop	r29
    569e:	08 95       	ret

000056a0 <TIMER0_voidDisable>:


void TIMER0_voidDisable()
{
    56a0:	df 93       	push	r29
    56a2:	cf 93       	push	r28
    56a4:	cd b7       	in	r28, 0x3d	; 61
    56a6:	de b7       	in	r29, 0x3e	; 62
	TCCR0_REG &= TIMER_PRESCALER_MASK;
    56a8:	a3 e5       	ldi	r26, 0x53	; 83
    56aa:	b0 e0       	ldi	r27, 0x00	; 0
    56ac:	e3 e5       	ldi	r30, 0x53	; 83
    56ae:	f0 e0       	ldi	r31, 0x00	; 0
    56b0:	80 81       	ld	r24, Z
    56b2:	88 7f       	andi	r24, 0xF8	; 248
    56b4:	8c 93       	st	X, r24
}
    56b6:	cf 91       	pop	r28
    56b8:	df 91       	pop	r29
    56ba:	08 95       	ret

000056bc <TIMER0_u8GetTIMER0CounterVal>:


u8 TIMER0_u8GetTIMER0CounterVal()
{
    56bc:	df 93       	push	r29
    56be:	cf 93       	push	r28
    56c0:	0f 92       	push	r0
    56c2:	cd b7       	in	r28, 0x3d	; 61
    56c4:	de b7       	in	r29, 0x3e	; 62
	u8 u8ConterVal = 0;
    56c6:	19 82       	std	Y+1, r1	; 0x01

	u8ConterVal = TCNT0_REG;
    56c8:	e2 e5       	ldi	r30, 0x52	; 82
    56ca:	f0 e0       	ldi	r31, 0x00	; 0
    56cc:	80 81       	ld	r24, Z
    56ce:	89 83       	std	Y+1, r24	; 0x01

	return u8ConterVal;
    56d0:	89 81       	ldd	r24, Y+1	; 0x01
}
    56d2:	0f 90       	pop	r0
    56d4:	cf 91       	pop	r28
    56d6:	df 91       	pop	r29
    56d8:	08 95       	ret

000056da <TIMER0_voidSetPWMDutayCycle>:

void TIMER0_voidSetPWMDutayCycle(u8 u8DC , u8 u8PwmType)
{
    56da:	df 93       	push	r29
    56dc:	cf 93       	push	r28
    56de:	00 d0       	rcall	.+0      	; 0x56e0 <TIMER0_voidSetPWMDutayCycle+0x6>
    56e0:	00 d0       	rcall	.+0      	; 0x56e2 <TIMER0_voidSetPWMDutayCycle+0x8>
    56e2:	cd b7       	in	r28, 0x3d	; 61
    56e4:	de b7       	in	r29, 0x3e	; 62
    56e6:	89 83       	std	Y+1, r24	; 0x01
    56e8:	6a 83       	std	Y+2, r22	; 0x02
	/* check from Duty Cycle & PwmType Values */
	if((u8DC <= TIMER_PWM_MAX_DUTY_CYCLE) && (u8PwmType <= TIMER_PWM_NON_INVERTING_TYPE))
    56ea:	89 81       	ldd	r24, Y+1	; 0x01
    56ec:	85 36       	cpi	r24, 0x65	; 101
    56ee:	a0 f5       	brcc	.+104    	; 0x5758 <TIMER0_voidSetPWMDutayCycle+0x7e>
    56f0:	8a 81       	ldd	r24, Y+2	; 0x02
    56f2:	82 30       	cpi	r24, 0x02	; 2
    56f4:	88 f5       	brcc	.+98     	; 0x5758 <TIMER0_voidSetPWMDutayCycle+0x7e>
	{
		/* Calculate OCR0 value FROM DutyCycle Value */
		switch(u8PwmType)
    56f6:	8a 81       	ldd	r24, Y+2	; 0x02
    56f8:	28 2f       	mov	r18, r24
    56fa:	30 e0       	ldi	r19, 0x00	; 0
    56fc:	3c 83       	std	Y+4, r19	; 0x04
    56fe:	2b 83       	std	Y+3, r18	; 0x03
    5700:	8b 81       	ldd	r24, Y+3	; 0x03
    5702:	9c 81       	ldd	r25, Y+4	; 0x04
    5704:	00 97       	sbiw	r24, 0x00	; 0
    5706:	a9 f0       	breq	.+42     	; 0x5732 <TIMER0_voidSetPWMDutayCycle+0x58>
    5708:	2b 81       	ldd	r18, Y+3	; 0x03
    570a:	3c 81       	ldd	r19, Y+4	; 0x04
    570c:	21 30       	cpi	r18, 0x01	; 1
    570e:	31 05       	cpc	r19, r1
    5710:	19 f5       	brne	.+70     	; 0x5758 <TIMER0_voidSetPWMDutayCycle+0x7e>
		{
		case TIMER_PWM_NON_INVERTING_TYPE :
			OCR0_REG = (((u16)TIMER0_RESOLUTION * u8DC) / 100 ) - 1;
    5712:	ec e5       	ldi	r30, 0x5C	; 92
    5714:	f0 e0       	ldi	r31, 0x00	; 0
    5716:	89 81       	ldd	r24, Y+1	; 0x01
    5718:	88 2f       	mov	r24, r24
    571a:	90 e0       	ldi	r25, 0x00	; 0
    571c:	98 2f       	mov	r25, r24
    571e:	88 27       	eor	r24, r24
    5720:	24 e6       	ldi	r18, 0x64	; 100
    5722:	30 e0       	ldi	r19, 0x00	; 0
    5724:	b9 01       	movw	r22, r18
    5726:	0e 94 48 32 	call	0x6490	; 0x6490 <__udivmodhi4>
    572a:	cb 01       	movw	r24, r22
    572c:	81 50       	subi	r24, 0x01	; 1
    572e:	80 83       	st	Z, r24
    5730:	13 c0       	rjmp	.+38     	; 0x5758 <TIMER0_voidSetPWMDutayCycle+0x7e>
			break;
		case TIMER_PWM_INVERTING_TYPE :
			OCR0_REG = (((u16)TIMER0_RESOLUTION * (TIMER_PWM_MAX_DUTY_CYCLE - u8DC)) / 100 ) - 1;
    5732:	ec e5       	ldi	r30, 0x5C	; 92
    5734:	f0 e0       	ldi	r31, 0x00	; 0
    5736:	89 81       	ldd	r24, Y+1	; 0x01
    5738:	28 2f       	mov	r18, r24
    573a:	30 e0       	ldi	r19, 0x00	; 0
    573c:	84 e6       	ldi	r24, 0x64	; 100
    573e:	90 e0       	ldi	r25, 0x00	; 0
    5740:	82 1b       	sub	r24, r18
    5742:	93 0b       	sbc	r25, r19
    5744:	98 2f       	mov	r25, r24
    5746:	88 27       	eor	r24, r24
    5748:	24 e6       	ldi	r18, 0x64	; 100
    574a:	30 e0       	ldi	r19, 0x00	; 0
    574c:	b9 01       	movw	r22, r18
    574e:	0e 94 48 32 	call	0x6490	; 0x6490 <__udivmodhi4>
    5752:	cb 01       	movw	r24, r22
    5754:	81 50       	subi	r24, 0x01	; 1
    5756:	80 83       	st	Z, r24
	}
	else
	{
		// report error
	}
}
    5758:	0f 90       	pop	r0
    575a:	0f 90       	pop	r0
    575c:	0f 90       	pop	r0
    575e:	0f 90       	pop	r0
    5760:	cf 91       	pop	r28
    5762:	df 91       	pop	r29
    5764:	08 95       	ret

00005766 <TIMER1_voidInit>:
/*************************************************************************************************************************/
/********************************************TIMER1 FUNCTIONS IMPLEMENTATION**********************************************/
/************************************************************************************************************************/

void TIMER1_voidInit()
{
    5766:	df 93       	push	r29
    5768:	cf 93       	push	r28
    576a:	cd b7       	in	r28, 0x3d	; 61
    576c:	de b7       	in	r29, 0x3e	; 62
			/* Set The Required ICR1 Value */
			ICR1_REG = TIMER1_FAST_PWM_ICR1_VALUE ;

		#elif TIMER1_MODE == TIMER1_FAST_PWM_OCR1A_MODE
				/* Set TIMER1 Mode as FAST PWM  OCR1A Mode */
				SET_BIT(TCCR1B_REG , WGM13);
    576e:	ae e4       	ldi	r26, 0x4E	; 78
    5770:	b0 e0       	ldi	r27, 0x00	; 0
    5772:	ee e4       	ldi	r30, 0x4E	; 78
    5774:	f0 e0       	ldi	r31, 0x00	; 0
    5776:	80 81       	ld	r24, Z
    5778:	80 61       	ori	r24, 0x10	; 16
    577a:	8c 93       	st	X, r24
				SET_BIT(TCCR1B_REG , WGM12);
    577c:	ae e4       	ldi	r26, 0x4E	; 78
    577e:	b0 e0       	ldi	r27, 0x00	; 0
    5780:	ee e4       	ldi	r30, 0x4E	; 78
    5782:	f0 e0       	ldi	r31, 0x00	; 0
    5784:	80 81       	ld	r24, Z
    5786:	88 60       	ori	r24, 0x08	; 8
    5788:	8c 93       	st	X, r24
				SET_BIT(TCCR1A_REG , WGM11);
    578a:	af e4       	ldi	r26, 0x4F	; 79
    578c:	b0 e0       	ldi	r27, 0x00	; 0
    578e:	ef e4       	ldi	r30, 0x4F	; 79
    5790:	f0 e0       	ldi	r31, 0x00	; 0
    5792:	80 81       	ld	r24, Z
    5794:	82 60       	ori	r24, 0x02	; 2
    5796:	8c 93       	st	X, r24
				SET_BIT(TCCR1A_REG , WGM10);
    5798:	af e4       	ldi	r26, 0x4F	; 79
    579a:	b0 e0       	ldi	r27, 0x00	; 0
    579c:	ef e4       	ldi	r30, 0x4F	; 79
    579e:	f0 e0       	ldi	r31, 0x00	; 0
    57a0:	80 81       	ld	r24, Z
    57a2:	81 60       	ori	r24, 0x01	; 1
    57a4:	8c 93       	st	X, r24
		#else
			/* NOP */
		#endif

		/* Set The Required Compare Match Value */
		OCR1A_REG = TIMER1_FAST_PWM_OCR1A_VALUE ;
    57a6:	ea e4       	ldi	r30, 0x4A	; 74
    57a8:	f0 e0       	ldi	r31, 0x00	; 0
    57aa:	11 82       	std	Z+1, r1	; 0x01
    57ac:	10 82       	st	Z, r1
		#if (TIMER1_FAST_PWM_OCR1A_VALUE >= TIMER1_FAST_PWM_OCR1B_VALUE) && (TIMER1_MODE == TIMER1_FAST_PWM_OCR1A_MODE)
			OCR1B_REG = TIMER1_FAST_PWM_OCR1B_VALUE ;
    57ae:	e8 e4       	ldi	r30, 0x48	; 72
    57b0:	f0 e0       	ldi	r31, 0x00	; 0
    57b2:	11 82       	std	Z+1, r1	; 0x01
    57b4:	10 82       	st	Z, r1
			#error "Wrong TIMER1_FAST_PWM_OCR1A_MODE Config Please Make Sure (TIMER1_FAST_PWM_OCR1A_VALUE > TIMER1_FAST_PWM_OCR1B_VALUE) If You On TIMER1_FAST_PWM_OCR1A_MODE "
		#endif

		/* Set CTCA  Fast PWM Mode (config OC1A PIN)*/
		#if TIMER1_CTCA_FAST_PWM_MODE == TIMER_OC_DISCONNECTED
			CLR_BIT(TCCR1A_REG , COM1A1);
    57b6:	af e4       	ldi	r26, 0x4F	; 79
    57b8:	b0 e0       	ldi	r27, 0x00	; 0
    57ba:	ef e4       	ldi	r30, 0x4F	; 79
    57bc:	f0 e0       	ldi	r31, 0x00	; 0
    57be:	80 81       	ld	r24, Z
    57c0:	8f 77       	andi	r24, 0x7F	; 127
    57c2:	8c 93       	st	X, r24
			CLR_BIT(TCCR1A_REG , COM1A0);
    57c4:	af e4       	ldi	r26, 0x4F	; 79
    57c6:	b0 e0       	ldi	r27, 0x00	; 0
    57c8:	ef e4       	ldi	r30, 0x4F	; 79
    57ca:	f0 e0       	ldi	r31, 0x00	; 0
    57cc:	80 81       	ld	r24, Z
    57ce:	8f 7b       	andi	r24, 0xBF	; 191
    57d0:	8c 93       	st	X, r24
			#error"Wrong TIMER1_CTCA_FAST_PWM_MODE Config"
		#endif

		/* Set CTCB Fast PWM Mode (config OC1B PIN)*/
		#if TIMER1_CTCB_FAST_PWM_MODE == TIMER_OC_DISCONNECTED
			CLR_BIT(TCCR1A_REG , COM1B1);
    57d2:	af e4       	ldi	r26, 0x4F	; 79
    57d4:	b0 e0       	ldi	r27, 0x00	; 0
    57d6:	ef e4       	ldi	r30, 0x4F	; 79
    57d8:	f0 e0       	ldi	r31, 0x00	; 0
    57da:	80 81       	ld	r24, Z
    57dc:	8f 7d       	andi	r24, 0xDF	; 223
    57de:	8c 93       	st	X, r24
			CLR_BIT(TCCR1A_REG , COM1B0);
    57e0:	af e4       	ldi	r26, 0x4F	; 79
    57e2:	b0 e0       	ldi	r27, 0x00	; 0
    57e4:	ef e4       	ldi	r30, 0x4F	; 79
    57e6:	f0 e0       	ldi	r31, 0x00	; 0
    57e8:	80 81       	ld	r24, Z
    57ea:	8f 7e       	andi	r24, 0xEF	; 239
    57ec:	8c 93       	st	X, r24

		/* Set TIMER1 OverFlow Interrupt Enable */
		#if TIMER1_OVERFLOW_INTERRUPT == ENABLE
			SET_BIT(TIMSK_REG , TOIE1);
		#elif TIMER1_OVERFLOW_INTERRUPT == DISABLE
			CLR_BIT(TIMSK_REG , TOIE1);
    57ee:	a9 e5       	ldi	r26, 0x59	; 89
    57f0:	b0 e0       	ldi	r27, 0x00	; 0
    57f2:	e9 e5       	ldi	r30, 0x59	; 89
    57f4:	f0 e0       	ldi	r31, 0x00	; 0
    57f6:	80 81       	ld	r24, Z
    57f8:	8b 7f       	andi	r24, 0xFB	; 251
    57fa:	8c 93       	st	X, r24

		/* Set TIMER1 CTCB Interrupt Enable */
		#if TIMER1_CTCB_INTERRUPT == ENABLE
			SET_BIT(TIMSK_REG , OCIE1B);
		#elif TIMER1_CTCB_INTERRUPT == DISABLE
			CLR_BIT(TIMSK_REG , OCIE1B);
    57fc:	a9 e5       	ldi	r26, 0x59	; 89
    57fe:	b0 e0       	ldi	r27, 0x00	; 0
    5800:	e9 e5       	ldi	r30, 0x59	; 89
    5802:	f0 e0       	ldi	r31, 0x00	; 0
    5804:	80 81       	ld	r24, Z
    5806:	87 7f       	andi	r24, 0xF7	; 247
    5808:	8c 93       	st	X, r24
		#error"Wrong TIMER1_MODE Config"
	#endif

	/* SET THE REQUIRED TIMER0 CLOCK PRESCALER */
	/* MAKE SURE THE FIRST 3 BIT IN TCCR0 REG IS CLEARED */
	TCCR1B_REG &= TIMER_PRESCALER_MASK;
    580a:	ae e4       	ldi	r26, 0x4E	; 78
    580c:	b0 e0       	ldi	r27, 0x00	; 0
    580e:	ee e4       	ldi	r30, 0x4E	; 78
    5810:	f0 e0       	ldi	r31, 0x00	; 0
    5812:	80 81       	ld	r24, Z
    5814:	88 7f       	andi	r24, 0xF8	; 248
    5816:	8c 93       	st	X, r24
	TCCR1B_REG |= TIMER1_PRESCALER;
    5818:	ae e4       	ldi	r26, 0x4E	; 78
    581a:	b0 e0       	ldi	r27, 0x00	; 0
    581c:	ee e4       	ldi	r30, 0x4E	; 78
    581e:	f0 e0       	ldi	r31, 0x00	; 0
    5820:	80 81       	ld	r24, Z
    5822:	8c 93       	st	X, r24
}
    5824:	cf 91       	pop	r28
    5826:	df 91       	pop	r29
    5828:	08 95       	ret

0000582a <TIMER1_voidSetMode>:


void TIMER1_voidSetMode(u8 u8Mode)
{
    582a:	df 93       	push	r29
    582c:	cf 93       	push	r28
    582e:	00 d0       	rcall	.+0      	; 0x5830 <TIMER1_voidSetMode+0x6>
    5830:	0f 92       	push	r0
    5832:	cd b7       	in	r28, 0x3d	; 61
    5834:	de b7       	in	r29, 0x3e	; 62
    5836:	89 83       	std	Y+1, r24	; 0x01
	/* check From u8Mode value */
	if( u8Mode <= TIMER1_FAST_PWM_OCR1A_MODE)
    5838:	89 81       	ldd	r24, Y+1	; 0x01
    583a:	80 31       	cpi	r24, 0x10	; 16
    583c:	08 f0       	brcs	.+2      	; 0x5840 <TIMER1_voidSetMode+0x16>
    583e:	16 c2       	rjmp	.+1068   	; 0x5c6c <TIMER1_voidSetMode+0x442>
	{
		/* Set timer mode */
		switch(u8Mode)
    5840:	89 81       	ldd	r24, Y+1	; 0x01
    5842:	28 2f       	mov	r18, r24
    5844:	30 e0       	ldi	r19, 0x00	; 0
    5846:	3b 83       	std	Y+3, r19	; 0x03
    5848:	2a 83       	std	Y+2, r18	; 0x02
    584a:	8a 81       	ldd	r24, Y+2	; 0x02
    584c:	9b 81       	ldd	r25, Y+3	; 0x03
    584e:	87 30       	cpi	r24, 0x07	; 7
    5850:	91 05       	cpc	r25, r1
    5852:	09 f4       	brne	.+2      	; 0x5856 <TIMER1_voidSetMode+0x2c>
    5854:	24 c1       	rjmp	.+584    	; 0x5a9e <TIMER1_voidSetMode+0x274>
    5856:	2a 81       	ldd	r18, Y+2	; 0x02
    5858:	3b 81       	ldd	r19, Y+3	; 0x03
    585a:	28 30       	cpi	r18, 0x08	; 8
    585c:	31 05       	cpc	r19, r1
    585e:	4c f5       	brge	.+82     	; 0x58b2 <TIMER1_voidSetMode+0x88>
    5860:	8a 81       	ldd	r24, Y+2	; 0x02
    5862:	9b 81       	ldd	r25, Y+3	; 0x03
    5864:	83 30       	cpi	r24, 0x03	; 3
    5866:	91 05       	cpc	r25, r1
    5868:	09 f4       	brne	.+2      	; 0x586c <TIMER1_voidSetMode+0x42>
    586a:	a5 c0       	rjmp	.+330    	; 0x59b6 <TIMER1_voidSetMode+0x18c>
    586c:	2a 81       	ldd	r18, Y+2	; 0x02
    586e:	3b 81       	ldd	r19, Y+3	; 0x03
    5870:	24 30       	cpi	r18, 0x04	; 4
    5872:	31 05       	cpc	r19, r1
    5874:	8c f4       	brge	.+34     	; 0x5898 <TIMER1_voidSetMode+0x6e>
    5876:	8a 81       	ldd	r24, Y+2	; 0x02
    5878:	9b 81       	ldd	r25, Y+3	; 0x03
    587a:	81 30       	cpi	r24, 0x01	; 1
    587c:	91 05       	cpc	r25, r1
    587e:	09 f4       	brne	.+2      	; 0x5882 <TIMER1_voidSetMode+0x58>
    5880:	60 c0       	rjmp	.+192    	; 0x5942 <TIMER1_voidSetMode+0x118>
    5882:	2a 81       	ldd	r18, Y+2	; 0x02
    5884:	3b 81       	ldd	r19, Y+3	; 0x03
    5886:	22 30       	cpi	r18, 0x02	; 2
    5888:	31 05       	cpc	r19, r1
    588a:	0c f0       	brlt	.+2      	; 0x588e <TIMER1_voidSetMode+0x64>
    588c:	77 c0       	rjmp	.+238    	; 0x597c <TIMER1_voidSetMode+0x152>
    588e:	8a 81       	ldd	r24, Y+2	; 0x02
    5890:	9b 81       	ldd	r25, Y+3	; 0x03
    5892:	00 97       	sbiw	r24, 0x00	; 0
    5894:	c9 f1       	breq	.+114    	; 0x5908 <TIMER1_voidSetMode+0xde>
    5896:	ea c1       	rjmp	.+980    	; 0x5c6c <TIMER1_voidSetMode+0x442>
    5898:	2a 81       	ldd	r18, Y+2	; 0x02
    589a:	3b 81       	ldd	r19, Y+3	; 0x03
    589c:	25 30       	cpi	r18, 0x05	; 5
    589e:	31 05       	cpc	r19, r1
    58a0:	09 f4       	brne	.+2      	; 0x58a4 <TIMER1_voidSetMode+0x7a>
    58a2:	c3 c0       	rjmp	.+390    	; 0x5a2a <TIMER1_voidSetMode+0x200>
    58a4:	8a 81       	ldd	r24, Y+2	; 0x02
    58a6:	9b 81       	ldd	r25, Y+3	; 0x03
    58a8:	86 30       	cpi	r24, 0x06	; 6
    58aa:	91 05       	cpc	r25, r1
    58ac:	0c f0       	brlt	.+2      	; 0x58b0 <TIMER1_voidSetMode+0x86>
    58ae:	da c0       	rjmp	.+436    	; 0x5a64 <TIMER1_voidSetMode+0x23a>
    58b0:	9f c0       	rjmp	.+318    	; 0x59f0 <TIMER1_voidSetMode+0x1c6>
    58b2:	2a 81       	ldd	r18, Y+2	; 0x02
    58b4:	3b 81       	ldd	r19, Y+3	; 0x03
    58b6:	2b 30       	cpi	r18, 0x0B	; 11
    58b8:	31 05       	cpc	r19, r1
    58ba:	09 f4       	brne	.+2      	; 0x58be <TIMER1_voidSetMode+0x94>
    58bc:	64 c1       	rjmp	.+712    	; 0x5b86 <TIMER1_voidSetMode+0x35c>
    58be:	8a 81       	ldd	r24, Y+2	; 0x02
    58c0:	9b 81       	ldd	r25, Y+3	; 0x03
    58c2:	8c 30       	cpi	r24, 0x0C	; 12
    58c4:	91 05       	cpc	r25, r1
    58c6:	6c f4       	brge	.+26     	; 0x58e2 <TIMER1_voidSetMode+0xb8>
    58c8:	2a 81       	ldd	r18, Y+2	; 0x02
    58ca:	3b 81       	ldd	r19, Y+3	; 0x03
    58cc:	29 30       	cpi	r18, 0x09	; 9
    58ce:	31 05       	cpc	r19, r1
    58d0:	09 f4       	brne	.+2      	; 0x58d4 <TIMER1_voidSetMode+0xaa>
    58d2:	1f c1       	rjmp	.+574    	; 0x5b12 <TIMER1_voidSetMode+0x2e8>
    58d4:	8a 81       	ldd	r24, Y+2	; 0x02
    58d6:	9b 81       	ldd	r25, Y+3	; 0x03
    58d8:	8a 30       	cpi	r24, 0x0A	; 10
    58da:	91 05       	cpc	r25, r1
    58dc:	0c f0       	brlt	.+2      	; 0x58e0 <TIMER1_voidSetMode+0xb6>
    58de:	36 c1       	rjmp	.+620    	; 0x5b4c <TIMER1_voidSetMode+0x322>
    58e0:	fb c0       	rjmp	.+502    	; 0x5ad8 <TIMER1_voidSetMode+0x2ae>
    58e2:	2a 81       	ldd	r18, Y+2	; 0x02
    58e4:	3b 81       	ldd	r19, Y+3	; 0x03
    58e6:	2e 30       	cpi	r18, 0x0E	; 14
    58e8:	31 05       	cpc	r19, r1
    58ea:	09 f4       	brne	.+2      	; 0x58ee <TIMER1_voidSetMode+0xc4>
    58ec:	86 c1       	rjmp	.+780    	; 0x5bfa <TIMER1_voidSetMode+0x3d0>
    58ee:	8a 81       	ldd	r24, Y+2	; 0x02
    58f0:	9b 81       	ldd	r25, Y+3	; 0x03
    58f2:	8f 30       	cpi	r24, 0x0F	; 15
    58f4:	91 05       	cpc	r25, r1
    58f6:	09 f4       	brne	.+2      	; 0x58fa <TIMER1_voidSetMode+0xd0>
    58f8:	9d c1       	rjmp	.+826    	; 0x5c34 <TIMER1_voidSetMode+0x40a>
    58fa:	2a 81       	ldd	r18, Y+2	; 0x02
    58fc:	3b 81       	ldd	r19, Y+3	; 0x03
    58fe:	2c 30       	cpi	r18, 0x0C	; 12
    5900:	31 05       	cpc	r19, r1
    5902:	09 f4       	brne	.+2      	; 0x5906 <TIMER1_voidSetMode+0xdc>
    5904:	5d c1       	rjmp	.+698    	; 0x5bc0 <TIMER1_voidSetMode+0x396>
    5906:	b2 c1       	rjmp	.+868    	; 0x5c6c <TIMER1_voidSetMode+0x442>
		{
		case TIMER1_NORMAL_MODE :
			CLR_BIT(TCCR1B_REG , WGM13); CLR_BIT(TCCR1B_REG , WGM12);
    5908:	ae e4       	ldi	r26, 0x4E	; 78
    590a:	b0 e0       	ldi	r27, 0x00	; 0
    590c:	ee e4       	ldi	r30, 0x4E	; 78
    590e:	f0 e0       	ldi	r31, 0x00	; 0
    5910:	80 81       	ld	r24, Z
    5912:	8f 7e       	andi	r24, 0xEF	; 239
    5914:	8c 93       	st	X, r24
    5916:	ae e4       	ldi	r26, 0x4E	; 78
    5918:	b0 e0       	ldi	r27, 0x00	; 0
    591a:	ee e4       	ldi	r30, 0x4E	; 78
    591c:	f0 e0       	ldi	r31, 0x00	; 0
    591e:	80 81       	ld	r24, Z
    5920:	87 7f       	andi	r24, 0xF7	; 247
    5922:	8c 93       	st	X, r24
			CLR_BIT(TCCR1A_REG , WGM11); CLR_BIT(TCCR1A_REG , WGM10); break;
    5924:	af e4       	ldi	r26, 0x4F	; 79
    5926:	b0 e0       	ldi	r27, 0x00	; 0
    5928:	ef e4       	ldi	r30, 0x4F	; 79
    592a:	f0 e0       	ldi	r31, 0x00	; 0
    592c:	80 81       	ld	r24, Z
    592e:	8d 7f       	andi	r24, 0xFD	; 253
    5930:	8c 93       	st	X, r24
    5932:	af e4       	ldi	r26, 0x4F	; 79
    5934:	b0 e0       	ldi	r27, 0x00	; 0
    5936:	ef e4       	ldi	r30, 0x4F	; 79
    5938:	f0 e0       	ldi	r31, 0x00	; 0
    593a:	80 81       	ld	r24, Z
    593c:	8e 7f       	andi	r24, 0xFE	; 254
    593e:	8c 93       	st	X, r24
    5940:	95 c1       	rjmp	.+810    	; 0x5c6c <TIMER1_voidSetMode+0x442>

		case TIMER1_PWM_PHASE_CORRECT_8_BIT_MODE :
			CLR_BIT(TCCR1B_REG , WGM13); CLR_BIT(TCCR1B_REG , WGM12);
    5942:	ae e4       	ldi	r26, 0x4E	; 78
    5944:	b0 e0       	ldi	r27, 0x00	; 0
    5946:	ee e4       	ldi	r30, 0x4E	; 78
    5948:	f0 e0       	ldi	r31, 0x00	; 0
    594a:	80 81       	ld	r24, Z
    594c:	8f 7e       	andi	r24, 0xEF	; 239
    594e:	8c 93       	st	X, r24
    5950:	ae e4       	ldi	r26, 0x4E	; 78
    5952:	b0 e0       	ldi	r27, 0x00	; 0
    5954:	ee e4       	ldi	r30, 0x4E	; 78
    5956:	f0 e0       	ldi	r31, 0x00	; 0
    5958:	80 81       	ld	r24, Z
    595a:	87 7f       	andi	r24, 0xF7	; 247
    595c:	8c 93       	st	X, r24
			CLR_BIT(TCCR1A_REG , WGM11); SET_BIT(TCCR1A_REG , WGM10); break;
    595e:	af e4       	ldi	r26, 0x4F	; 79
    5960:	b0 e0       	ldi	r27, 0x00	; 0
    5962:	ef e4       	ldi	r30, 0x4F	; 79
    5964:	f0 e0       	ldi	r31, 0x00	; 0
    5966:	80 81       	ld	r24, Z
    5968:	8d 7f       	andi	r24, 0xFD	; 253
    596a:	8c 93       	st	X, r24
    596c:	af e4       	ldi	r26, 0x4F	; 79
    596e:	b0 e0       	ldi	r27, 0x00	; 0
    5970:	ef e4       	ldi	r30, 0x4F	; 79
    5972:	f0 e0       	ldi	r31, 0x00	; 0
    5974:	80 81       	ld	r24, Z
    5976:	81 60       	ori	r24, 0x01	; 1
    5978:	8c 93       	st	X, r24
    597a:	78 c1       	rjmp	.+752    	; 0x5c6c <TIMER1_voidSetMode+0x442>

		case TIMER1_PWM_PHASE_CORRECT_9_BIT_MODE :
			CLR_BIT(TCCR1B_REG , WGM13); CLR_BIT(TCCR1B_REG , WGM12);
    597c:	ae e4       	ldi	r26, 0x4E	; 78
    597e:	b0 e0       	ldi	r27, 0x00	; 0
    5980:	ee e4       	ldi	r30, 0x4E	; 78
    5982:	f0 e0       	ldi	r31, 0x00	; 0
    5984:	80 81       	ld	r24, Z
    5986:	8f 7e       	andi	r24, 0xEF	; 239
    5988:	8c 93       	st	X, r24
    598a:	ae e4       	ldi	r26, 0x4E	; 78
    598c:	b0 e0       	ldi	r27, 0x00	; 0
    598e:	ee e4       	ldi	r30, 0x4E	; 78
    5990:	f0 e0       	ldi	r31, 0x00	; 0
    5992:	80 81       	ld	r24, Z
    5994:	87 7f       	andi	r24, 0xF7	; 247
    5996:	8c 93       	st	X, r24
			SET_BIT(TCCR1A_REG , WGM11); CLR_BIT(TCCR1A_REG , WGM10); break;
    5998:	af e4       	ldi	r26, 0x4F	; 79
    599a:	b0 e0       	ldi	r27, 0x00	; 0
    599c:	ef e4       	ldi	r30, 0x4F	; 79
    599e:	f0 e0       	ldi	r31, 0x00	; 0
    59a0:	80 81       	ld	r24, Z
    59a2:	82 60       	ori	r24, 0x02	; 2
    59a4:	8c 93       	st	X, r24
    59a6:	af e4       	ldi	r26, 0x4F	; 79
    59a8:	b0 e0       	ldi	r27, 0x00	; 0
    59aa:	ef e4       	ldi	r30, 0x4F	; 79
    59ac:	f0 e0       	ldi	r31, 0x00	; 0
    59ae:	80 81       	ld	r24, Z
    59b0:	8e 7f       	andi	r24, 0xFE	; 254
    59b2:	8c 93       	st	X, r24
    59b4:	5b c1       	rjmp	.+694    	; 0x5c6c <TIMER1_voidSetMode+0x442>

		case TIMER1_PWM_PHASE_CORRECT_10_BIT_MODE :
			CLR_BIT(TCCR1B_REG , WGM13); CLR_BIT(TCCR1B_REG , WGM12);
    59b6:	ae e4       	ldi	r26, 0x4E	; 78
    59b8:	b0 e0       	ldi	r27, 0x00	; 0
    59ba:	ee e4       	ldi	r30, 0x4E	; 78
    59bc:	f0 e0       	ldi	r31, 0x00	; 0
    59be:	80 81       	ld	r24, Z
    59c0:	8f 7e       	andi	r24, 0xEF	; 239
    59c2:	8c 93       	st	X, r24
    59c4:	ae e4       	ldi	r26, 0x4E	; 78
    59c6:	b0 e0       	ldi	r27, 0x00	; 0
    59c8:	ee e4       	ldi	r30, 0x4E	; 78
    59ca:	f0 e0       	ldi	r31, 0x00	; 0
    59cc:	80 81       	ld	r24, Z
    59ce:	87 7f       	andi	r24, 0xF7	; 247
    59d0:	8c 93       	st	X, r24
			SET_BIT(TCCR1A_REG , WGM11); SET_BIT(TCCR1A_REG , WGM10); break;
    59d2:	af e4       	ldi	r26, 0x4F	; 79
    59d4:	b0 e0       	ldi	r27, 0x00	; 0
    59d6:	ef e4       	ldi	r30, 0x4F	; 79
    59d8:	f0 e0       	ldi	r31, 0x00	; 0
    59da:	80 81       	ld	r24, Z
    59dc:	82 60       	ori	r24, 0x02	; 2
    59de:	8c 93       	st	X, r24
    59e0:	af e4       	ldi	r26, 0x4F	; 79
    59e2:	b0 e0       	ldi	r27, 0x00	; 0
    59e4:	ef e4       	ldi	r30, 0x4F	; 79
    59e6:	f0 e0       	ldi	r31, 0x00	; 0
    59e8:	80 81       	ld	r24, Z
    59ea:	81 60       	ori	r24, 0x01	; 1
    59ec:	8c 93       	st	X, r24
    59ee:	3e c1       	rjmp	.+636    	; 0x5c6c <TIMER1_voidSetMode+0x442>

		case TIMER1_CTC_OCR1A_MODE :
			CLR_BIT(TCCR1B_REG , WGM13); SET_BIT(TCCR1B_REG , WGM12);
    59f0:	ae e4       	ldi	r26, 0x4E	; 78
    59f2:	b0 e0       	ldi	r27, 0x00	; 0
    59f4:	ee e4       	ldi	r30, 0x4E	; 78
    59f6:	f0 e0       	ldi	r31, 0x00	; 0
    59f8:	80 81       	ld	r24, Z
    59fa:	8f 7e       	andi	r24, 0xEF	; 239
    59fc:	8c 93       	st	X, r24
    59fe:	ae e4       	ldi	r26, 0x4E	; 78
    5a00:	b0 e0       	ldi	r27, 0x00	; 0
    5a02:	ee e4       	ldi	r30, 0x4E	; 78
    5a04:	f0 e0       	ldi	r31, 0x00	; 0
    5a06:	80 81       	ld	r24, Z
    5a08:	88 60       	ori	r24, 0x08	; 8
    5a0a:	8c 93       	st	X, r24
			CLR_BIT(TCCR1A_REG , WGM11); CLR_BIT(TCCR1A_REG , WGM10); break;
    5a0c:	af e4       	ldi	r26, 0x4F	; 79
    5a0e:	b0 e0       	ldi	r27, 0x00	; 0
    5a10:	ef e4       	ldi	r30, 0x4F	; 79
    5a12:	f0 e0       	ldi	r31, 0x00	; 0
    5a14:	80 81       	ld	r24, Z
    5a16:	8d 7f       	andi	r24, 0xFD	; 253
    5a18:	8c 93       	st	X, r24
    5a1a:	af e4       	ldi	r26, 0x4F	; 79
    5a1c:	b0 e0       	ldi	r27, 0x00	; 0
    5a1e:	ef e4       	ldi	r30, 0x4F	; 79
    5a20:	f0 e0       	ldi	r31, 0x00	; 0
    5a22:	80 81       	ld	r24, Z
    5a24:	8e 7f       	andi	r24, 0xFE	; 254
    5a26:	8c 93       	st	X, r24
    5a28:	21 c1       	rjmp	.+578    	; 0x5c6c <TIMER1_voidSetMode+0x442>

		case TIMER1_FAST_PWM_8_BIT_MODE :
			CLR_BIT(TCCR1B_REG , WGM13); SET_BIT(TCCR1B_REG , WGM12);
    5a2a:	ae e4       	ldi	r26, 0x4E	; 78
    5a2c:	b0 e0       	ldi	r27, 0x00	; 0
    5a2e:	ee e4       	ldi	r30, 0x4E	; 78
    5a30:	f0 e0       	ldi	r31, 0x00	; 0
    5a32:	80 81       	ld	r24, Z
    5a34:	8f 7e       	andi	r24, 0xEF	; 239
    5a36:	8c 93       	st	X, r24
    5a38:	ae e4       	ldi	r26, 0x4E	; 78
    5a3a:	b0 e0       	ldi	r27, 0x00	; 0
    5a3c:	ee e4       	ldi	r30, 0x4E	; 78
    5a3e:	f0 e0       	ldi	r31, 0x00	; 0
    5a40:	80 81       	ld	r24, Z
    5a42:	88 60       	ori	r24, 0x08	; 8
    5a44:	8c 93       	st	X, r24
			CLR_BIT(TCCR1A_REG , WGM11); SET_BIT(TCCR1A_REG , WGM10); break;
    5a46:	af e4       	ldi	r26, 0x4F	; 79
    5a48:	b0 e0       	ldi	r27, 0x00	; 0
    5a4a:	ef e4       	ldi	r30, 0x4F	; 79
    5a4c:	f0 e0       	ldi	r31, 0x00	; 0
    5a4e:	80 81       	ld	r24, Z
    5a50:	8d 7f       	andi	r24, 0xFD	; 253
    5a52:	8c 93       	st	X, r24
    5a54:	af e4       	ldi	r26, 0x4F	; 79
    5a56:	b0 e0       	ldi	r27, 0x00	; 0
    5a58:	ef e4       	ldi	r30, 0x4F	; 79
    5a5a:	f0 e0       	ldi	r31, 0x00	; 0
    5a5c:	80 81       	ld	r24, Z
    5a5e:	81 60       	ori	r24, 0x01	; 1
    5a60:	8c 93       	st	X, r24
    5a62:	04 c1       	rjmp	.+520    	; 0x5c6c <TIMER1_voidSetMode+0x442>

		case TIMER1_FAST_PWM_9_BIT_MODE :
			CLR_BIT(TCCR1B_REG , WGM13); SET_BIT(TCCR1B_REG , WGM12);
    5a64:	ae e4       	ldi	r26, 0x4E	; 78
    5a66:	b0 e0       	ldi	r27, 0x00	; 0
    5a68:	ee e4       	ldi	r30, 0x4E	; 78
    5a6a:	f0 e0       	ldi	r31, 0x00	; 0
    5a6c:	80 81       	ld	r24, Z
    5a6e:	8f 7e       	andi	r24, 0xEF	; 239
    5a70:	8c 93       	st	X, r24
    5a72:	ae e4       	ldi	r26, 0x4E	; 78
    5a74:	b0 e0       	ldi	r27, 0x00	; 0
    5a76:	ee e4       	ldi	r30, 0x4E	; 78
    5a78:	f0 e0       	ldi	r31, 0x00	; 0
    5a7a:	80 81       	ld	r24, Z
    5a7c:	88 60       	ori	r24, 0x08	; 8
    5a7e:	8c 93       	st	X, r24
			SET_BIT(TCCR1A_REG , WGM11); CLR_BIT(TCCR1A_REG , WGM10); break;
    5a80:	af e4       	ldi	r26, 0x4F	; 79
    5a82:	b0 e0       	ldi	r27, 0x00	; 0
    5a84:	ef e4       	ldi	r30, 0x4F	; 79
    5a86:	f0 e0       	ldi	r31, 0x00	; 0
    5a88:	80 81       	ld	r24, Z
    5a8a:	82 60       	ori	r24, 0x02	; 2
    5a8c:	8c 93       	st	X, r24
    5a8e:	af e4       	ldi	r26, 0x4F	; 79
    5a90:	b0 e0       	ldi	r27, 0x00	; 0
    5a92:	ef e4       	ldi	r30, 0x4F	; 79
    5a94:	f0 e0       	ldi	r31, 0x00	; 0
    5a96:	80 81       	ld	r24, Z
    5a98:	8e 7f       	andi	r24, 0xFE	; 254
    5a9a:	8c 93       	st	X, r24
    5a9c:	e7 c0       	rjmp	.+462    	; 0x5c6c <TIMER1_voidSetMode+0x442>

		case TIMER1_FAST_PWM_10_BIT_MODE :
			CLR_BIT(TCCR1B_REG , WGM13); SET_BIT(TCCR1B_REG , WGM12);
    5a9e:	ae e4       	ldi	r26, 0x4E	; 78
    5aa0:	b0 e0       	ldi	r27, 0x00	; 0
    5aa2:	ee e4       	ldi	r30, 0x4E	; 78
    5aa4:	f0 e0       	ldi	r31, 0x00	; 0
    5aa6:	80 81       	ld	r24, Z
    5aa8:	8f 7e       	andi	r24, 0xEF	; 239
    5aaa:	8c 93       	st	X, r24
    5aac:	ae e4       	ldi	r26, 0x4E	; 78
    5aae:	b0 e0       	ldi	r27, 0x00	; 0
    5ab0:	ee e4       	ldi	r30, 0x4E	; 78
    5ab2:	f0 e0       	ldi	r31, 0x00	; 0
    5ab4:	80 81       	ld	r24, Z
    5ab6:	88 60       	ori	r24, 0x08	; 8
    5ab8:	8c 93       	st	X, r24
			SET_BIT(TCCR1A_REG , WGM11); SET_BIT(TCCR1A_REG , WGM10); break;
    5aba:	af e4       	ldi	r26, 0x4F	; 79
    5abc:	b0 e0       	ldi	r27, 0x00	; 0
    5abe:	ef e4       	ldi	r30, 0x4F	; 79
    5ac0:	f0 e0       	ldi	r31, 0x00	; 0
    5ac2:	80 81       	ld	r24, Z
    5ac4:	82 60       	ori	r24, 0x02	; 2
    5ac6:	8c 93       	st	X, r24
    5ac8:	af e4       	ldi	r26, 0x4F	; 79
    5aca:	b0 e0       	ldi	r27, 0x00	; 0
    5acc:	ef e4       	ldi	r30, 0x4F	; 79
    5ace:	f0 e0       	ldi	r31, 0x00	; 0
    5ad0:	80 81       	ld	r24, Z
    5ad2:	81 60       	ori	r24, 0x01	; 1
    5ad4:	8c 93       	st	X, r24
    5ad6:	ca c0       	rjmp	.+404    	; 0x5c6c <TIMER1_voidSetMode+0x442>

		case TIMER1_PHASE_FREQUENCY_CORRECT_ICR1_MODE :
			SET_BIT(TCCR1B_REG , WGM13); CLR_BIT(TCCR1B_REG , WGM12);
    5ad8:	ae e4       	ldi	r26, 0x4E	; 78
    5ada:	b0 e0       	ldi	r27, 0x00	; 0
    5adc:	ee e4       	ldi	r30, 0x4E	; 78
    5ade:	f0 e0       	ldi	r31, 0x00	; 0
    5ae0:	80 81       	ld	r24, Z
    5ae2:	80 61       	ori	r24, 0x10	; 16
    5ae4:	8c 93       	st	X, r24
    5ae6:	ae e4       	ldi	r26, 0x4E	; 78
    5ae8:	b0 e0       	ldi	r27, 0x00	; 0
    5aea:	ee e4       	ldi	r30, 0x4E	; 78
    5aec:	f0 e0       	ldi	r31, 0x00	; 0
    5aee:	80 81       	ld	r24, Z
    5af0:	87 7f       	andi	r24, 0xF7	; 247
    5af2:	8c 93       	st	X, r24
			CLR_BIT(TCCR1A_REG , WGM11); CLR_BIT(TCCR1A_REG , WGM10); break;
    5af4:	af e4       	ldi	r26, 0x4F	; 79
    5af6:	b0 e0       	ldi	r27, 0x00	; 0
    5af8:	ef e4       	ldi	r30, 0x4F	; 79
    5afa:	f0 e0       	ldi	r31, 0x00	; 0
    5afc:	80 81       	ld	r24, Z
    5afe:	8d 7f       	andi	r24, 0xFD	; 253
    5b00:	8c 93       	st	X, r24
    5b02:	af e4       	ldi	r26, 0x4F	; 79
    5b04:	b0 e0       	ldi	r27, 0x00	; 0
    5b06:	ef e4       	ldi	r30, 0x4F	; 79
    5b08:	f0 e0       	ldi	r31, 0x00	; 0
    5b0a:	80 81       	ld	r24, Z
    5b0c:	8e 7f       	andi	r24, 0xFE	; 254
    5b0e:	8c 93       	st	X, r24
    5b10:	ad c0       	rjmp	.+346    	; 0x5c6c <TIMER1_voidSetMode+0x442>

		case TIMER1_PHASE_FREQUENCY_CORRECT_OCR1A_MODE :
			SET_BIT(TCCR1B_REG , WGM13); CLR_BIT(TCCR1B_REG , WGM12);
    5b12:	ae e4       	ldi	r26, 0x4E	; 78
    5b14:	b0 e0       	ldi	r27, 0x00	; 0
    5b16:	ee e4       	ldi	r30, 0x4E	; 78
    5b18:	f0 e0       	ldi	r31, 0x00	; 0
    5b1a:	80 81       	ld	r24, Z
    5b1c:	80 61       	ori	r24, 0x10	; 16
    5b1e:	8c 93       	st	X, r24
    5b20:	ae e4       	ldi	r26, 0x4E	; 78
    5b22:	b0 e0       	ldi	r27, 0x00	; 0
    5b24:	ee e4       	ldi	r30, 0x4E	; 78
    5b26:	f0 e0       	ldi	r31, 0x00	; 0
    5b28:	80 81       	ld	r24, Z
    5b2a:	87 7f       	andi	r24, 0xF7	; 247
    5b2c:	8c 93       	st	X, r24
			CLR_BIT(TCCR1A_REG , WGM11); SET_BIT(TCCR1A_REG , WGM10); break;
    5b2e:	af e4       	ldi	r26, 0x4F	; 79
    5b30:	b0 e0       	ldi	r27, 0x00	; 0
    5b32:	ef e4       	ldi	r30, 0x4F	; 79
    5b34:	f0 e0       	ldi	r31, 0x00	; 0
    5b36:	80 81       	ld	r24, Z
    5b38:	8d 7f       	andi	r24, 0xFD	; 253
    5b3a:	8c 93       	st	X, r24
    5b3c:	af e4       	ldi	r26, 0x4F	; 79
    5b3e:	b0 e0       	ldi	r27, 0x00	; 0
    5b40:	ef e4       	ldi	r30, 0x4F	; 79
    5b42:	f0 e0       	ldi	r31, 0x00	; 0
    5b44:	80 81       	ld	r24, Z
    5b46:	81 60       	ori	r24, 0x01	; 1
    5b48:	8c 93       	st	X, r24
    5b4a:	90 c0       	rjmp	.+288    	; 0x5c6c <TIMER1_voidSetMode+0x442>

		case TIMER1_PWM_PHASE_CORRECT_ICR1_MODE :
			SET_BIT(TCCR1B_REG , WGM13); CLR_BIT(TCCR1B_REG , WGM12);
    5b4c:	ae e4       	ldi	r26, 0x4E	; 78
    5b4e:	b0 e0       	ldi	r27, 0x00	; 0
    5b50:	ee e4       	ldi	r30, 0x4E	; 78
    5b52:	f0 e0       	ldi	r31, 0x00	; 0
    5b54:	80 81       	ld	r24, Z
    5b56:	80 61       	ori	r24, 0x10	; 16
    5b58:	8c 93       	st	X, r24
    5b5a:	ae e4       	ldi	r26, 0x4E	; 78
    5b5c:	b0 e0       	ldi	r27, 0x00	; 0
    5b5e:	ee e4       	ldi	r30, 0x4E	; 78
    5b60:	f0 e0       	ldi	r31, 0x00	; 0
    5b62:	80 81       	ld	r24, Z
    5b64:	87 7f       	andi	r24, 0xF7	; 247
    5b66:	8c 93       	st	X, r24
			SET_BIT(TCCR1A_REG , WGM11); CLR_BIT(TCCR1A_REG , WGM10); break;
    5b68:	af e4       	ldi	r26, 0x4F	; 79
    5b6a:	b0 e0       	ldi	r27, 0x00	; 0
    5b6c:	ef e4       	ldi	r30, 0x4F	; 79
    5b6e:	f0 e0       	ldi	r31, 0x00	; 0
    5b70:	80 81       	ld	r24, Z
    5b72:	82 60       	ori	r24, 0x02	; 2
    5b74:	8c 93       	st	X, r24
    5b76:	af e4       	ldi	r26, 0x4F	; 79
    5b78:	b0 e0       	ldi	r27, 0x00	; 0
    5b7a:	ef e4       	ldi	r30, 0x4F	; 79
    5b7c:	f0 e0       	ldi	r31, 0x00	; 0
    5b7e:	80 81       	ld	r24, Z
    5b80:	8e 7f       	andi	r24, 0xFE	; 254
    5b82:	8c 93       	st	X, r24
    5b84:	73 c0       	rjmp	.+230    	; 0x5c6c <TIMER1_voidSetMode+0x442>

		case TIMER1_PWM_PHASE_CORRECT_OCR1A_MODE :
			SET_BIT(TCCR1B_REG , WGM13); CLR_BIT(TCCR1B_REG , WGM12);
    5b86:	ae e4       	ldi	r26, 0x4E	; 78
    5b88:	b0 e0       	ldi	r27, 0x00	; 0
    5b8a:	ee e4       	ldi	r30, 0x4E	; 78
    5b8c:	f0 e0       	ldi	r31, 0x00	; 0
    5b8e:	80 81       	ld	r24, Z
    5b90:	80 61       	ori	r24, 0x10	; 16
    5b92:	8c 93       	st	X, r24
    5b94:	ae e4       	ldi	r26, 0x4E	; 78
    5b96:	b0 e0       	ldi	r27, 0x00	; 0
    5b98:	ee e4       	ldi	r30, 0x4E	; 78
    5b9a:	f0 e0       	ldi	r31, 0x00	; 0
    5b9c:	80 81       	ld	r24, Z
    5b9e:	87 7f       	andi	r24, 0xF7	; 247
    5ba0:	8c 93       	st	X, r24
			SET_BIT(TCCR1A_REG , WGM11); SET_BIT(TCCR1A_REG , WGM10); break;
    5ba2:	af e4       	ldi	r26, 0x4F	; 79
    5ba4:	b0 e0       	ldi	r27, 0x00	; 0
    5ba6:	ef e4       	ldi	r30, 0x4F	; 79
    5ba8:	f0 e0       	ldi	r31, 0x00	; 0
    5baa:	80 81       	ld	r24, Z
    5bac:	82 60       	ori	r24, 0x02	; 2
    5bae:	8c 93       	st	X, r24
    5bb0:	af e4       	ldi	r26, 0x4F	; 79
    5bb2:	b0 e0       	ldi	r27, 0x00	; 0
    5bb4:	ef e4       	ldi	r30, 0x4F	; 79
    5bb6:	f0 e0       	ldi	r31, 0x00	; 0
    5bb8:	80 81       	ld	r24, Z
    5bba:	81 60       	ori	r24, 0x01	; 1
    5bbc:	8c 93       	st	X, r24
    5bbe:	56 c0       	rjmp	.+172    	; 0x5c6c <TIMER1_voidSetMode+0x442>

		case TIMER1_CTC_ICR1_MODE :
			SET_BIT(TCCR1B_REG , WGM13); SET_BIT(TCCR1B_REG , WGM12);
    5bc0:	ae e4       	ldi	r26, 0x4E	; 78
    5bc2:	b0 e0       	ldi	r27, 0x00	; 0
    5bc4:	ee e4       	ldi	r30, 0x4E	; 78
    5bc6:	f0 e0       	ldi	r31, 0x00	; 0
    5bc8:	80 81       	ld	r24, Z
    5bca:	80 61       	ori	r24, 0x10	; 16
    5bcc:	8c 93       	st	X, r24
    5bce:	ae e4       	ldi	r26, 0x4E	; 78
    5bd0:	b0 e0       	ldi	r27, 0x00	; 0
    5bd2:	ee e4       	ldi	r30, 0x4E	; 78
    5bd4:	f0 e0       	ldi	r31, 0x00	; 0
    5bd6:	80 81       	ld	r24, Z
    5bd8:	88 60       	ori	r24, 0x08	; 8
    5bda:	8c 93       	st	X, r24
			CLR_BIT(TCCR1A_REG , WGM11); CLR_BIT(TCCR1A_REG , WGM10); break;
    5bdc:	af e4       	ldi	r26, 0x4F	; 79
    5bde:	b0 e0       	ldi	r27, 0x00	; 0
    5be0:	ef e4       	ldi	r30, 0x4F	; 79
    5be2:	f0 e0       	ldi	r31, 0x00	; 0
    5be4:	80 81       	ld	r24, Z
    5be6:	8d 7f       	andi	r24, 0xFD	; 253
    5be8:	8c 93       	st	X, r24
    5bea:	af e4       	ldi	r26, 0x4F	; 79
    5bec:	b0 e0       	ldi	r27, 0x00	; 0
    5bee:	ef e4       	ldi	r30, 0x4F	; 79
    5bf0:	f0 e0       	ldi	r31, 0x00	; 0
    5bf2:	80 81       	ld	r24, Z
    5bf4:	8e 7f       	andi	r24, 0xFE	; 254
    5bf6:	8c 93       	st	X, r24
    5bf8:	39 c0       	rjmp	.+114    	; 0x5c6c <TIMER1_voidSetMode+0x442>

		case TIMER1_FAST_PWM_ICR1_MODE :
			SET_BIT(TCCR1B_REG , WGM13); SET_BIT(TCCR1B_REG , WGM12);
    5bfa:	ae e4       	ldi	r26, 0x4E	; 78
    5bfc:	b0 e0       	ldi	r27, 0x00	; 0
    5bfe:	ee e4       	ldi	r30, 0x4E	; 78
    5c00:	f0 e0       	ldi	r31, 0x00	; 0
    5c02:	80 81       	ld	r24, Z
    5c04:	80 61       	ori	r24, 0x10	; 16
    5c06:	8c 93       	st	X, r24
    5c08:	ae e4       	ldi	r26, 0x4E	; 78
    5c0a:	b0 e0       	ldi	r27, 0x00	; 0
    5c0c:	ee e4       	ldi	r30, 0x4E	; 78
    5c0e:	f0 e0       	ldi	r31, 0x00	; 0
    5c10:	80 81       	ld	r24, Z
    5c12:	88 60       	ori	r24, 0x08	; 8
    5c14:	8c 93       	st	X, r24
			SET_BIT(TCCR1A_REG , WGM11); CLR_BIT(TCCR1A_REG , WGM10); break;
    5c16:	af e4       	ldi	r26, 0x4F	; 79
    5c18:	b0 e0       	ldi	r27, 0x00	; 0
    5c1a:	ef e4       	ldi	r30, 0x4F	; 79
    5c1c:	f0 e0       	ldi	r31, 0x00	; 0
    5c1e:	80 81       	ld	r24, Z
    5c20:	82 60       	ori	r24, 0x02	; 2
    5c22:	8c 93       	st	X, r24
    5c24:	af e4       	ldi	r26, 0x4F	; 79
    5c26:	b0 e0       	ldi	r27, 0x00	; 0
    5c28:	ef e4       	ldi	r30, 0x4F	; 79
    5c2a:	f0 e0       	ldi	r31, 0x00	; 0
    5c2c:	80 81       	ld	r24, Z
    5c2e:	8e 7f       	andi	r24, 0xFE	; 254
    5c30:	8c 93       	st	X, r24
    5c32:	1c c0       	rjmp	.+56     	; 0x5c6c <TIMER1_voidSetMode+0x442>

		case TIMER1_FAST_PWM_OCR1A_MODE :
			SET_BIT(TCCR1B_REG , WGM13); SET_BIT(TCCR1B_REG , WGM12);
    5c34:	ae e4       	ldi	r26, 0x4E	; 78
    5c36:	b0 e0       	ldi	r27, 0x00	; 0
    5c38:	ee e4       	ldi	r30, 0x4E	; 78
    5c3a:	f0 e0       	ldi	r31, 0x00	; 0
    5c3c:	80 81       	ld	r24, Z
    5c3e:	80 61       	ori	r24, 0x10	; 16
    5c40:	8c 93       	st	X, r24
    5c42:	ae e4       	ldi	r26, 0x4E	; 78
    5c44:	b0 e0       	ldi	r27, 0x00	; 0
    5c46:	ee e4       	ldi	r30, 0x4E	; 78
    5c48:	f0 e0       	ldi	r31, 0x00	; 0
    5c4a:	80 81       	ld	r24, Z
    5c4c:	88 60       	ori	r24, 0x08	; 8
    5c4e:	8c 93       	st	X, r24
			SET_BIT(TCCR1A_REG , WGM11); SET_BIT(TCCR1A_REG , WGM10); break;
    5c50:	af e4       	ldi	r26, 0x4F	; 79
    5c52:	b0 e0       	ldi	r27, 0x00	; 0
    5c54:	ef e4       	ldi	r30, 0x4F	; 79
    5c56:	f0 e0       	ldi	r31, 0x00	; 0
    5c58:	80 81       	ld	r24, Z
    5c5a:	82 60       	ori	r24, 0x02	; 2
    5c5c:	8c 93       	st	X, r24
    5c5e:	af e4       	ldi	r26, 0x4F	; 79
    5c60:	b0 e0       	ldi	r27, 0x00	; 0
    5c62:	ef e4       	ldi	r30, 0x4F	; 79
    5c64:	f0 e0       	ldi	r31, 0x00	; 0
    5c66:	80 81       	ld	r24, Z
    5c68:	81 60       	ori	r24, 0x01	; 1
    5c6a:	8c 93       	st	X, r24
	}
	else
	{
		//report error
	}
}
    5c6c:	0f 90       	pop	r0
    5c6e:	0f 90       	pop	r0
    5c70:	0f 90       	pop	r0
    5c72:	cf 91       	pop	r28
    5c74:	df 91       	pop	r29
    5c76:	08 95       	ret

00005c78 <TIMER1_voidSetPreLoad>:


void TIMER1_voidSetPreLoad(u16 u16PreLoad)
{
    5c78:	df 93       	push	r29
    5c7a:	cf 93       	push	r28
    5c7c:	00 d0       	rcall	.+0      	; 0x5c7e <TIMER1_voidSetPreLoad+0x6>
    5c7e:	cd b7       	in	r28, 0x3d	; 61
    5c80:	de b7       	in	r29, 0x3e	; 62
    5c82:	9a 83       	std	Y+2, r25	; 0x02
    5c84:	89 83       	std	Y+1, r24	; 0x01
	/* check from u16PreLoad value */
	if (u16PreLoad <= TIMER1_MAX_PRELOAD)
	{
		/* Put u8PreLoad value into TCNT1 Register */
		TCNT1_REG = u16PreLoad ;
    5c86:	ec e4       	ldi	r30, 0x4C	; 76
    5c88:	f0 e0       	ldi	r31, 0x00	; 0
    5c8a:	89 81       	ldd	r24, Y+1	; 0x01
    5c8c:	9a 81       	ldd	r25, Y+2	; 0x02
    5c8e:	91 83       	std	Z+1, r25	; 0x01
    5c90:	80 83       	st	Z, r24
	}
	else
	{
		//report error
	}
}
    5c92:	0f 90       	pop	r0
    5c94:	0f 90       	pop	r0
    5c96:	cf 91       	pop	r28
    5c98:	df 91       	pop	r29
    5c9a:	08 95       	ret

00005c9c <TIMER1_voidSetCTCA>:


void TIMER1_voidSetCTCA(u16 u16CMA)
{
    5c9c:	df 93       	push	r29
    5c9e:	cf 93       	push	r28
    5ca0:	00 d0       	rcall	.+0      	; 0x5ca2 <TIMER1_voidSetCTCA+0x6>
    5ca2:	cd b7       	in	r28, 0x3d	; 61
    5ca4:	de b7       	in	r29, 0x3e	; 62
    5ca6:	9a 83       	std	Y+2, r25	; 0x02
    5ca8:	89 83       	std	Y+1, r24	; 0x01
	/* Check from u16CMA value */
	if (u16CMA <= TIMER1_MAX_PRELOAD)
	{
		/* Put u16CMA value into OCR1A Register */
		OCR1A_REG = u16CMA ;
    5caa:	ea e4       	ldi	r30, 0x4A	; 74
    5cac:	f0 e0       	ldi	r31, 0x00	; 0
    5cae:	89 81       	ldd	r24, Y+1	; 0x01
    5cb0:	9a 81       	ldd	r25, Y+2	; 0x02
    5cb2:	91 83       	std	Z+1, r25	; 0x01
    5cb4:	80 83       	st	Z, r24
	}
	else
	{
		//report error
	}
}
    5cb6:	0f 90       	pop	r0
    5cb8:	0f 90       	pop	r0
    5cba:	cf 91       	pop	r28
    5cbc:	df 91       	pop	r29
    5cbe:	08 95       	ret

00005cc0 <TIMER1_voidSetCTCB>:


void TIMER1_voidSetCTCB(u16 u16CMB)
{
    5cc0:	df 93       	push	r29
    5cc2:	cf 93       	push	r28
    5cc4:	00 d0       	rcall	.+0      	; 0x5cc6 <TIMER1_voidSetCTCB+0x6>
    5cc6:	cd b7       	in	r28, 0x3d	; 61
    5cc8:	de b7       	in	r29, 0x3e	; 62
    5cca:	9a 83       	std	Y+2, r25	; 0x02
    5ccc:	89 83       	std	Y+1, r24	; 0x01
	/* Check from u16CMB value */
	if (u16CMB <= TIMER1_MAX_PRELOAD)
	{
		/* Put u16CMB value into OCR1B Register */
		OCR1B_REG = u16CMB ;
    5cce:	e8 e4       	ldi	r30, 0x48	; 72
    5cd0:	f0 e0       	ldi	r31, 0x00	; 0
    5cd2:	89 81       	ldd	r24, Y+1	; 0x01
    5cd4:	9a 81       	ldd	r25, Y+2	; 0x02
    5cd6:	91 83       	std	Z+1, r25	; 0x01
    5cd8:	80 83       	st	Z, r24
	}
	else
	{
		//report error
	}
}
    5cda:	0f 90       	pop	r0
    5cdc:	0f 90       	pop	r0
    5cde:	cf 91       	pop	r28
    5ce0:	df 91       	pop	r29
    5ce2:	08 95       	ret

00005ce4 <TIMER1_voidSetICR1>:



void TIMER1_voidSetICR1(u16 u16ICR1)
{
    5ce4:	df 93       	push	r29
    5ce6:	cf 93       	push	r28
    5ce8:	00 d0       	rcall	.+0      	; 0x5cea <TIMER1_voidSetICR1+0x6>
    5cea:	cd b7       	in	r28, 0x3d	; 61
    5cec:	de b7       	in	r29, 0x3e	; 62
    5cee:	9a 83       	std	Y+2, r25	; 0x02
    5cf0:	89 83       	std	Y+1, r24	; 0x01
	/* Check from u16ICR1 value */
	if (u16ICR1 <= TIMER1_MAX_PRELOAD)
	{
		/* Put u16CMB value into OCR1B Register */
		ICR1_REG = u16ICR1 ;
    5cf2:	e6 e4       	ldi	r30, 0x46	; 70
    5cf4:	f0 e0       	ldi	r31, 0x00	; 0
    5cf6:	89 81       	ldd	r24, Y+1	; 0x01
    5cf8:	9a 81       	ldd	r25, Y+2	; 0x02
    5cfa:	91 83       	std	Z+1, r25	; 0x01
    5cfc:	80 83       	st	Z, r24
	}
	else
	{
		//report error
	}
}
    5cfe:	0f 90       	pop	r0
    5d00:	0f 90       	pop	r0
    5d02:	cf 91       	pop	r28
    5d04:	df 91       	pop	r29
    5d06:	08 95       	ret

00005d08 <TIMER1_voidEnable>:


void TIMER1_voidEnable(u8 u8PreScaler)
{
    5d08:	df 93       	push	r29
    5d0a:	cf 93       	push	r28
    5d0c:	0f 92       	push	r0
    5d0e:	cd b7       	in	r28, 0x3d	; 61
    5d10:	de b7       	in	r29, 0x3e	; 62
    5d12:	89 83       	std	Y+1, r24	; 0x01
	/* Check from u8PreScaler value */
	if (u8PreScaler <= TIMER_EXTERNAL_CLOCK_SOURCE_ON_T0_RISING )
    5d14:	89 81       	ldd	r24, Y+1	; 0x01
    5d16:	88 30       	cpi	r24, 0x08	; 8
    5d18:	78 f4       	brcc	.+30     	; 0x5d38 <TIMER1_voidEnable+0x30>
	{
		/* Set TIMER0 clock prescaler */
		TCCR1B_REG &= TIMER_PRESCALER_MASK;
    5d1a:	ae e4       	ldi	r26, 0x4E	; 78
    5d1c:	b0 e0       	ldi	r27, 0x00	; 0
    5d1e:	ee e4       	ldi	r30, 0x4E	; 78
    5d20:	f0 e0       	ldi	r31, 0x00	; 0
    5d22:	80 81       	ld	r24, Z
    5d24:	88 7f       	andi	r24, 0xF8	; 248
    5d26:	8c 93       	st	X, r24
		TCCR1B_REG |= u8PreScaler;
    5d28:	ae e4       	ldi	r26, 0x4E	; 78
    5d2a:	b0 e0       	ldi	r27, 0x00	; 0
    5d2c:	ee e4       	ldi	r30, 0x4E	; 78
    5d2e:	f0 e0       	ldi	r31, 0x00	; 0
    5d30:	90 81       	ld	r25, Z
    5d32:	89 81       	ldd	r24, Y+1	; 0x01
    5d34:	89 2b       	or	r24, r25
    5d36:	8c 93       	st	X, r24
	}
	else
	{
		//report error
	}
}
    5d38:	0f 90       	pop	r0
    5d3a:	cf 91       	pop	r28
    5d3c:	df 91       	pop	r29
    5d3e:	08 95       	ret

00005d40 <TIMER1_voidDisable>:


void TIMER1_voidDisable()
{
    5d40:	df 93       	push	r29
    5d42:	cf 93       	push	r28
    5d44:	cd b7       	in	r28, 0x3d	; 61
    5d46:	de b7       	in	r29, 0x3e	; 62
	TCCR1B_REG &= TIMER_PRESCALER_MASK;
    5d48:	ae e4       	ldi	r26, 0x4E	; 78
    5d4a:	b0 e0       	ldi	r27, 0x00	; 0
    5d4c:	ee e4       	ldi	r30, 0x4E	; 78
    5d4e:	f0 e0       	ldi	r31, 0x00	; 0
    5d50:	80 81       	ld	r24, Z
    5d52:	88 7f       	andi	r24, 0xF8	; 248
    5d54:	8c 93       	st	X, r24
}
    5d56:	cf 91       	pop	r28
    5d58:	df 91       	pop	r29
    5d5a:	08 95       	ret

00005d5c <TIMER1_u16GetTIMER1CounterVal>:

u16 TIMER1_u16GetTIMER1CounterVal()
{
    5d5c:	df 93       	push	r29
    5d5e:	cf 93       	push	r28
    5d60:	00 d0       	rcall	.+0      	; 0x5d62 <TIMER1_u16GetTIMER1CounterVal+0x6>
    5d62:	cd b7       	in	r28, 0x3d	; 61
    5d64:	de b7       	in	r29, 0x3e	; 62
	u16 u16ConterVal = 0;
    5d66:	1a 82       	std	Y+2, r1	; 0x02
    5d68:	19 82       	std	Y+1, r1	; 0x01

	u16ConterVal = TCNT1_REG;
    5d6a:	ec e4       	ldi	r30, 0x4C	; 76
    5d6c:	f0 e0       	ldi	r31, 0x00	; 0
    5d6e:	80 81       	ld	r24, Z
    5d70:	91 81       	ldd	r25, Z+1	; 0x01
    5d72:	9a 83       	std	Y+2, r25	; 0x02
    5d74:	89 83       	std	Y+1, r24	; 0x01

	return u16ConterVal;
    5d76:	89 81       	ldd	r24, Y+1	; 0x01
    5d78:	9a 81       	ldd	r25, Y+2	; 0x02
}
    5d7a:	0f 90       	pop	r0
    5d7c:	0f 90       	pop	r0
    5d7e:	cf 91       	pop	r28
    5d80:	df 91       	pop	r29
    5d82:	08 95       	ret

00005d84 <TIMER2_voidInit>:
/********************************************TIMER2 FUNCTIONS IMPLEMENTATION**********************************************/
/************************************************************************************************************************/


void TIMER2_voidInit()
{
    5d84:	df 93       	push	r29
    5d86:	cf 93       	push	r28
    5d88:	cd b7       	in	r28, 0x3d	; 61
    5d8a:	de b7       	in	r29, 0x3e	; 62
		/* Set the required CTC value */
		OCR2_REG = TIMER2_CTC_PHASE_CORRECT_PWM_VALUE;

	#elif TIMER2_MODE == TIMER_CTC_MODE
		/* Initialize TIMER2 as pwm phase correct mode */
		CLR_BIT(TCCR2_REG , WGM20);
    5d8c:	a5 e4       	ldi	r26, 0x45	; 69
    5d8e:	b0 e0       	ldi	r27, 0x00	; 0
    5d90:	e5 e4       	ldi	r30, 0x45	; 69
    5d92:	f0 e0       	ldi	r31, 0x00	; 0
    5d94:	80 81       	ld	r24, Z
    5d96:	8f 7b       	andi	r24, 0xBF	; 191
    5d98:	8c 93       	st	X, r24
		SET_BIT(TCCR2_REG , WGM21);
    5d9a:	a5 e4       	ldi	r26, 0x45	; 69
    5d9c:	b0 e0       	ldi	r27, 0x00	; 0
    5d9e:	e5 e4       	ldi	r30, 0x45	; 69
    5da0:	f0 e0       	ldi	r31, 0x00	; 0
    5da2:	80 81       	ld	r24, Z
    5da4:	88 60       	ori	r24, 0x08	; 8
    5da6:	8c 93       	st	X, r24

		/* Set CTC NO PWM Mode (config OC2 PIN)*/
		#if TIMER2_CTC_NO_PWM_MODE == TIMER_OC_DISCONNECTED
			CLR_BIT(TCCR2_REG , COM20);
    5da8:	a5 e4       	ldi	r26, 0x45	; 69
    5daa:	b0 e0       	ldi	r27, 0x00	; 0
    5dac:	e5 e4       	ldi	r30, 0x45	; 69
    5dae:	f0 e0       	ldi	r31, 0x00	; 0
    5db0:	80 81       	ld	r24, Z
    5db2:	8f 7e       	andi	r24, 0xEF	; 239
    5db4:	8c 93       	st	X, r24
			CLR_BIT(TCCR2_REG , COM21);
    5db6:	a5 e4       	ldi	r26, 0x45	; 69
    5db8:	b0 e0       	ldi	r27, 0x00	; 0
    5dba:	e5 e4       	ldi	r30, 0x45	; 69
    5dbc:	f0 e0       	ldi	r31, 0x00	; 0
    5dbe:	80 81       	ld	r24, Z
    5dc0:	8f 7d       	andi	r24, 0xDF	; 223
    5dc2:	8c 93       	st	X, r24
		#else
			#error "Wrong TIMER2_CTC_NO_PWM Config"
		#endif

		/* Set the required CTC value */
		OCR2_REG = TIMER2_CTC_NO_PWM_VALUE;
    5dc4:	e3 e4       	ldi	r30, 0x43	; 67
    5dc6:	f0 e0       	ldi	r31, 0x00	; 0
    5dc8:	10 82       	st	Z, r1

		/* TIMER2 CTC INTRRUPT ENABLE */
		#if TIMER2_CTC_INTRRUPT == ENABLE
			SET_BIT(TIMSK_REG , OCIE2);
		#elif TIMER2_CTC_INTRRUPT == DISABLE
			CLR_BIT(TIMSK_REG , OCIE2);
    5dca:	a9 e5       	ldi	r26, 0x59	; 89
    5dcc:	b0 e0       	ldi	r27, 0x00	; 0
    5dce:	e9 e5       	ldi	r30, 0x59	; 89
    5dd0:	f0 e0       	ldi	r31, 0x00	; 0
    5dd2:	80 81       	ld	r24, Z
    5dd4:	8f 77       	andi	r24, 0x7F	; 127
    5dd6:	8c 93       	st	X, r24
		#error"Wrong TIMER2_MODE Config"
	#endif

	/* SET THE REQUIRED TIMER2 CLOCK PRESCALER */
	/* MAKE SURE THE FIRST 3 BIT IN TCCR2 REG IS CLEARED */
	TCCR2_REG &= TIMER_PRESCALER_MASK;
    5dd8:	a5 e4       	ldi	r26, 0x45	; 69
    5dda:	b0 e0       	ldi	r27, 0x00	; 0
    5ddc:	e5 e4       	ldi	r30, 0x45	; 69
    5dde:	f0 e0       	ldi	r31, 0x00	; 0
    5de0:	80 81       	ld	r24, Z
    5de2:	88 7f       	andi	r24, 0xF8	; 248
    5de4:	8c 93       	st	X, r24
	TCCR2_REG |= TIMER2_PRESCALER;
    5de6:	a5 e4       	ldi	r26, 0x45	; 69
    5de8:	b0 e0       	ldi	r27, 0x00	; 0
    5dea:	e5 e4       	ldi	r30, 0x45	; 69
    5dec:	f0 e0       	ldi	r31, 0x00	; 0
    5dee:	80 81       	ld	r24, Z
    5df0:	8c 93       	st	X, r24

}
    5df2:	cf 91       	pop	r28
    5df4:	df 91       	pop	r29
    5df6:	08 95       	ret

00005df8 <TIMER2_voidSetMode>:


void TIMER2_voidSetMode(u8 u8Mode)
{
    5df8:	df 93       	push	r29
    5dfa:	cf 93       	push	r28
    5dfc:	00 d0       	rcall	.+0      	; 0x5dfe <TIMER2_voidSetMode+0x6>
    5dfe:	0f 92       	push	r0
    5e00:	cd b7       	in	r28, 0x3d	; 61
    5e02:	de b7       	in	r29, 0x3e	; 62
    5e04:	89 83       	std	Y+1, r24	; 0x01
	/* check From u8Mode value */
	if( u8Mode <= TIMER_FAST_PWM_MODE)
    5e06:	89 81       	ldd	r24, Y+1	; 0x01
    5e08:	84 30       	cpi	r24, 0x04	; 4
    5e0a:	08 f0       	brcs	.+2      	; 0x5e0e <TIMER2_voidSetMode+0x16>
    5e0c:	5a c0       	rjmp	.+180    	; 0x5ec2 <TIMER2_voidSetMode+0xca>
	{
		/* Set timer mode */
		switch(u8Mode)
    5e0e:	89 81       	ldd	r24, Y+1	; 0x01
    5e10:	28 2f       	mov	r18, r24
    5e12:	30 e0       	ldi	r19, 0x00	; 0
    5e14:	3b 83       	std	Y+3, r19	; 0x03
    5e16:	2a 83       	std	Y+2, r18	; 0x02
    5e18:	8a 81       	ldd	r24, Y+2	; 0x02
    5e1a:	9b 81       	ldd	r25, Y+3	; 0x03
    5e1c:	81 30       	cpi	r24, 0x01	; 1
    5e1e:	91 05       	cpc	r25, r1
    5e20:	21 f1       	breq	.+72     	; 0x5e6a <TIMER2_voidSetMode+0x72>
    5e22:	2a 81       	ldd	r18, Y+2	; 0x02
    5e24:	3b 81       	ldd	r19, Y+3	; 0x03
    5e26:	22 30       	cpi	r18, 0x02	; 2
    5e28:	31 05       	cpc	r19, r1
    5e2a:	2c f4       	brge	.+10     	; 0x5e36 <TIMER2_voidSetMode+0x3e>
    5e2c:	8a 81       	ldd	r24, Y+2	; 0x02
    5e2e:	9b 81       	ldd	r25, Y+3	; 0x03
    5e30:	00 97       	sbiw	r24, 0x00	; 0
    5e32:	61 f0       	breq	.+24     	; 0x5e4c <TIMER2_voidSetMode+0x54>
    5e34:	46 c0       	rjmp	.+140    	; 0x5ec2 <TIMER2_voidSetMode+0xca>
    5e36:	2a 81       	ldd	r18, Y+2	; 0x02
    5e38:	3b 81       	ldd	r19, Y+3	; 0x03
    5e3a:	22 30       	cpi	r18, 0x02	; 2
    5e3c:	31 05       	cpc	r19, r1
    5e3e:	21 f1       	breq	.+72     	; 0x5e88 <TIMER2_voidSetMode+0x90>
    5e40:	8a 81       	ldd	r24, Y+2	; 0x02
    5e42:	9b 81       	ldd	r25, Y+3	; 0x03
    5e44:	83 30       	cpi	r24, 0x03	; 3
    5e46:	91 05       	cpc	r25, r1
    5e48:	71 f1       	breq	.+92     	; 0x5ea6 <TIMER2_voidSetMode+0xae>
    5e4a:	3b c0       	rjmp	.+118    	; 0x5ec2 <TIMER2_voidSetMode+0xca>
		{
		case TIMER_NORMAL_MODE            : CLR_BIT(TCCR2_REG , WGM20); CLR_BIT(TCCR2_REG , WGM21); break;
    5e4c:	a5 e4       	ldi	r26, 0x45	; 69
    5e4e:	b0 e0       	ldi	r27, 0x00	; 0
    5e50:	e5 e4       	ldi	r30, 0x45	; 69
    5e52:	f0 e0       	ldi	r31, 0x00	; 0
    5e54:	80 81       	ld	r24, Z
    5e56:	8f 7b       	andi	r24, 0xBF	; 191
    5e58:	8c 93       	st	X, r24
    5e5a:	a5 e4       	ldi	r26, 0x45	; 69
    5e5c:	b0 e0       	ldi	r27, 0x00	; 0
    5e5e:	e5 e4       	ldi	r30, 0x45	; 69
    5e60:	f0 e0       	ldi	r31, 0x00	; 0
    5e62:	80 81       	ld	r24, Z
    5e64:	87 7f       	andi	r24, 0xF7	; 247
    5e66:	8c 93       	st	X, r24
    5e68:	2c c0       	rjmp	.+88     	; 0x5ec2 <TIMER2_voidSetMode+0xca>
		case TIMER_PWM_PHASE_CORRECT_MODE : SET_BIT(TCCR2_REG , WGM20); CLR_BIT(TCCR2_REG , WGM21);	break;
    5e6a:	a5 e4       	ldi	r26, 0x45	; 69
    5e6c:	b0 e0       	ldi	r27, 0x00	; 0
    5e6e:	e5 e4       	ldi	r30, 0x45	; 69
    5e70:	f0 e0       	ldi	r31, 0x00	; 0
    5e72:	80 81       	ld	r24, Z
    5e74:	80 64       	ori	r24, 0x40	; 64
    5e76:	8c 93       	st	X, r24
    5e78:	a5 e4       	ldi	r26, 0x45	; 69
    5e7a:	b0 e0       	ldi	r27, 0x00	; 0
    5e7c:	e5 e4       	ldi	r30, 0x45	; 69
    5e7e:	f0 e0       	ldi	r31, 0x00	; 0
    5e80:	80 81       	ld	r24, Z
    5e82:	87 7f       	andi	r24, 0xF7	; 247
    5e84:	8c 93       	st	X, r24
    5e86:	1d c0       	rjmp	.+58     	; 0x5ec2 <TIMER2_voidSetMode+0xca>
		case TIMER_CTC_MODE               : CLR_BIT(TCCR2_REG , WGM20); SET_BIT(TCCR2_REG , WGM21); break;
    5e88:	a5 e4       	ldi	r26, 0x45	; 69
    5e8a:	b0 e0       	ldi	r27, 0x00	; 0
    5e8c:	e5 e4       	ldi	r30, 0x45	; 69
    5e8e:	f0 e0       	ldi	r31, 0x00	; 0
    5e90:	80 81       	ld	r24, Z
    5e92:	8f 7b       	andi	r24, 0xBF	; 191
    5e94:	8c 93       	st	X, r24
    5e96:	a5 e4       	ldi	r26, 0x45	; 69
    5e98:	b0 e0       	ldi	r27, 0x00	; 0
    5e9a:	e5 e4       	ldi	r30, 0x45	; 69
    5e9c:	f0 e0       	ldi	r31, 0x00	; 0
    5e9e:	80 81       	ld	r24, Z
    5ea0:	88 60       	ori	r24, 0x08	; 8
    5ea2:	8c 93       	st	X, r24
    5ea4:	0e c0       	rjmp	.+28     	; 0x5ec2 <TIMER2_voidSetMode+0xca>
		case TIMER_FAST_PWM_MODE          : SET_BIT(TCCR2_REG , WGM20); SET_BIT(TCCR2_REG , WGM21); break;
    5ea6:	a5 e4       	ldi	r26, 0x45	; 69
    5ea8:	b0 e0       	ldi	r27, 0x00	; 0
    5eaa:	e5 e4       	ldi	r30, 0x45	; 69
    5eac:	f0 e0       	ldi	r31, 0x00	; 0
    5eae:	80 81       	ld	r24, Z
    5eb0:	80 64       	ori	r24, 0x40	; 64
    5eb2:	8c 93       	st	X, r24
    5eb4:	a5 e4       	ldi	r26, 0x45	; 69
    5eb6:	b0 e0       	ldi	r27, 0x00	; 0
    5eb8:	e5 e4       	ldi	r30, 0x45	; 69
    5eba:	f0 e0       	ldi	r31, 0x00	; 0
    5ebc:	80 81       	ld	r24, Z
    5ebe:	88 60       	ori	r24, 0x08	; 8
    5ec0:	8c 93       	st	X, r24
	}
	else
	{
		//report error
	}
}
    5ec2:	0f 90       	pop	r0
    5ec4:	0f 90       	pop	r0
    5ec6:	0f 90       	pop	r0
    5ec8:	cf 91       	pop	r28
    5eca:	df 91       	pop	r29
    5ecc:	08 95       	ret

00005ece <TIMER2_voidSetPreLoad>:


void TIMER2_voidSetPreLoad(u8 u8PreLoad)
{
    5ece:	df 93       	push	r29
    5ed0:	cf 93       	push	r28
    5ed2:	0f 92       	push	r0
    5ed4:	cd b7       	in	r28, 0x3d	; 61
    5ed6:	de b7       	in	r29, 0x3e	; 62
    5ed8:	89 83       	std	Y+1, r24	; 0x01
	/* check from u8PreLoad value */
	if (u8PreLoad <= TIMER2_MAX_PRELOAD)
	{
		/* Put u8PreLoad value into TCNT2 Register */
		TCNT2_REG = u8PreLoad ;
    5eda:	e4 e4       	ldi	r30, 0x44	; 68
    5edc:	f0 e0       	ldi	r31, 0x00	; 0
    5ede:	89 81       	ldd	r24, Y+1	; 0x01
    5ee0:	80 83       	st	Z, r24
	}
	else
	{
		//report error
	}
}
    5ee2:	0f 90       	pop	r0
    5ee4:	cf 91       	pop	r28
    5ee6:	df 91       	pop	r29
    5ee8:	08 95       	ret

00005eea <TIMER2_voidSetCTC>:


void TIMER2_voidSetCTC(u8 u8CompareMatch)
{
    5eea:	df 93       	push	r29
    5eec:	cf 93       	push	r28
    5eee:	0f 92       	push	r0
    5ef0:	cd b7       	in	r28, 0x3d	; 61
    5ef2:	de b7       	in	r29, 0x3e	; 62
    5ef4:	89 83       	std	Y+1, r24	; 0x01
	/* Check from u8CompareMatch value */
	if (u8CompareMatch <= TIMER2_MAX_PRELOAD)
	{
		/* Put u8CompareMatch value into OCR2 Register */
		OCR2_REG = u8CompareMatch ;
    5ef6:	e3 e4       	ldi	r30, 0x43	; 67
    5ef8:	f0 e0       	ldi	r31, 0x00	; 0
    5efa:	89 81       	ldd	r24, Y+1	; 0x01
    5efc:	80 83       	st	Z, r24
	}
	else
	{
		//report error
	}
}
    5efe:	0f 90       	pop	r0
    5f00:	cf 91       	pop	r28
    5f02:	df 91       	pop	r29
    5f04:	08 95       	ret

00005f06 <TIMER2_voidEnable>:


void TIMER2_voidEnable(u8 u8PreScaler)
{
    5f06:	df 93       	push	r29
    5f08:	cf 93       	push	r28
    5f0a:	0f 92       	push	r0
    5f0c:	cd b7       	in	r28, 0x3d	; 61
    5f0e:	de b7       	in	r29, 0x3e	; 62
    5f10:	89 83       	std	Y+1, r24	; 0x01
	/* Check from u8PreScaler value */
	if (u8PreScaler <= TIMER2_DIVISION_FACTOR_1024 )
    5f12:	89 81       	ldd	r24, Y+1	; 0x01
    5f14:	88 30       	cpi	r24, 0x08	; 8
    5f16:	78 f4       	brcc	.+30     	; 0x5f36 <TIMER2_voidEnable+0x30>
	{
		/* Set TIMER0 clock prescaler */
		TCCR2_REG &= TIMER_PRESCALER_MASK;
    5f18:	a5 e4       	ldi	r26, 0x45	; 69
    5f1a:	b0 e0       	ldi	r27, 0x00	; 0
    5f1c:	e5 e4       	ldi	r30, 0x45	; 69
    5f1e:	f0 e0       	ldi	r31, 0x00	; 0
    5f20:	80 81       	ld	r24, Z
    5f22:	88 7f       	andi	r24, 0xF8	; 248
    5f24:	8c 93       	st	X, r24
		TCCR2_REG |= u8PreScaler;
    5f26:	a5 e4       	ldi	r26, 0x45	; 69
    5f28:	b0 e0       	ldi	r27, 0x00	; 0
    5f2a:	e5 e4       	ldi	r30, 0x45	; 69
    5f2c:	f0 e0       	ldi	r31, 0x00	; 0
    5f2e:	90 81       	ld	r25, Z
    5f30:	89 81       	ldd	r24, Y+1	; 0x01
    5f32:	89 2b       	or	r24, r25
    5f34:	8c 93       	st	X, r24
	}
}
    5f36:	0f 90       	pop	r0
    5f38:	cf 91       	pop	r28
    5f3a:	df 91       	pop	r29
    5f3c:	08 95       	ret

00005f3e <TIMER2_voidDisable>:


void TIMER2_voidDisable()
{
    5f3e:	df 93       	push	r29
    5f40:	cf 93       	push	r28
    5f42:	cd b7       	in	r28, 0x3d	; 61
    5f44:	de b7       	in	r29, 0x3e	; 62
	TCCR2_REG &= TIMER_PRESCALER_MASK;
    5f46:	a5 e4       	ldi	r26, 0x45	; 69
    5f48:	b0 e0       	ldi	r27, 0x00	; 0
    5f4a:	e5 e4       	ldi	r30, 0x45	; 69
    5f4c:	f0 e0       	ldi	r31, 0x00	; 0
    5f4e:	80 81       	ld	r24, Z
    5f50:	88 7f       	andi	r24, 0xF8	; 248
    5f52:	8c 93       	st	X, r24
}
    5f54:	cf 91       	pop	r28
    5f56:	df 91       	pop	r29
    5f58:	08 95       	ret

00005f5a <TIMER0_u8GetTIMER2CounterVal>:


u8 TIMER0_u8GetTIMER2CounterVal()
{
    5f5a:	df 93       	push	r29
    5f5c:	cf 93       	push	r28
    5f5e:	0f 92       	push	r0
    5f60:	cd b7       	in	r28, 0x3d	; 61
    5f62:	de b7       	in	r29, 0x3e	; 62
	u8 u8ConterVal = 0;
    5f64:	19 82       	std	Y+1, r1	; 0x01

	u8ConterVal = TCNT2_REG;
    5f66:	e4 e4       	ldi	r30, 0x44	; 68
    5f68:	f0 e0       	ldi	r31, 0x00	; 0
    5f6a:	80 81       	ld	r24, Z
    5f6c:	89 83       	std	Y+1, r24	; 0x01

	return u8ConterVal;
    5f6e:	89 81       	ldd	r24, Y+1	; 0x01
}
    5f70:	0f 90       	pop	r0
    5f72:	cf 91       	pop	r28
    5f74:	df 91       	pop	r29
    5f76:	08 95       	ret

00005f78 <TIMER_voidICUInt>:
/*************************************************************************************************************************/
/********************************************ICU FUNCTIONS IMPLEMENTATION**********************************************/
/************************************************************************************************************************/

void TIMER_voidICUInt()
{
    5f78:	df 93       	push	r29
    5f7a:	cf 93       	push	r28
    5f7c:	cd b7       	in	r28, 0x3d	; 61
    5f7e:	de b7       	in	r29, 0x3e	; 62
	/* Select ICU Interrupt Edge */
	#if TIMER_ICU_EDGE == TIMER_ICU_RISING_EDGE
		SET_BIT(TCCR1B_REG , ICES1);
    5f80:	ae e4       	ldi	r26, 0x4E	; 78
    5f82:	b0 e0       	ldi	r27, 0x00	; 0
    5f84:	ee e4       	ldi	r30, 0x4E	; 78
    5f86:	f0 e0       	ldi	r31, 0x00	; 0
    5f88:	80 81       	ld	r24, Z
    5f8a:	80 64       	ori	r24, 0x40	; 64
    5f8c:	8c 93       	st	X, r24

	/* Set ICU Noise Cancellation */
	#if TIMER_ICU_NC == ENABLE
		SET_BIT(TCCR1B_REG , ICNC1);
	#elif TIMER_ICU_NC == DISABLE
		CLR_BIT(TCCR1B_REG , ICNC1);
    5f8e:	ae e4       	ldi	r26, 0x4E	; 78
    5f90:	b0 e0       	ldi	r27, 0x00	; 0
    5f92:	ee e4       	ldi	r30, 0x4E	; 78
    5f94:	f0 e0       	ldi	r31, 0x00	; 0
    5f96:	80 81       	ld	r24, Z
    5f98:	8f 77       	andi	r24, 0x7F	; 127
    5f9a:	8c 93       	st	X, r24

	/* Set ICU Interrupt */
	#if TIMER1_ICR1_INTERRUPT  == ENABLE
		SET_BIT(TIMSK_REG , TICIE1);
	#elif TIMER1_ICR1_INTERRUPT  == DISABLE
		CLR_BIT(TIMSK_REG , TICIE1);
    5f9c:	a9 e5       	ldi	r26, 0x59	; 89
    5f9e:	b0 e0       	ldi	r27, 0x00	; 0
    5fa0:	e9 e5       	ldi	r30, 0x59	; 89
    5fa2:	f0 e0       	ldi	r31, 0x00	; 0
    5fa4:	80 81       	ld	r24, Z
    5fa6:	8f 7d       	andi	r24, 0xDF	; 223
    5fa8:	8c 93       	st	X, r24
	#else
		"Wrong TIMER1_ICR1_INTERRUPT Config"
	#endif
}
    5faa:	cf 91       	pop	r28
    5fac:	df 91       	pop	r29
    5fae:	08 95       	ret

00005fb0 <TIMER_voidSetICUEdge>:


void TIMER_voidSetICUEdge(u8 u8Edge)
{
    5fb0:	df 93       	push	r29
    5fb2:	cf 93       	push	r28
    5fb4:	00 d0       	rcall	.+0      	; 0x5fb6 <TIMER_voidSetICUEdge+0x6>
    5fb6:	0f 92       	push	r0
    5fb8:	cd b7       	in	r28, 0x3d	; 61
    5fba:	de b7       	in	r29, 0x3e	; 62
    5fbc:	89 83       	std	Y+1, r24	; 0x01
	/* Check From u8Edge Value */
	if (u8Edge <= TIMER_ICU_RISING_EDGE)
    5fbe:	89 81       	ldd	r24, Y+1	; 0x01
    5fc0:	82 30       	cpi	r24, 0x02	; 2
    5fc2:	e8 f4       	brcc	.+58     	; 0x5ffe <TIMER_voidSetICUEdge+0x4e>
	{
		/* Set ICU Interrupt Edge */
		switch(u8Edge)
    5fc4:	89 81       	ldd	r24, Y+1	; 0x01
    5fc6:	28 2f       	mov	r18, r24
    5fc8:	30 e0       	ldi	r19, 0x00	; 0
    5fca:	3b 83       	std	Y+3, r19	; 0x03
    5fcc:	2a 83       	std	Y+2, r18	; 0x02
    5fce:	8a 81       	ldd	r24, Y+2	; 0x02
    5fd0:	9b 81       	ldd	r25, Y+3	; 0x03
    5fd2:	00 97       	sbiw	r24, 0x00	; 0
    5fd4:	69 f0       	breq	.+26     	; 0x5ff0 <TIMER_voidSetICUEdge+0x40>
    5fd6:	2a 81       	ldd	r18, Y+2	; 0x02
    5fd8:	3b 81       	ldd	r19, Y+3	; 0x03
    5fda:	21 30       	cpi	r18, 0x01	; 1
    5fdc:	31 05       	cpc	r19, r1
    5fde:	79 f4       	brne	.+30     	; 0x5ffe <TIMER_voidSetICUEdge+0x4e>
		{
		case TIMER_ICU_RISING_EDGE  : SET_BIT(TCCR1B_REG , ICES1); break;
    5fe0:	ae e4       	ldi	r26, 0x4E	; 78
    5fe2:	b0 e0       	ldi	r27, 0x00	; 0
    5fe4:	ee e4       	ldi	r30, 0x4E	; 78
    5fe6:	f0 e0       	ldi	r31, 0x00	; 0
    5fe8:	80 81       	ld	r24, Z
    5fea:	80 64       	ori	r24, 0x40	; 64
    5fec:	8c 93       	st	X, r24
    5fee:	07 c0       	rjmp	.+14     	; 0x5ffe <TIMER_voidSetICUEdge+0x4e>
		case TIMER_ICU_FALLING_EDGE : CLR_BIT(TCCR1B_REG , ICES1); break;
    5ff0:	ae e4       	ldi	r26, 0x4E	; 78
    5ff2:	b0 e0       	ldi	r27, 0x00	; 0
    5ff4:	ee e4       	ldi	r30, 0x4E	; 78
    5ff6:	f0 e0       	ldi	r31, 0x00	; 0
    5ff8:	80 81       	ld	r24, Z
    5ffa:	8f 7b       	andi	r24, 0xBF	; 191
    5ffc:	8c 93       	st	X, r24
	}
	else
	{
		//report error
	}
}
    5ffe:	0f 90       	pop	r0
    6000:	0f 90       	pop	r0
    6002:	0f 90       	pop	r0
    6004:	cf 91       	pop	r28
    6006:	df 91       	pop	r29
    6008:	08 95       	ret

0000600a <TIMER_voidICUEnable>:


void TIMER_voidICUEnable()
{
    600a:	df 93       	push	r29
    600c:	cf 93       	push	r28
    600e:	cd b7       	in	r28, 0x3d	; 61
    6010:	de b7       	in	r29, 0x3e	; 62
	/* Set ICU Interrupt Enable */
	SET_BIT(TIMSK_REG , TICIE1);
    6012:	a9 e5       	ldi	r26, 0x59	; 89
    6014:	b0 e0       	ldi	r27, 0x00	; 0
    6016:	e9 e5       	ldi	r30, 0x59	; 89
    6018:	f0 e0       	ldi	r31, 0x00	; 0
    601a:	80 81       	ld	r24, Z
    601c:	80 62       	ori	r24, 0x20	; 32
    601e:	8c 93       	st	X, r24
}
    6020:	cf 91       	pop	r28
    6022:	df 91       	pop	r29
    6024:	08 95       	ret

00006026 <TIMER_voidICUDisable>:


void TIMER_voidICUDisable()
{
    6026:	df 93       	push	r29
    6028:	cf 93       	push	r28
    602a:	cd b7       	in	r28, 0x3d	; 61
    602c:	de b7       	in	r29, 0x3e	; 62
	/* Set ICU Interrupt Disable */
	CLR_BIT(TIMSK_REG , TICIE1);
    602e:	a9 e5       	ldi	r26, 0x59	; 89
    6030:	b0 e0       	ldi	r27, 0x00	; 0
    6032:	e9 e5       	ldi	r30, 0x59	; 89
    6034:	f0 e0       	ldi	r31, 0x00	; 0
    6036:	80 81       	ld	r24, Z
    6038:	8f 7d       	andi	r24, 0xDF	; 223
    603a:	8c 93       	st	X, r24
}
    603c:	cf 91       	pop	r28
    603e:	df 91       	pop	r29
    6040:	08 95       	ret

00006042 <TIMER_u16GetICUVal>:


u16  TIMER_u16GetICUVal()
{
    6042:	df 93       	push	r29
    6044:	cf 93       	push	r28
    6046:	cd b7       	in	r28, 0x3d	; 61
    6048:	de b7       	in	r29, 0x3e	; 62
	return ICR1_REG;
    604a:	e6 e4       	ldi	r30, 0x46	; 70
    604c:	f0 e0       	ldi	r31, 0x00	; 0
    604e:	80 81       	ld	r24, Z
    6050:	91 81       	ldd	r25, Z+1	; 0x01
}
    6052:	cf 91       	pop	r28
    6054:	df 91       	pop	r29
    6056:	08 95       	ret

00006058 <TIMER_voidWDTInt>:
/*************************************************************************************************************************/
/********************************************WDT FUNCTIONS IMPLEMENTATION**********************************************/
/************************************************************************************************************************/

void TIMER_voidWDTInt()
{
    6058:	df 93       	push	r29
    605a:	cf 93       	push	r28
    605c:	cd b7       	in	r28, 0x3d	; 61
    605e:	de b7       	in	r29, 0x3e	; 62
	/* Set WDT Enable */
	SET_BIT(WDTCR_REG , WDE);
    6060:	a1 e4       	ldi	r26, 0x41	; 65
    6062:	b0 e0       	ldi	r27, 0x00	; 0
    6064:	e1 e4       	ldi	r30, 0x41	; 65
    6066:	f0 e0       	ldi	r31, 0x00	; 0
    6068:	80 81       	ld	r24, Z
    606a:	88 60       	ori	r24, 0x08	; 8
    606c:	8c 93       	st	X, r24

	/* Set WDT Prescaler */
	WDTCR_REG &= TIMER_WDT_PRESALE_MASK;
    606e:	a1 e4       	ldi	r26, 0x41	; 65
    6070:	b0 e0       	ldi	r27, 0x00	; 0
    6072:	e1 e4       	ldi	r30, 0x41	; 65
    6074:	f0 e0       	ldi	r31, 0x00	; 0
    6076:	80 81       	ld	r24, Z
    6078:	88 7f       	andi	r24, 0xF8	; 248
    607a:	8c 93       	st	X, r24
	WDTCR_REG |= TIMER_WDT_PRESCALE;
    607c:	a1 e4       	ldi	r26, 0x41	; 65
    607e:	b0 e0       	ldi	r27, 0x00	; 0
    6080:	e1 e4       	ldi	r30, 0x41	; 65
    6082:	f0 e0       	ldi	r31, 0x00	; 0
    6084:	80 81       	ld	r24, Z
    6086:	8c 93       	st	X, r24
}
    6088:	cf 91       	pop	r28
    608a:	df 91       	pop	r29
    608c:	08 95       	ret

0000608e <TIMER_voidSetWDTPrescale>:


void TIMER_voidSetWDTPrescale(u8 u8SleepTime)
{
    608e:	df 93       	push	r29
    6090:	cf 93       	push	r28
    6092:	0f 92       	push	r0
    6094:	cd b7       	in	r28, 0x3d	; 61
    6096:	de b7       	in	r29, 0x3e	; 62
    6098:	89 83       	std	Y+1, r24	; 0x01
	/* Set WDT Prescaler */
	WDTCR_REG &= TIMER_WDT_PRESALE_MASK;
    609a:	a1 e4       	ldi	r26, 0x41	; 65
    609c:	b0 e0       	ldi	r27, 0x00	; 0
    609e:	e1 e4       	ldi	r30, 0x41	; 65
    60a0:	f0 e0       	ldi	r31, 0x00	; 0
    60a2:	80 81       	ld	r24, Z
    60a4:	88 7f       	andi	r24, 0xF8	; 248
    60a6:	8c 93       	st	X, r24
	WDTCR_REG |= TIMER_WDT_PRESCALE;
    60a8:	a1 e4       	ldi	r26, 0x41	; 65
    60aa:	b0 e0       	ldi	r27, 0x00	; 0
    60ac:	e1 e4       	ldi	r30, 0x41	; 65
    60ae:	f0 e0       	ldi	r31, 0x00	; 0
    60b0:	80 81       	ld	r24, Z
    60b2:	8c 93       	st	X, r24
}
    60b4:	0f 90       	pop	r0
    60b6:	cf 91       	pop	r28
    60b8:	df 91       	pop	r29
    60ba:	08 95       	ret

000060bc <TIMER_voidWDTDisable>:


void TIMER_voidWDTDisable()
{
    60bc:	df 93       	push	r29
    60be:	cf 93       	push	r28
    60c0:	cd b7       	in	r28, 0x3d	; 61
    60c2:	de b7       	in	r29, 0x3e	; 62
	/* Clear BIT 3 and 4 in the same Time */
	WDTCR_REG |= TIMER_WDT_DISABLE_MASK;
    60c4:	a1 e4       	ldi	r26, 0x41	; 65
    60c6:	b0 e0       	ldi	r27, 0x00	; 0
    60c8:	e1 e4       	ldi	r30, 0x41	; 65
    60ca:	f0 e0       	ldi	r31, 0x00	; 0
    60cc:	80 81       	ld	r24, Z
    60ce:	88 61       	ori	r24, 0x18	; 24
    60d0:	8c 93       	st	X, r24

	/* Clear WDTCR_REG */
	CLR_REG(WDTCR_REG);
    60d2:	e1 e4       	ldi	r30, 0x41	; 65
    60d4:	f0 e0       	ldi	r31, 0x00	; 0
    60d6:	10 82       	st	Z, r1
}
    60d8:	cf 91       	pop	r28
    60da:	df 91       	pop	r29
    60dc:	08 95       	ret

000060de <TIMER_voidCallBack>:
/*************************************************************************************************************************/
/********************************************TIMER CALL BACK FUNCTION IMPLEMENTATION**************************************/
/************************************************************************************************************************/

void TIMER_voidCallBack(void (*pvoidCallback)(void) , u8 u8TimerVactorId)
{
    60de:	df 93       	push	r29
    60e0:	cf 93       	push	r28
    60e2:	00 d0       	rcall	.+0      	; 0x60e4 <TIMER_voidCallBack+0x6>
    60e4:	0f 92       	push	r0
    60e6:	cd b7       	in	r28, 0x3d	; 61
    60e8:	de b7       	in	r29, 0x3e	; 62
    60ea:	9a 83       	std	Y+2, r25	; 0x02
    60ec:	89 83       	std	Y+1, r24	; 0x01
    60ee:	6b 83       	std	Y+3, r22	; 0x03
	/* Check From pvoidCallback and u8TimerVactorId values */
	if ((pvoidCallback != NULL) && (u8TimerVactorId <= TIMER2_CTC_VECTOR))
    60f0:	89 81       	ldd	r24, Y+1	; 0x01
    60f2:	9a 81       	ldd	r25, Y+2	; 0x02
    60f4:	00 97       	sbiw	r24, 0x00	; 0
    60f6:	79 f0       	breq	.+30     	; 0x6116 <TIMER_voidCallBack+0x38>
    60f8:	8b 81       	ldd	r24, Y+3	; 0x03
    60fa:	88 30       	cpi	r24, 0x08	; 8
    60fc:	60 f4       	brcc	.+24     	; 0x6116 <TIMER_voidCallBack+0x38>
	{
		TIMER_apvCallBackFunc[u8TimerVactorId] = pvoidCallback ;
    60fe:	8b 81       	ldd	r24, Y+3	; 0x03
    6100:	88 2f       	mov	r24, r24
    6102:	90 e0       	ldi	r25, 0x00	; 0
    6104:	88 0f       	add	r24, r24
    6106:	99 1f       	adc	r25, r25
    6108:	fc 01       	movw	r30, r24
    610a:	e0 56       	subi	r30, 0x60	; 96
    610c:	fe 4f       	sbci	r31, 0xFE	; 254
    610e:	89 81       	ldd	r24, Y+1	; 0x01
    6110:	9a 81       	ldd	r25, Y+2	; 0x02
    6112:	91 83       	std	Z+1, r25	; 0x01
    6114:	80 83       	st	Z, r24
	}
	else
	{
		//report error
	}
}
    6116:	0f 90       	pop	r0
    6118:	0f 90       	pop	r0
    611a:	0f 90       	pop	r0
    611c:	cf 91       	pop	r28
    611e:	df 91       	pop	r29
    6120:	08 95       	ret

00006122 <__vector_4>:
/************************************************************************************************************************/

/* TIMER2 COMPARE MATCH (CTC MODE) ISR */
void __vector_4(void) __attribute__((signal));
void __vector_4(void)
{
    6122:	1f 92       	push	r1
    6124:	0f 92       	push	r0
    6126:	0f b6       	in	r0, 0x3f	; 63
    6128:	0f 92       	push	r0
    612a:	11 24       	eor	r1, r1
    612c:	2f 93       	push	r18
    612e:	3f 93       	push	r19
    6130:	4f 93       	push	r20
    6132:	5f 93       	push	r21
    6134:	6f 93       	push	r22
    6136:	7f 93       	push	r23
    6138:	8f 93       	push	r24
    613a:	9f 93       	push	r25
    613c:	af 93       	push	r26
    613e:	bf 93       	push	r27
    6140:	ef 93       	push	r30
    6142:	ff 93       	push	r31
    6144:	df 93       	push	r29
    6146:	cf 93       	push	r28
    6148:	cd b7       	in	r28, 0x3d	; 61
    614a:	de b7       	in	r29, 0x3e	; 62
	if (TIMER_apvCallBackFunc[TIMER2_CTC_VECTOR] != NULL)
    614c:	80 91 ae 01 	lds	r24, 0x01AE
    6150:	90 91 af 01 	lds	r25, 0x01AF
    6154:	00 97       	sbiw	r24, 0x00	; 0
    6156:	29 f0       	breq	.+10     	; 0x6162 <__vector_4+0x40>
	{
		TIMER_apvCallBackFunc[TIMER2_CTC_VECTOR]();
    6158:	e0 91 ae 01 	lds	r30, 0x01AE
    615c:	f0 91 af 01 	lds	r31, 0x01AF
    6160:	09 95       	icall
	}
	else
	{
		//report error
	}
}
    6162:	cf 91       	pop	r28
    6164:	df 91       	pop	r29
    6166:	ff 91       	pop	r31
    6168:	ef 91       	pop	r30
    616a:	bf 91       	pop	r27
    616c:	af 91       	pop	r26
    616e:	9f 91       	pop	r25
    6170:	8f 91       	pop	r24
    6172:	7f 91       	pop	r23
    6174:	6f 91       	pop	r22
    6176:	5f 91       	pop	r21
    6178:	4f 91       	pop	r20
    617a:	3f 91       	pop	r19
    617c:	2f 91       	pop	r18
    617e:	0f 90       	pop	r0
    6180:	0f be       	out	0x3f, r0	; 63
    6182:	0f 90       	pop	r0
    6184:	1f 90       	pop	r1
    6186:	18 95       	reti

00006188 <__vector_5>:


/* TIMER2 OVERFLOW(NORMAL MODE) ISR */
void __vector_5(void) __attribute__((signal));
void __vector_5(void)
{
    6188:	1f 92       	push	r1
    618a:	0f 92       	push	r0
    618c:	0f b6       	in	r0, 0x3f	; 63
    618e:	0f 92       	push	r0
    6190:	11 24       	eor	r1, r1
    6192:	2f 93       	push	r18
    6194:	3f 93       	push	r19
    6196:	4f 93       	push	r20
    6198:	5f 93       	push	r21
    619a:	6f 93       	push	r22
    619c:	7f 93       	push	r23
    619e:	8f 93       	push	r24
    61a0:	9f 93       	push	r25
    61a2:	af 93       	push	r26
    61a4:	bf 93       	push	r27
    61a6:	ef 93       	push	r30
    61a8:	ff 93       	push	r31
    61aa:	df 93       	push	r29
    61ac:	cf 93       	push	r28
    61ae:	cd b7       	in	r28, 0x3d	; 61
    61b0:	de b7       	in	r29, 0x3e	; 62
	if (TIMER_apvCallBackFunc[TIMER2_OVF_VECTOR] != NULL)
    61b2:	80 91 ac 01 	lds	r24, 0x01AC
    61b6:	90 91 ad 01 	lds	r25, 0x01AD
    61ba:	00 97       	sbiw	r24, 0x00	; 0
    61bc:	29 f0       	breq	.+10     	; 0x61c8 <__vector_5+0x40>
	{
		TIMER_apvCallBackFunc[TIMER2_OVF_VECTOR]();
    61be:	e0 91 ac 01 	lds	r30, 0x01AC
    61c2:	f0 91 ad 01 	lds	r31, 0x01AD
    61c6:	09 95       	icall
	}
	else
	{
		//report error
	}
}
    61c8:	cf 91       	pop	r28
    61ca:	df 91       	pop	r29
    61cc:	ff 91       	pop	r31
    61ce:	ef 91       	pop	r30
    61d0:	bf 91       	pop	r27
    61d2:	af 91       	pop	r26
    61d4:	9f 91       	pop	r25
    61d6:	8f 91       	pop	r24
    61d8:	7f 91       	pop	r23
    61da:	6f 91       	pop	r22
    61dc:	5f 91       	pop	r21
    61de:	4f 91       	pop	r20
    61e0:	3f 91       	pop	r19
    61e2:	2f 91       	pop	r18
    61e4:	0f 90       	pop	r0
    61e6:	0f be       	out	0x3f, r0	; 63
    61e8:	0f 90       	pop	r0
    61ea:	1f 90       	pop	r1
    61ec:	18 95       	reti

000061ee <__vector_6>:

/* TIMER1 INPUT CAPTURE UNIT ISR */
void __vector_6(void) __attribute__((signal));
void __vector_6(void)
{
    61ee:	1f 92       	push	r1
    61f0:	0f 92       	push	r0
    61f2:	0f b6       	in	r0, 0x3f	; 63
    61f4:	0f 92       	push	r0
    61f6:	11 24       	eor	r1, r1
    61f8:	2f 93       	push	r18
    61fa:	3f 93       	push	r19
    61fc:	4f 93       	push	r20
    61fe:	5f 93       	push	r21
    6200:	6f 93       	push	r22
    6202:	7f 93       	push	r23
    6204:	8f 93       	push	r24
    6206:	9f 93       	push	r25
    6208:	af 93       	push	r26
    620a:	bf 93       	push	r27
    620c:	ef 93       	push	r30
    620e:	ff 93       	push	r31
    6210:	df 93       	push	r29
    6212:	cf 93       	push	r28
    6214:	cd b7       	in	r28, 0x3d	; 61
    6216:	de b7       	in	r29, 0x3e	; 62
	if (TIMER_apvCallBackFunc[TIMER1_ICU_VECTOR] != NULL)
    6218:	80 91 aa 01 	lds	r24, 0x01AA
    621c:	90 91 ab 01 	lds	r25, 0x01AB
    6220:	00 97       	sbiw	r24, 0x00	; 0
    6222:	29 f0       	breq	.+10     	; 0x622e <__vector_6+0x40>
	{
		TIMER_apvCallBackFunc[TIMER1_ICU_VECTOR]();
    6224:	e0 91 aa 01 	lds	r30, 0x01AA
    6228:	f0 91 ab 01 	lds	r31, 0x01AB
    622c:	09 95       	icall
	}
	else
	{
		//report error
	}
}
    622e:	cf 91       	pop	r28
    6230:	df 91       	pop	r29
    6232:	ff 91       	pop	r31
    6234:	ef 91       	pop	r30
    6236:	bf 91       	pop	r27
    6238:	af 91       	pop	r26
    623a:	9f 91       	pop	r25
    623c:	8f 91       	pop	r24
    623e:	7f 91       	pop	r23
    6240:	6f 91       	pop	r22
    6242:	5f 91       	pop	r21
    6244:	4f 91       	pop	r20
    6246:	3f 91       	pop	r19
    6248:	2f 91       	pop	r18
    624a:	0f 90       	pop	r0
    624c:	0f be       	out	0x3f, r0	; 63
    624e:	0f 90       	pop	r0
    6250:	1f 90       	pop	r1
    6252:	18 95       	reti

00006254 <__vector_7>:

/* TIMER1 COMPARE MATCH CHANNEL A (CTCA MODE) ISR */
void __vector_7(void) __attribute__((signal));
void __vector_7(void)
{
    6254:	1f 92       	push	r1
    6256:	0f 92       	push	r0
    6258:	0f b6       	in	r0, 0x3f	; 63
    625a:	0f 92       	push	r0
    625c:	11 24       	eor	r1, r1
    625e:	2f 93       	push	r18
    6260:	3f 93       	push	r19
    6262:	4f 93       	push	r20
    6264:	5f 93       	push	r21
    6266:	6f 93       	push	r22
    6268:	7f 93       	push	r23
    626a:	8f 93       	push	r24
    626c:	9f 93       	push	r25
    626e:	af 93       	push	r26
    6270:	bf 93       	push	r27
    6272:	ef 93       	push	r30
    6274:	ff 93       	push	r31
    6276:	df 93       	push	r29
    6278:	cf 93       	push	r28
    627a:	cd b7       	in	r28, 0x3d	; 61
    627c:	de b7       	in	r29, 0x3e	; 62
	if (TIMER_apvCallBackFunc[TIMER1_CTCA_VECTOR] != NULL)
    627e:	80 91 a6 01 	lds	r24, 0x01A6
    6282:	90 91 a7 01 	lds	r25, 0x01A7
    6286:	00 97       	sbiw	r24, 0x00	; 0
    6288:	29 f0       	breq	.+10     	; 0x6294 <__vector_7+0x40>
	{
		TIMER_apvCallBackFunc[TIMER1_CTCA_VECTOR]();
    628a:	e0 91 a6 01 	lds	r30, 0x01A6
    628e:	f0 91 a7 01 	lds	r31, 0x01A7
    6292:	09 95       	icall
	}
	else
	{
		//report error
	}
}
    6294:	cf 91       	pop	r28
    6296:	df 91       	pop	r29
    6298:	ff 91       	pop	r31
    629a:	ef 91       	pop	r30
    629c:	bf 91       	pop	r27
    629e:	af 91       	pop	r26
    62a0:	9f 91       	pop	r25
    62a2:	8f 91       	pop	r24
    62a4:	7f 91       	pop	r23
    62a6:	6f 91       	pop	r22
    62a8:	5f 91       	pop	r21
    62aa:	4f 91       	pop	r20
    62ac:	3f 91       	pop	r19
    62ae:	2f 91       	pop	r18
    62b0:	0f 90       	pop	r0
    62b2:	0f be       	out	0x3f, r0	; 63
    62b4:	0f 90       	pop	r0
    62b6:	1f 90       	pop	r1
    62b8:	18 95       	reti

000062ba <__vector_8>:

/* TIMER1 COMPARE MATCH CHANNEL B (CTCB MODE) ISR */
void __vector_8(void) __attribute__((signal));
void __vector_8(void)
{
    62ba:	1f 92       	push	r1
    62bc:	0f 92       	push	r0
    62be:	0f b6       	in	r0, 0x3f	; 63
    62c0:	0f 92       	push	r0
    62c2:	11 24       	eor	r1, r1
    62c4:	2f 93       	push	r18
    62c6:	3f 93       	push	r19
    62c8:	4f 93       	push	r20
    62ca:	5f 93       	push	r21
    62cc:	6f 93       	push	r22
    62ce:	7f 93       	push	r23
    62d0:	8f 93       	push	r24
    62d2:	9f 93       	push	r25
    62d4:	af 93       	push	r26
    62d6:	bf 93       	push	r27
    62d8:	ef 93       	push	r30
    62da:	ff 93       	push	r31
    62dc:	df 93       	push	r29
    62de:	cf 93       	push	r28
    62e0:	cd b7       	in	r28, 0x3d	; 61
    62e2:	de b7       	in	r29, 0x3e	; 62
	if (TIMER_apvCallBackFunc[TIMER1_CTCB_VECTOR] != NULL)
    62e4:	80 91 a8 01 	lds	r24, 0x01A8
    62e8:	90 91 a9 01 	lds	r25, 0x01A9
    62ec:	00 97       	sbiw	r24, 0x00	; 0
    62ee:	29 f0       	breq	.+10     	; 0x62fa <__vector_8+0x40>
	{
		TIMER_apvCallBackFunc[TIMER1_CTCB_VECTOR]();
    62f0:	e0 91 a8 01 	lds	r30, 0x01A8
    62f4:	f0 91 a9 01 	lds	r31, 0x01A9
    62f8:	09 95       	icall
	}
	else
	{
		//report error
	}
}
    62fa:	cf 91       	pop	r28
    62fc:	df 91       	pop	r29
    62fe:	ff 91       	pop	r31
    6300:	ef 91       	pop	r30
    6302:	bf 91       	pop	r27
    6304:	af 91       	pop	r26
    6306:	9f 91       	pop	r25
    6308:	8f 91       	pop	r24
    630a:	7f 91       	pop	r23
    630c:	6f 91       	pop	r22
    630e:	5f 91       	pop	r21
    6310:	4f 91       	pop	r20
    6312:	3f 91       	pop	r19
    6314:	2f 91       	pop	r18
    6316:	0f 90       	pop	r0
    6318:	0f be       	out	0x3f, r0	; 63
    631a:	0f 90       	pop	r0
    631c:	1f 90       	pop	r1
    631e:	18 95       	reti

00006320 <__vector_9>:

/* TIMER1 OVERFLOW (NORMAL MODE) ISR */
void __vector_9(void) __attribute__((signal));
void __vector_9(void)
{
    6320:	1f 92       	push	r1
    6322:	0f 92       	push	r0
    6324:	0f b6       	in	r0, 0x3f	; 63
    6326:	0f 92       	push	r0
    6328:	11 24       	eor	r1, r1
    632a:	2f 93       	push	r18
    632c:	3f 93       	push	r19
    632e:	4f 93       	push	r20
    6330:	5f 93       	push	r21
    6332:	6f 93       	push	r22
    6334:	7f 93       	push	r23
    6336:	8f 93       	push	r24
    6338:	9f 93       	push	r25
    633a:	af 93       	push	r26
    633c:	bf 93       	push	r27
    633e:	ef 93       	push	r30
    6340:	ff 93       	push	r31
    6342:	df 93       	push	r29
    6344:	cf 93       	push	r28
    6346:	cd b7       	in	r28, 0x3d	; 61
    6348:	de b7       	in	r29, 0x3e	; 62
	if (TIMER_apvCallBackFunc[TIMER1_OVF_VECTOR] != NULL)
    634a:	80 91 a4 01 	lds	r24, 0x01A4
    634e:	90 91 a5 01 	lds	r25, 0x01A5
    6352:	00 97       	sbiw	r24, 0x00	; 0
    6354:	29 f0       	breq	.+10     	; 0x6360 <__vector_9+0x40>
	{
		TIMER_apvCallBackFunc[TIMER1_OVF_VECTOR]();
    6356:	e0 91 a4 01 	lds	r30, 0x01A4
    635a:	f0 91 a5 01 	lds	r31, 0x01A5
    635e:	09 95       	icall
	}
	else
	{
		//report error
	}
}
    6360:	cf 91       	pop	r28
    6362:	df 91       	pop	r29
    6364:	ff 91       	pop	r31
    6366:	ef 91       	pop	r30
    6368:	bf 91       	pop	r27
    636a:	af 91       	pop	r26
    636c:	9f 91       	pop	r25
    636e:	8f 91       	pop	r24
    6370:	7f 91       	pop	r23
    6372:	6f 91       	pop	r22
    6374:	5f 91       	pop	r21
    6376:	4f 91       	pop	r20
    6378:	3f 91       	pop	r19
    637a:	2f 91       	pop	r18
    637c:	0f 90       	pop	r0
    637e:	0f be       	out	0x3f, r0	; 63
    6380:	0f 90       	pop	r0
    6382:	1f 90       	pop	r1
    6384:	18 95       	reti

00006386 <__vector_10>:

/* TIMER0 COMPARE MATCH (CTC MODE) ISR */
void __vector_10(void) __attribute__((signal));
void __vector_10(void)
{
    6386:	1f 92       	push	r1
    6388:	0f 92       	push	r0
    638a:	0f b6       	in	r0, 0x3f	; 63
    638c:	0f 92       	push	r0
    638e:	11 24       	eor	r1, r1
    6390:	2f 93       	push	r18
    6392:	3f 93       	push	r19
    6394:	4f 93       	push	r20
    6396:	5f 93       	push	r21
    6398:	6f 93       	push	r22
    639a:	7f 93       	push	r23
    639c:	8f 93       	push	r24
    639e:	9f 93       	push	r25
    63a0:	af 93       	push	r26
    63a2:	bf 93       	push	r27
    63a4:	ef 93       	push	r30
    63a6:	ff 93       	push	r31
    63a8:	df 93       	push	r29
    63aa:	cf 93       	push	r28
    63ac:	cd b7       	in	r28, 0x3d	; 61
    63ae:	de b7       	in	r29, 0x3e	; 62
	if (TIMER_apvCallBackFunc[TIMER0_CTC_VECTOR] != NULL)
    63b0:	80 91 a2 01 	lds	r24, 0x01A2
    63b4:	90 91 a3 01 	lds	r25, 0x01A3
    63b8:	00 97       	sbiw	r24, 0x00	; 0
    63ba:	29 f0       	breq	.+10     	; 0x63c6 <__vector_10+0x40>
	{
		TIMER_apvCallBackFunc[TIMER0_CTC_VECTOR]();
    63bc:	e0 91 a2 01 	lds	r30, 0x01A2
    63c0:	f0 91 a3 01 	lds	r31, 0x01A3
    63c4:	09 95       	icall
	}
	else
	{
		//report error
	}
}
    63c6:	cf 91       	pop	r28
    63c8:	df 91       	pop	r29
    63ca:	ff 91       	pop	r31
    63cc:	ef 91       	pop	r30
    63ce:	bf 91       	pop	r27
    63d0:	af 91       	pop	r26
    63d2:	9f 91       	pop	r25
    63d4:	8f 91       	pop	r24
    63d6:	7f 91       	pop	r23
    63d8:	6f 91       	pop	r22
    63da:	5f 91       	pop	r21
    63dc:	4f 91       	pop	r20
    63de:	3f 91       	pop	r19
    63e0:	2f 91       	pop	r18
    63e2:	0f 90       	pop	r0
    63e4:	0f be       	out	0x3f, r0	; 63
    63e6:	0f 90       	pop	r0
    63e8:	1f 90       	pop	r1
    63ea:	18 95       	reti

000063ec <__vector_11>:

/* TIMER0 OVERFLOW(NORMAL MODE) ISR */
void __vector_11(void) __attribute__((signal));
void __vector_11(void)
{
    63ec:	1f 92       	push	r1
    63ee:	0f 92       	push	r0
    63f0:	0f b6       	in	r0, 0x3f	; 63
    63f2:	0f 92       	push	r0
    63f4:	11 24       	eor	r1, r1
    63f6:	2f 93       	push	r18
    63f8:	3f 93       	push	r19
    63fa:	4f 93       	push	r20
    63fc:	5f 93       	push	r21
    63fe:	6f 93       	push	r22
    6400:	7f 93       	push	r23
    6402:	8f 93       	push	r24
    6404:	9f 93       	push	r25
    6406:	af 93       	push	r26
    6408:	bf 93       	push	r27
    640a:	ef 93       	push	r30
    640c:	ff 93       	push	r31
    640e:	df 93       	push	r29
    6410:	cf 93       	push	r28
    6412:	cd b7       	in	r28, 0x3d	; 61
    6414:	de b7       	in	r29, 0x3e	; 62
	if (TIMER_apvCallBackFunc[TIMER0_OVF_VECTOR] != NULL)
    6416:	80 91 a0 01 	lds	r24, 0x01A0
    641a:	90 91 a1 01 	lds	r25, 0x01A1
    641e:	00 97       	sbiw	r24, 0x00	; 0
    6420:	29 f0       	breq	.+10     	; 0x642c <__vector_11+0x40>
	{
		TIMER_apvCallBackFunc[TIMER0_OVF_VECTOR]();
    6422:	e0 91 a0 01 	lds	r30, 0x01A0
    6426:	f0 91 a1 01 	lds	r31, 0x01A1
    642a:	09 95       	icall
	}
	else
	{
		//report error
	}
}
    642c:	cf 91       	pop	r28
    642e:	df 91       	pop	r29
    6430:	ff 91       	pop	r31
    6432:	ef 91       	pop	r30
    6434:	bf 91       	pop	r27
    6436:	af 91       	pop	r26
    6438:	9f 91       	pop	r25
    643a:	8f 91       	pop	r24
    643c:	7f 91       	pop	r23
    643e:	6f 91       	pop	r22
    6440:	5f 91       	pop	r21
    6442:	4f 91       	pop	r20
    6444:	3f 91       	pop	r19
    6446:	2f 91       	pop	r18
    6448:	0f 90       	pop	r0
    644a:	0f be       	out	0x3f, r0	; 63
    644c:	0f 90       	pop	r0
    644e:	1f 90       	pop	r1
    6450:	18 95       	reti

00006452 <__mulsi3>:
    6452:	62 9f       	mul	r22, r18
    6454:	d0 01       	movw	r26, r0
    6456:	73 9f       	mul	r23, r19
    6458:	f0 01       	movw	r30, r0
    645a:	82 9f       	mul	r24, r18
    645c:	e0 0d       	add	r30, r0
    645e:	f1 1d       	adc	r31, r1
    6460:	64 9f       	mul	r22, r20
    6462:	e0 0d       	add	r30, r0
    6464:	f1 1d       	adc	r31, r1
    6466:	92 9f       	mul	r25, r18
    6468:	f0 0d       	add	r31, r0
    646a:	83 9f       	mul	r24, r19
    646c:	f0 0d       	add	r31, r0
    646e:	74 9f       	mul	r23, r20
    6470:	f0 0d       	add	r31, r0
    6472:	65 9f       	mul	r22, r21
    6474:	f0 0d       	add	r31, r0
    6476:	99 27       	eor	r25, r25
    6478:	72 9f       	mul	r23, r18
    647a:	b0 0d       	add	r27, r0
    647c:	e1 1d       	adc	r30, r1
    647e:	f9 1f       	adc	r31, r25
    6480:	63 9f       	mul	r22, r19
    6482:	b0 0d       	add	r27, r0
    6484:	e1 1d       	adc	r30, r1
    6486:	f9 1f       	adc	r31, r25
    6488:	bd 01       	movw	r22, r26
    648a:	cf 01       	movw	r24, r30
    648c:	11 24       	eor	r1, r1
    648e:	08 95       	ret

00006490 <__udivmodhi4>:
    6490:	aa 1b       	sub	r26, r26
    6492:	bb 1b       	sub	r27, r27
    6494:	51 e1       	ldi	r21, 0x11	; 17
    6496:	07 c0       	rjmp	.+14     	; 0x64a6 <__udivmodhi4_ep>

00006498 <__udivmodhi4_loop>:
    6498:	aa 1f       	adc	r26, r26
    649a:	bb 1f       	adc	r27, r27
    649c:	a6 17       	cp	r26, r22
    649e:	b7 07       	cpc	r27, r23
    64a0:	10 f0       	brcs	.+4      	; 0x64a6 <__udivmodhi4_ep>
    64a2:	a6 1b       	sub	r26, r22
    64a4:	b7 0b       	sbc	r27, r23

000064a6 <__udivmodhi4_ep>:
    64a6:	88 1f       	adc	r24, r24
    64a8:	99 1f       	adc	r25, r25
    64aa:	5a 95       	dec	r21
    64ac:	a9 f7       	brne	.-22     	; 0x6498 <__udivmodhi4_loop>
    64ae:	80 95       	com	r24
    64b0:	90 95       	com	r25
    64b2:	bc 01       	movw	r22, r24
    64b4:	cd 01       	movw	r24, r26
    64b6:	08 95       	ret

000064b8 <__udivmodsi4>:
    64b8:	a1 e2       	ldi	r26, 0x21	; 33
    64ba:	1a 2e       	mov	r1, r26
    64bc:	aa 1b       	sub	r26, r26
    64be:	bb 1b       	sub	r27, r27
    64c0:	fd 01       	movw	r30, r26
    64c2:	0d c0       	rjmp	.+26     	; 0x64de <__udivmodsi4_ep>

000064c4 <__udivmodsi4_loop>:
    64c4:	aa 1f       	adc	r26, r26
    64c6:	bb 1f       	adc	r27, r27
    64c8:	ee 1f       	adc	r30, r30
    64ca:	ff 1f       	adc	r31, r31
    64cc:	a2 17       	cp	r26, r18
    64ce:	b3 07       	cpc	r27, r19
    64d0:	e4 07       	cpc	r30, r20
    64d2:	f5 07       	cpc	r31, r21
    64d4:	20 f0       	brcs	.+8      	; 0x64de <__udivmodsi4_ep>
    64d6:	a2 1b       	sub	r26, r18
    64d8:	b3 0b       	sbc	r27, r19
    64da:	e4 0b       	sbc	r30, r20
    64dc:	f5 0b       	sbc	r31, r21

000064de <__udivmodsi4_ep>:
    64de:	66 1f       	adc	r22, r22
    64e0:	77 1f       	adc	r23, r23
    64e2:	88 1f       	adc	r24, r24
    64e4:	99 1f       	adc	r25, r25
    64e6:	1a 94       	dec	r1
    64e8:	69 f7       	brne	.-38     	; 0x64c4 <__udivmodsi4_loop>
    64ea:	60 95       	com	r22
    64ec:	70 95       	com	r23
    64ee:	80 95       	com	r24
    64f0:	90 95       	com	r25
    64f2:	9b 01       	movw	r18, r22
    64f4:	ac 01       	movw	r20, r24
    64f6:	bd 01       	movw	r22, r26
    64f8:	cf 01       	movw	r24, r30
    64fa:	08 95       	ret

000064fc <__prologue_saves__>:
    64fc:	2f 92       	push	r2
    64fe:	3f 92       	push	r3
    6500:	4f 92       	push	r4
    6502:	5f 92       	push	r5
    6504:	6f 92       	push	r6
    6506:	7f 92       	push	r7
    6508:	8f 92       	push	r8
    650a:	9f 92       	push	r9
    650c:	af 92       	push	r10
    650e:	bf 92       	push	r11
    6510:	cf 92       	push	r12
    6512:	df 92       	push	r13
    6514:	ef 92       	push	r14
    6516:	ff 92       	push	r15
    6518:	0f 93       	push	r16
    651a:	1f 93       	push	r17
    651c:	cf 93       	push	r28
    651e:	df 93       	push	r29
    6520:	cd b7       	in	r28, 0x3d	; 61
    6522:	de b7       	in	r29, 0x3e	; 62
    6524:	ca 1b       	sub	r28, r26
    6526:	db 0b       	sbc	r29, r27
    6528:	0f b6       	in	r0, 0x3f	; 63
    652a:	f8 94       	cli
    652c:	de bf       	out	0x3e, r29	; 62
    652e:	0f be       	out	0x3f, r0	; 63
    6530:	cd bf       	out	0x3d, r28	; 61
    6532:	09 94       	ijmp

00006534 <__epilogue_restores__>:
    6534:	2a 88       	ldd	r2, Y+18	; 0x12
    6536:	39 88       	ldd	r3, Y+17	; 0x11
    6538:	48 88       	ldd	r4, Y+16	; 0x10
    653a:	5f 84       	ldd	r5, Y+15	; 0x0f
    653c:	6e 84       	ldd	r6, Y+14	; 0x0e
    653e:	7d 84       	ldd	r7, Y+13	; 0x0d
    6540:	8c 84       	ldd	r8, Y+12	; 0x0c
    6542:	9b 84       	ldd	r9, Y+11	; 0x0b
    6544:	aa 84       	ldd	r10, Y+10	; 0x0a
    6546:	b9 84       	ldd	r11, Y+9	; 0x09
    6548:	c8 84       	ldd	r12, Y+8	; 0x08
    654a:	df 80       	ldd	r13, Y+7	; 0x07
    654c:	ee 80       	ldd	r14, Y+6	; 0x06
    654e:	fd 80       	ldd	r15, Y+5	; 0x05
    6550:	0c 81       	ldd	r16, Y+4	; 0x04
    6552:	1b 81       	ldd	r17, Y+3	; 0x03
    6554:	aa 81       	ldd	r26, Y+2	; 0x02
    6556:	b9 81       	ldd	r27, Y+1	; 0x01
    6558:	ce 0f       	add	r28, r30
    655a:	d1 1d       	adc	r29, r1
    655c:	0f b6       	in	r0, 0x3f	; 63
    655e:	f8 94       	cli
    6560:	de bf       	out	0x3e, r29	; 62
    6562:	0f be       	out	0x3f, r0	; 63
    6564:	cd bf       	out	0x3d, r28	; 61
    6566:	ed 01       	movw	r28, r26
    6568:	08 95       	ret

0000656a <_exit>:
    656a:	f8 94       	cli

0000656c <__stop_program>:
    656c:	ff cf       	rjmp	.-2      	; 0x656c <__stop_program>
